(window.webpackJsonp=window.webpackJsonp||[]).push([[798],{2928:function(a,t,s){"use strict";s.r(t);var e=s(46),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("git对于大家应该都不太陌生，熟练使用git已经成为程序员的一项基本技能，尽管在工作中有诸如 Sourcetree这样牛X的客户端工具，使得合并代码变的很方便。但找工作面试和一些需彰显个人实力的场景，仍然需要我们掌握足够多的git命令。")]),a._v(" "),s("p",[a._v("下边我们整理了45个日常用git合代码的经典操作场景，基本覆盖了工作中的需求。")]),a._v(" "),s("h2",{attrs:{id:"我刚才提交了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我刚才提交了什么"}},[a._v("#")]),a._v(" 我刚才提交了什么？")]),a._v(" "),s("p",[a._v("如果你用git commit -a 提交了一次变化(changes)，而你又不确定到底这次提交了哪些内容。你就可以用下面的命令显示当前HEAD上的最近一次的提交(commit)")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$ git show\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 或者")]),a._v("\n$ git log "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("n1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("p\n")])])]),s("h2",{attrs:{id:"我的提交信息-commit-message-写错了"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我的提交信息-commit-message-写错了"}},[a._v("#")]),a._v(" 我的提交信息(commit message)写错了")]),a._v(" "),s("p",[a._v("如果你的提交信息(commit message)写错了且这次提交还没有推，你可以通过下面的方法来修改提交信息(commit message)")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$ git commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("amend "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("only\n")])])]),s("p",[a._v("这会打开你的默认编辑器，在这里你可以编辑信息。另一方面，你也可以用一条命令一次完成")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$ git commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("amend "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("only "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("m "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'xxxxxx'")]),a._v("\n")])])]),s("p",[a._v("如果你已经push了这次提交(commit)，你可以修改这提交(commit)然后强推(force push)，但是不推荐这么做。")]),a._v(" "),s("h2",{attrs:{id:"我提交-commit-里的用户名和邮箱不对"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我提交-commit-里的用户名和邮箱不对"}},[a._v("#")]),a._v(" 我提交(commit)里的用户名和邮箱不对")]),a._v(" "),s("p",[a._v("如果这只是单个提交(commit)，修改它")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$ git commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("amend "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("author "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"New Authorname <authoremail@mydomain.com>"')]),a._v("\n")])])]),s("p",[a._v("如果你需要修改所有历史，参考'git filter-branch'的指南页")]),a._v(" "),s("h2",{attrs:{id:"我想从一个提交-commit-里移除一个文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我想从一个提交-commit-里移除一个文件"}},[a._v("#")]),a._v(" 我想从一个提交(commit)里移除一个文件")]),a._v(" "),s("p",[a._v("通过下面的方法，从一个提交(commit)里移除一个文件:")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$ git checkout "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("HEAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" myfile\n$ git add "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("A")]),a._v("\n$ git commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("amend\n")])])]),s("p",[a._v("这将非常有用，当你有一个开放的补丁(open patch)，你往上面提交了一个不必要的文件，你需要强推(force push)去更新这个远程补丁")]),a._v(" "),s("h2",{attrs:{id:"我想删除我的最后一次提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我想删除我的最后一次提交"}},[a._v("#")]),a._v(" 我想删除我的最后一次提交")]),a._v(" "),s("p",[a._v("如果你需要删除推了的提交(pushed commits),你可以使用下面的方法。可是，这会不可逆的改变你的历史，也会搞乱哪些已经从该仓库拉取(pulled)了的人的历史。简而言之，如果你不是很确定，千万不要这么做。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$ git reset "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("HEAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("hard\n$ git push "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("f "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("remote"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("breach"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),s("p",[a._v("如果你还没有推到远程，把git重置(reset)到你最后一次提交前的状态就可以了（同时保存暂存的变化）：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$ git reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("soft  "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("HEAD")]),a._v("@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("这至少能在没有推送之前有用，如果你已经推了，唯一安全能做的是 git revert SHAofBadCommit,呐会创建一个新的提交(commit)用于撤销前一个提交的所有变化(changes)；或者，如果你推的这个分支是rebase-safe的(例如：其他开发者不会从这个分支啦)，只需要使用git push -f")]),a._v(" "),s("h2",{attrs:{id:"删除任意提交-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除任意提交-commit"}},[a._v("#")]),a._v(" 删除任意提交(commit)")]),a._v(" "),s("p",[a._v("同样的警告:不到万不得已的时候不要这么做")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$ git rebase "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("onto "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("SHA1_OF_BAD_COMMIT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("SHA1_OF_COMMIT")]),a._v("\n$ git push "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("f "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("remote"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("branch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),s("p",[a._v("或者做一个 交互式rebase 删除那些你想要删除的提交(commit)里所对应的行")]),a._v(" "),s("h2",{attrs:{id:"我尝试推一个修正后的提交-amended-commit-到远程-但是报错"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我尝试推一个修正后的提交-amended-commit-到远程-但是报错"}},[a._v("#")]),a._v(" 我尝试推一个修正后的提交(amended commit)到远程，但是报错")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("To https://github.com/yourusername/repo.git\n! [rejected]        mybranch -> mybranch (non-fast-forward)\nerror: failed to push some refs to 'https://github.com/tanay1337/webmaker.org.git'\nhint: Updates were rejected because the tip of your current branch is behind\nhint: its remote counterpart. Integrate the remote changes (e.g.\nhint: 'git pull ...') before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\n")])])]),s("p",[a._v("注意，rebasing(见下面)和修正(amending)会用一个新的提交(commit)代替旧的，所以如果你之前你已经往远程仓库上推过一次修正前的提交(commit)，那你现在就必须强推(force push)(-f)。注意--总是确保你指明一个分支！")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("my"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("branch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("$ git push origin mybranch "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("f\n")])])]),s("p",[a._v("一般来说，要"),s("strong",[a._v("避免强推")]),a._v(".最好是创建和推(push)一个新的提交(commit)，而不是强推一个修正后的提交。后者会使那些与该分支或该分支的子分支工作的开发者，在源历史中产生冲突。")]),a._v(" "),s("h2",{attrs:{id:"我意外做了一次硬重置-hard-reset-我想找回我的内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我意外做了一次硬重置-hard-reset-我想找回我的内容"}},[a._v("#")]),a._v(" 我意外做了一次硬重置(hard reset),我想找回我的内容")]),a._v(" "),s("p",[a._v("如果你意外的做了 git reset --hard,你通常能找回你的提交(commit)，因为Git对每件事都会有日志，且都会保存几天")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("$ git reflog\n")])])]),s("p",[a._v("你将会看到一个你过去提交(commit)的列表，和一哥重置的提交。选择你要回到的提交的SHA，在重置一次：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("$ git reseet "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("hard "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("SHA1234")]),a._v("\n")])])]),s("hr"),a._v(" "),s("h2",{attrs:{id:"暂存-staging"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#暂存-staging"}},[a._v("#")]),a._v(" 暂存（Staging）")]),a._v(" "),s("h3",{attrs:{id:"我需要把暂存的内容添加到上一次的提交-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我需要把暂存的内容添加到上一次的提交-commit"}},[a._v("#")]),a._v(" 我需要把暂存的内容添加到上一次的提交（commit）")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("my"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("branch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("$ git commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("amend\n")])])]),s("h3",{attrs:{id:"我想要暂存一个新文件的一部分-而不是这个文件的全部"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我想要暂存一个新文件的一部分-而不是这个文件的全部"}},[a._v("#")]),a._v(" 我想要暂存一个新文件的一部分，而不是这个文件的全部")]),a._v(" "),s("p",[a._v("一般来说，如果你想要暂存一个文件的一部分，你可以这样做")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$ git add "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("patch filename"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("x\n")])])]),s("p",[a._v("-p 简写。这会打开交互模式，你将能够用s选项来分割提交(commit)；然而，如果这个文件是新的，会没有这个选择，添加一个新文件时候，这样做")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$ git add "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("N")]),a._v(" filename"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("x\n")])])]),s("p",[a._v("然后, 你需要用 e 选项来手动选择需要添加的行，执行 git diff --cached 将会显示哪些行暂存了哪些行只是保存在本地了")]),a._v(" "),s("h3",{attrs:{id:"我想把在一个文件里的变化-changes-加到两个提交-commit-里"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我想把在一个文件里的变化-changes-加到两个提交-commit-里"}},[a._v("#")]),a._v(" 我想把在一个文件里的变化(changes)加到两个提交(commit)里")]),a._v(" "),s("p",[a._v("git add 会把整个文件加入到一个提交。git add -p允许交互式的选择你想要提交的部分。")]),a._v(" "),s("h3",{attrs:{id:"我想把暂存的内容变成未暂存-把未暂存的内容暂存起来"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我想把暂存的内容变成未暂存-把未暂存的内容暂存起来"}},[a._v("#")]),a._v(" 我想把暂存的内容变成未暂存，把未暂存的内容暂存起来")]),a._v(" "),s("p",[a._v("多数情况下，你应该将所有的内容变为未暂存，然后在选择你想要的内容进行commit")]),a._v(" "),s("p",[a._v("但假定你就是想要这么做，这里你可以创建一个临时的commit来保存你已暂存的内容，然后暂存你的未暂存的内容并惊醒stash。然后reset最后一个commit将原本暂存的内容变为未暂存，最后stach pop回来。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$ git commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("m "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'WIP'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n$ git add "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n$ git stash\n$ git reset "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("HEAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v("\n$ git stach pop "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("index "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n")])])]),s("ul",[s("li",[a._v("注意1：这里使用pop仅仅是因为想尽可能保持幂等")]),a._v(" "),s("li",[a._v("注意2: 假如你不加上--index你会把暂存的文件标记为存储")])]),a._v(" "),s("h2",{attrs:{id:"未暂存-unstaged-的内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#未暂存-unstaged-的内容"}},[a._v("#")]),a._v(" 未暂存(Unstaged)的内容")]),a._v(" "),s("h3",{attrs:{id:"我想把未暂存的内容移动到一个新分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我想把未暂存的内容移动到一个新分支"}},[a._v("#")]),a._v(" 我想把未暂存的内容移动到一个新分支")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$ git checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("b my"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("branch\n")])])]),s("h3",{attrs:{id:"我想把未暂存的内容移动到另一个已存在的分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我想把未暂存的内容移动到另一个已存在的分支"}},[a._v("#")]),a._v(" 我想把未暂存的内容移动到另一个已存在的分支")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$ git stach\n$ git checkout my"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("branch\n$ git stash pop\n")])])]),s("h3",{attrs:{id:"我想丢弃本地未提交的变化-uncommitted-changes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我想丢弃本地未提交的变化-uncommitted-changes"}},[a._v("#")]),a._v(" 我想丢弃本地未提交的变化(uncommitted changes)")]),a._v(" "),s("p",[a._v("如果你只是想重置源(origin)和你本地(local)之间的一些提交(commit)，你可以")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("# one "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("commit")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("my"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("branch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("$ git reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("hard "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("HEAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v("\n# two "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("commits")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("my"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("branch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("$ git reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("hard "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("HEAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v("\n# four "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("commits")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("my"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("branch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("$ git reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("hard "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("HEAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("~")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v("\n# "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("or")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("$ git checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("f\n")])])]),s("p",[a._v("重置某个特殊的文件，你可以用文件名作为参数")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$git reset filename\n")])])]),s("h3",{attrs:{id:"我想丢弃某些未暂存的内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我想丢弃某些未暂存的内容"}},[a._v("#")]),a._v(" 我想丢弃某些未暂存的内容")]),a._v(" "),s("p",[a._v("如果你想丢弃工作拷贝中一部分内容，而不是全部。")]),a._v(" "),s("p",[a._v("签出(checkout)不需要的内容，保留需要的")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$ git checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("p \n# Anser y to all "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("of")]),a._v(" the snippets you want to drop\n")])])]),s("p",[a._v("另外一个方法是使用stash,Stash所有要保留下的内容，重置工作拷贝，重新应用保留的部分")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$ git stash "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("p\n# Select all "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("of")]),a._v(" the snippets you want to save\n$ git reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("hard\n$ git stash pop\n")])])]),s("p",[a._v("或者，stash你需要的部分，然后stash drop。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$ git stash "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("p\n# Select all "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("of")]),a._v(" the snippets you don't want to save\n$ git stash drop\n")])])]),s("h2",{attrs:{id:"分支-branches"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支-branches"}},[a._v("#")]),a._v(" 分支(Branches)")]),a._v(" "),s("h3",{attrs:{id:"我从错误的分支拉去了内容-或把内容拉取到了错误的分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我从错误的分支拉去了内容-或把内容拉取到了错误的分支"}},[a._v("#")]),a._v(" 我从错误的分支拉去了内容，或把内容拉取到了错误的分支")]),a._v(" "),s("p",[a._v("这是另外一种使用 git reflog 情况，找到在这次错误拉(pull)之前HEAD指向")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("$ git relog\nab7555f "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("HEAD")]),a._v("@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" pull origin wrong"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Fast"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("forward\nc5bc55a "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("HEAD")]),a._v("@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" checkout"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" checkout message goes here\n")])])]),s("p",[a._v("重置分支到你需的提交")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("$ git reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("hard c5bc55a\n")])])]),s("h3",{attrs:{id:"我想扔掉本地的提交-commit-以便我的分支与远程的保持一致"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我想扔掉本地的提交-commit-以便我的分支与远程的保持一致"}},[a._v("#")]),a._v(" 我想扔掉本地的提交(commit)，以便我的分支与远程的保持一致")]),a._v(" "),s("p",[a._v("先确认你没有推(push)你的内容到远程")]),a._v(" "),s("p",[a._v("git status会显示你领先(ahead)源(origin)多少个提交")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("my"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("branch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("$ git status\n# On branch my"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("branch\n# On branch my"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("branch\n# Your branch is ahead "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("of")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'origin/my-branch'")]),a._v(" by "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" commits"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n#   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("use "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"git push"')]),a._v(" to publish your local commits"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("一种方法是：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("$ git reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("hard origin"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("my"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("branch\n")])])]),s("h3",{attrs:{id:"我需要提交到一个新分支-但错误的提交到了main"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我需要提交到一个新分支-但错误的提交到了main"}},[a._v("#")]),a._v(" 我需要提交到一个新分支，但错误的提交到了main")]),a._v(" "),s("p",[a._v("在main下创建一个新分支，不切换到新分支，仍在main下")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("$ git branch my"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("branch\n")])])]),s("p",[a._v("把mian分支重置到前一个提交")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("mian"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("$ git reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("hard "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("HEAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v("\n")])])]),s("p",[a._v("HEAD^ 是 HEAD^1 的简写，你可以通过指定要设置的HEAD来进一步重置。")]),a._v(" "),s("p",[a._v("或者，如果你不想使用 HEAD^, 找到你想重置到的提交(commit)的hash(git log 能够完成)，然后重置到这个hash。使用git push 同步内容到远程。")]),a._v(" "),s("p",[a._v("例如，main分支想要重置到的提交的hash为a13b85e")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("$ git reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("hard a13b85e\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("HEAD")]),a._v(" is now at a13b85e\n")])])]),s("p",[a._v("签出(checkout)刚才新建的分支继续工作")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("$ git checkout my"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("branch\n")])])]),s("h3",{attrs:{id:"我想保留来自另外一个ref-ish的整个文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我想保留来自另外一个ref-ish的整个文件"}},[a._v("#")]),a._v(" 我想保留来自另外一个ref-ish的整个文件")]),a._v(" "),s("h2",{attrs:{id:"资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[a._v("#")]),a._v(" 资料")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/xinzhifu1/article/details/123271097",target:"_blank",rel:"noopener noreferrer"}},[a._v("45个Git经典操作场景"),s("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);