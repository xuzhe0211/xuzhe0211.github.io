(window.webpackJsonp=window.webpackJsonp||[]).push([[181],{1738:function(t,s,a){t.exports=a.p+"assets/img/1.fa5862d6.png"},1739:function(t,s,a){t.exports=a.p+"assets/img/2.0b7c0237.png"},1740:function(t,s,a){t.exports=a.p+"assets/img/3.e02d53ad.png"},2778:function(t,s,a){"use strict";a.r(s);var n=a(46),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("有3个容易混淆的前端框架概念")]),t._v(" "),n("ol",[n("li",[t._v("响应式更新")]),t._v(" "),n("li",[t._v("单向数据流")]),t._v(" "),n("li",[t._v("双向数据绑定")])]),t._v(" "),n("p",[t._v("在继续阅读本文前，读者可以思考下是否明确知道三者的含义。")]),t._v(" "),n("p",[t._v("这三者之所以容易混淆，是因为他们虽然同属前端框架范畴内的概念，但又不是同一抽象层级的概念，不好直接比较。")]),t._v(" "),n("p",[t._v("本文会从3个抽象层级入手讲解这三者的区别。")]),t._v(" "),n("h2",{attrs:{id:"响应式更新"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#响应式更新"}},[t._v("#")]),t._v(" 响应式更新")]),t._v(" "),n("p",[t._v("响应式更新也叫细粒度更新。同时，最近前端圈比较火的Signal这一概念描述的也是响应式更新")]),t._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[t._v("笼统的来讲，响应式更新描述的是状态与UI之间的关系，即状态变化如何映射到UI变化")])]),t._v(" "),n("p",[t._v("考虑如下例子")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("TodoApp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("todos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setTodos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" text"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sleep'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" completed"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("showCompleted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setShowCompleted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" filteredTodos "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useMemo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" todos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("todos")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("todo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("completed "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" showCompleted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("todos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" showCompleted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TodoList todos"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("filteredTodos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在TodoApp组件中，定义了两个状态：")]),t._v(" "),n("ul",[n("li",[t._v("待办事项todos")]),t._v(" "),n("li",[t._v("是否展示完成的事项 showCompleted\n以及根据上述状态派生出的状态filteredTodos。最终，返回<TodoList/>组件")])]),t._v(" "),n("p",[t._v("如果todos状态变化，UI该如何变化？即 我们如何知道状态变化的影响范围？这是，有两个思路")]),t._v(" "),n("ul",[n("li",[t._v("推(push)")]),t._v(" "),n("li",[t._v("拉(pull)")])]),t._v(" "),n("h3",{attrs:{id:"推的原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#推的原理"}},[t._v("#")]),t._v(" 推的原理")]),t._v(" "),n("p",[t._v("我们可以从变化的状态(例子中为todos)出发，根据状态的派生管理，一路推下去")]),t._v(" "),n("p",[n("img",{attrs:{src:a(1738),alt:"推"}})]),t._v(" "),n("p",[t._v("在例子中：")]),t._v(" "),n("ol",[n("li",[t._v("todos变化")]),t._v(" "),n("li",[t._v("filteredTodos由todos派生而来，变化传导到他这里")]),t._v(" "),n("li",[t._v("<TodoList/>组件依赖了filteredTodos，变化传导到他这里")]),t._v(" "),n("li",[t._v("确定了todos变化的最终影响范围后，更新对应UI")])]),t._v(" "),n("p",[t._v("这就建立了 "),n("strong",[t._v("状态与UI之间的关系")])]),t._v(" "),n("p",[t._v("除了「推」之外，还有一种被称为「拉」的方式。")]),t._v(" "),n("h3",{attrs:{id:"拉的原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#拉的原理"}},[t._v("#")]),t._v(" 拉的原理")]),t._v(" "),n("p",[t._v("同样的例子，我们也能建立 状态与可能的UI变化的关系，在反过来推到UI变化的方位")]),t._v(" "),n("p",[n("img",{attrs:{src:a(1739),alt:"拉"}})]),t._v(" "),n("p",[t._v("在例子中")]),t._v(" "),n("ol",[n("li",[t._v("todos变化")]),t._v(" "),n("li",[t._v("可能有UI变化(因为建立了 状态与可能的UI变化关系)")]),t._v(" "),n("li",[t._v("UI与<TodoList/>组件相关，判断它是否变化")]),t._v(" "),n("li",[t._v("<TodoList/>组件依赖filteredTodos，filteredTodos由todos而来，所以filteredTodos是变化的")]),t._v(" "),n("li",[t._v("既然filteredTodos变化了，那么<TodoList/>组件可能变化")]),t._v(" "),n("li",[t._v("计算变化的影响范围，更新UI")])]),t._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[t._v("在主流框架中，React的更新以推为主，Vue、Preact、Solid.js等更逗框架使用拉的方式")])]),t._v(" "),n("p",[t._v("本文聊的「响应式更新」就是「拉」这种方式的一种实现。")]),t._v(" "),n("h2",{attrs:{id:"单向数据流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#单向数据流"}},[t._v("#")]),t._v(" 单向数据流")]),t._v(" "),n("p",[t._v("我们可以发现，不管是推还是拉，他们都需要计算变化的影响范围，即一个状态变化后，究竟有多少组件会收影响")]),t._v(" "),n("p",[t._v("那么，从框架作者的绝对出发，是希望增加一些约束，来减少 计算影响范围 这一过程的复杂度")]),t._v(" "),n("p",[t._v("同样，从框架使用者的角度出发，也希望增加一些约束，当 计算影响范围 出 bug后，更容易排查问题。")]),t._v(" "),n("p",[n("strong",[t._v("这就有了 单向数据流")])]),t._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[t._v("单向数据流是一条约定，他规定了当状态变化后，变化产生的影响只会从上往下传递")])]),t._v(" "),n("p",[t._v("考虑如下例子")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Parent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Child data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" isEven "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("GrandChild data"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("isEven"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GrandChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("<Parent/>组件的状态num作为props传给<Child/>组件，再作为props传给<GrandChild/>组件，整个过程只能自上而下。")]),t._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[t._v("单向数据流 并不是实现前端框架必须遵循的原则，他的存在主要是为了减少开发者的心智负担，让状态变化后，计算影响范围这一过程可控")])]),t._v(" "),n("h2",{attrs:{id:"双向数据绑定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双向数据绑定"}},[t._v("#")]),t._v(" 双向数据绑定")]),t._v(" "),n("p",[t._v("当本文开篇聊响应式更新时，讨论的是状态与UI的关系，这是将框架作为一个整体来讨论，抽象层级比较高")]),t._v(" "),n("p",[t._v("当我们继续聊到单向数据流时，讨论的是状态变化的影响范围在组件间单向扩散，这是组件与组件的关系，抽象层级下降了一级")]),t._v(" "),n("p",[t._v("接下来我们要讨论的双向数据绑定，讨论的是单个组件内发生的事。")]),t._v(" "),n("p",[n("span",{staticStyle:{color:"blue"}},[t._v("双向数据绑定是状态+改变状态后触发的回调相结合的语法糖")])]),t._v(" "),n("blockquote",[n("p",[t._v("这里不讨论框架语境下语法糖一词是否完全准确")])]),t._v(" "),n("p",[t._v("比较指明的双向数据绑定实现，比如vue中的v-model语法")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input v"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("model"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),n("p",[t._v("相当于如下状态+事件回调的组合：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input @input"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"onInput"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vlaue"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),n("p",[t._v("我们可以用一张图概括本文介绍的3个概念之间的关系：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(1740),alt:"总结"}})]),t._v(" "),n("p",[t._v("概括起来主要是两点：")]),t._v(" "),n("ul",[n("li",[t._v("他们都是前端框架范畴内的概念")]),t._v(" "),n("li",[t._v("他们属于不同抽象层级的概念")])]),t._v(" "),n("p",[t._v("其中：")]),t._v(" "),n("ul",[n("li",[t._v("「双向数据绑定」描述的是「组件内逻辑与视图的关系」")]),t._v(" "),n("li",[t._v("「单向数据流」描述的是「组件之间的关系」")]),t._v(" "),n("li",[t._v("「响应式更新」描述的是「状态与UI之间的关系」")])]),t._v(" "),n("h2",{attrs:{id:"原文"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原文"}},[t._v("#")]),t._v(" "),n("a",{attrs:{href:"https://mp.weixin.qq.com/s/SEquFWzQyDiFtHq_thvXlA",target:"_blank",rel:"noopener noreferrer"}},[t._v("原文"),n("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);