(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{1629:function(t,a,e){t.exports=e.p+"assets/img/2bc23b74cff149eeadef5ac09821c0f8_tplv-k3u1fbpfcp-watermark.59344db4.jpg"},1630:function(t,a,e){t.exports=e.p+"assets/img/789b3a42946a40fbb426728c5da9c6d2_tplv-k3u1fbpfcp-watermark.6ddd1b30.gif"},1631:function(t,a,e){t.exports=e.p+"assets/img/9df1b81ac3d5409898026bba21cebab3_tplv-k3u1fbpfcp-watermark.4a154ed7.gif"},1632:function(t,a,e){t.exports=e.p+"assets/img/1d9c14d74aec4c14b7b7761e57af65d9_tplv-k3u1fbpfcp-watermark.d3cbf429.gif"},2708:function(t,a,e){"use strict";e.r(a);var s=e(46),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"什么是webpack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是webpack"}},[t._v("#")]),t._v(" 什么是webpack")]),t._v(" "),s("p",[t._v("webpack是一个打包工具，他的宗旨是一切静态资源皆可打包。")]),t._v(" "),s("p",[s("img",{attrs:{src:e(1629),alt:"webpack"}})]),t._v(" "),s("h2",{attrs:{id:"原理分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理分析"}},[t._v("#")]),t._v(" 原理分析")]),t._v(" "),s("p",[t._v("首先我们通过一个制作一个打包文件的原型")]),t._v(" "),s("p",[t._v("假设有两个js模型，这里我们先假设这两个模型是符合commonjs标准的es5模块.")]),t._v(" "),s("p",[t._v("语法和模块化规范转换的事我们先放一放，后面说。")]),t._v(" "),s("p",[t._v("我们的目的是将这两个模块大包围一个能在浏览器运行的文件，这个文件其实叫bundle.js")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// index.js\nvar add = require('add.js').default;\nconsole.log(add(1, 2));\n\n// add.js\nexport.default = function(a, b) { return a + b; }\n")])])]),s("p",[t._v("假设在浏览器中直接执行这个程序肯定会有问题，最主要的问你题是在浏览器中没有exports对象与require方法所以一定会报错。")]),t._v(" "),s("p",[t._v("我们需要通过模拟export对象和require对象。")]),t._v(" "),s("h3",{attrs:{id:"模拟export对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模拟export对象"}},[t._v("#")]),t._v(" 模拟export对象")]),t._v(" "),s("p",[t._v("首先我们知道在nodejs打包的时候我们会使用fs.readfileSync()来读取js文件。这样的话js文件会是一个字符串。而如果我们将字符串.而如果需要将字符串中的代码运行会有两个方法分别是new Function与Eval.")]),t._v(" "),s("p",[t._v("在这里我们选用执行效率高的eval。")]),t._v(" "),s("p",[s("img",{attrs:{src:e(1630),alt:"字符串执行"}})]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("exports = {};\neval('exports.default = function(a, b) {return a + b}'); // node 文件读取后的代码字符串\nexports.default(1, 3); // 4\n")])])]),s("p",[t._v("上面这段代码的运行结果可以将模块中的方法绑定奶在exports对象中。由于子模块中会声明变量，为了不污染全局我们使用一个自运行函数来封装一下")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var exports = {};\n(function(exports, code) {\n    eval(code);\n})(exports, 'exports.default = function(a, b) {return a + b}')\n")])])]),s("h3",{attrs:{id:"模拟require函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模拟require函数"}},[t._v("#")]),t._v(" 模拟require函数")]),t._v(" "),s("p",[t._v("require函数的功能比较简单，就是根据提供的file名称加载对应的模块。")]),t._v(" "),s("p",[t._v("首先我们先看看如果只有一个固定模块应该怎么写")]),t._v(" "),s("p",[s("img",{attrs:{src:e(1631),alt:"模拟reqire"}})]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function require(file) {\n    var exports = {};\n    (function(exports, code) {\n        eval(code)\n    })(exports, 'exports.default = function(a,b) {return a + b}');\n    return exports;\n}\nvar add = require('add.js').default;\ncosnole.log(add(1,2));\n")])])]),s("p",[t._v("完成来了固定模块，下面只需要少加改动，就将所有模块的文件名和代码字符串整理为一个ke-value表就可以根据传入的文件名加载不同的模块了。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("exports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" code")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" exports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index.js"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n    var add = require('add.js').default\n    console.log(add(1 , 2))\n        ")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add.js"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("exports.default = function(a,b){return a + b}")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("当然要说明的一点是真正webpack生成的bundle.js还需要增加模块见得依赖关系")]),t._v(" "),s("p",[t._v("叫做依赖图")]),t._v(" "),s("p",[t._v("类似下面的情况")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{\n    './src/index': {\n        'deps': {'./add.js': './src/add.js'},\n        'code': '...'\n    },\n    './src/add.js': {\n        'deps': {},\n        'code': '...'\n    }\n}\n")])])]),s("p",[t._v("另外，由于大多数前端程序都习惯使用es6语法所以还需要预先将es6语法转换为es5语法。")]),t._v(" "),s("p",[t._v("总结一下思路，webpack打包分为三个步骤")]),t._v(" "),s("p",[s("img",{attrs:{src:e(1632),alt:"webpack打包步骤"}})]),t._v(" "),s("ol",[s("li",[s("p",[t._v("分析依赖")])]),t._v(" "),s("li",[s("p",[t._v("es6转es5")])]),t._v(" "),s("li",[s("p",[t._v("替换exports和require")])])]),t._v(" "),s("p",[t._v("下面进入功能实现阶段")]),t._v(" "),s("h2",{attrs:{id:"代码实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[t._v("#")]),t._v(" 代码实现")]),t._v(" "),s("p",[t._v("我们的目标是将以下两个互相依赖的ES6Module打包为一个可以在浏览器中运行的JS文件(bundle.js)")]),t._v(" "),s("ul",[s("li",[t._v("处理模块化")]),t._v(" "),s("li",[t._v("多模块合并打包-优化网络请求")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// src/add.js\nexport default (a, b) =>  a+ b;\n\n// src/index.js\nimport add from './add.js';\nconsole.log(add(1,2));\n")])])]),s("h2",{attrs:{id:"分析模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分析模块"}},[t._v("#")]),t._v(" 分析模块")]),t._v(" "),s("p",[t._v("分析模块分为三个步骤：")]),t._v(" "),s("p",[t._v("模块的分析相当于对读取的文件代码字符串进行解析。这一步其实和高级语言的编译过程一致。需要将模块解析为抽象语法树AST,我们借助babel/parser来完成")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("AST(Abstract Syntax tree)抽象语法树，或简称语法树，是源代码语法解构的一种抽象表示。它以树状的形式表现编程语言的语法解构，树上的每个节点都表示源代码的一种解构"),s("a",{attrs:{href:"https://astexplorer.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://astexplorer.net/"),s("OutboundLink")],1)])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yarn add @babel/parser\nyarn add @babel/traverse\nyarn add @babel/core\nyarn add @babel/preset-env\n")])])]),s("ul",[s("li",[t._v("读取文件")]),t._v(" "),s("li",[t._v("收集一路来")]),t._v(" "),s("li",[t._v("编译与AST解析")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('const fs = require("fs");\nconst path = require("path");\nconst parser = require("@babel/parser");\nconst traverse = require("@babel/traverse").default;\nconst babel = require("@babel/core");\n\nfunction getModuleInfo(file) {\n  // 读取文件\n  const body = fs.readFileSync(file, "utf-8");\n\n  // 转化AST语法树\n  const ast = parser.parse(body, {\n    sourceType: "module", //表示我们要解析的是ES模块\n  });\n\n  // 依赖收集\n  const deps = {};\n  traverse(ast, {\n    ImportDeclaration({ node }) {\n      const dirname = path.dirname(file);\n      const abspath = "./" + path.join(dirname, node.source.value);\n      deps[node.source.value] = abspath;\n    },\n  });\n\n  // ES6转成ES5\n  const { code } = babel.transformFromAst(ast, null, {\n    presets: ["@babel/preset-env"],\n  });\n  const moduleInfo = { file, deps, code };\n  return moduleInfo;\n}\nconst info = getModuleInfo("./src/index.js");\nconsole.log("info:", info);\n')])])]),s("h3",{attrs:{id:"收集依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#收集依赖"}},[t._v("#")]),t._v(" 收集依赖")]),t._v(" "),s("p",[t._v("上一步开发的函数可以单独解析某一个模块，这一步我们需要开发一个函数从入口模块开始根据依赖关系进行递归解析。最后将依赖关系构成为依赖图（Dependency Graph）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/**\n * 模块解析\n * @param {*} file \n * @returns \n */\nfunction parseModules(file) {\n  const entry = getModuleInfo(file);\n  const temp = [entry];\n  const depsGraph = {};\n\n  getDeps(temp, entry);\n\n  temp.forEach((moduleInfo) => {\n    depsGraph[moduleInfo.file] = {\n      deps: moduleInfo.deps,\n      code: moduleInfo.code,\n    };\n  });\n  return depsGraph;\n}\n\n/**\n * 获取依赖\n * @param {*} temp \n * @param {*} param1 \n */\nfunction getDeps(temp, { deps }) {\n  Object.keys(deps).forEach((key) => {\n    const child = getModuleInfo(deps[key]);\n    temp.push(child);\n    getDeps(temp, child);\n  });\n}\n")])])]),s("h3",{attrs:{id:"生成bundle文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成bundle文件"}},[t._v("#")]),t._v(" 生成bundle文件")]),t._v(" "),s("p",[t._v("这一步我们需要将刚才编写的执行函数和依赖图合成起来输出最后的打包文件。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('function bundle(file) {\n  const depsGraph = JSON.stringify(parseModules(file));\n  return `(function (graph) {\n        function require(file) {\n            function absRequire(relPath) {\n                return require(graph[file].deps[relPath])\n            }\n            var exports = {};\n            (function (require,exports,code) {\n                eval(code)\n            })(absRequire,exports,graph[file].code)\n            return exports\n        }\n        require(\'${file}\')\n    })(${depsGraph})`;\n}\n\n\n!fs.existsSync("./dist") && fs.mkdirSync("./dist");\nfs.writeFileSync("./dist/bundle.js", content);\n\n')])])]),s("p",[t._v("最后可以编写一个简单的测试程序测试一下结果")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<script src="./dist/bundle.js"><\/script>\n')])])]),s("p",[t._v("output: 3")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/6961961165656326152",target:"_blank",rel:"noopener noreferrer"}},[t._v("做了一夜动画，让大家十分钟搞懂Webpack"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://webpack.docschina.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack官网"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);