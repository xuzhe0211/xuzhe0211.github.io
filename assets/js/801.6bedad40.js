(window.webpackJsonp=window.webpackJsonp||[]).push([[801],{2933:function(e,n,r){"use strict";r.r(n);var t=r(46),a=Object(t.a)({},(function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"命令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[e._v("#")]),e._v(" 命令")]),e._v(" "),r("h3",{attrs:{id:"启动命令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#启动命令"}},[e._v("#")]),e._v(" 启动命令")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("sudo yum install gitlab-runner # 安装\n\ngitlab-runner --debug <command> #调用模式排查错误特别有用\ngitlab-runner <dommand> --help #获取帮助信息\ngitlab-runner run # 普通用户模式，配置文件位置~/.gitlab-runner/config.toml\nsudo gitlab-runner run #超级用户模式 配置文件位置/ets/gitlab-runner/config.toml\n")])])]),r("h3",{attrs:{id:"注册命令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#注册命令"}},[e._v("#")]),e._v(" 注册命令")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("gitlab-runner register #默认交互模式下使用，非交互模式添加--non-interactive\ngitlab-runner list #此命令列出了保存在配置文件中所有运行程序\ngitlab-runner verify #此命令检查注册的runner是否可以连接，但不验证GitLab服务是否正在使用runner --delete删除\ngitlab-runner unregister #该命令使用GitLab取消已注册的runner\n\n# 使用令牌注销\ngitlab-runner unregister --url http://gitlab.example.com/ --token t0k3n\n\n# 使用名称注销 (同名删除第一个)\ngitlab-runner unregister --name test-runner\n\n# 注销所有\ngitlab-runner unregister --all-runners\n")])])]),r("h3",{attrs:{id:"服务命令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#服务命令"}},[e._v("#")]),e._v(" 服务命令")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("gitlab-runner install --user=gitlab-runner --working-directory=/homg/gitlab-runner\n\n# --user指定将用于执行构建的用户\n# --working-directory 指定将使用**Shell** executor运行构建时所有数据将存储在其中的根目录\n\ngitlab-runner uninstall # 该命令停止运行并从服务中卸载GitLab Runner.\n\ngitlab-runner start # 该命令启动GitLab Runner服务\n\ngitlab-runner stop # 该命令停止GitLab Runner服务\n\ngitlab-runner restart # 该命令将停止，然后启动GitLab Runner服务\n\ngitlab-runner status #此命令显示gitlab runner服务的状态。当服务正在运行时，退出代码为0;而当服务未运行，退出代码为非零\n")])])]),r("h2",{attrs:{id:"删除gitlab-runner"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#删除gitlab-runner"}},[e._v("#")]),e._v(" 删除gitlab-runner")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("sudo yum remove gitlab-runner\n")])])]),r("h2",{attrs:{id:"docker镜像内host问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像内host问题"}},[e._v("#")]),e._v(" docker镜像内host问题")]),e._v(" "),r("p",[e._v("宿主机内增加host的DNS解析可以访问")]),e._v(" "),r("p",[e._v("但是镜像容器内的host解析和宿主机不一致  必须主动增加--add-host xxx.xxxnet:10.13.32.1111 类似这种")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("docker run -d --name gitlab-runner --restart always  --add-host xxx.xxxnet:10.13.32.1111  --add-host xxxlab.ps.xxx.net:10.13.76.1341    -v /etc/gitlab-runner/:/etc/gitlab-runner        -v /var/run/docker.sock:/var/run/docker.sock        gitlab/gitlab-runner:latest\n")])])]),r("h2",{attrs:{id:"gitlab-runner容器内创建镜像"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-runner容器内创建镜像"}},[e._v("#")]),e._v(" gitlab-runner容器内创建镜像")]),e._v(" "),r("p",[e._v("在gitlab-runner容器内创建镜像，dns无法解析的问题")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('gitlab-runner register \\\n  --non-interactive \\\n  --executor="docker" \\\n  --docker-image="node:14" \\\n  --url="https://xxxx.xxx.xxx.net/" \\\n  --registration-token="NFsD_ko3dD_nshpJdFV1" \\\n  --description="name-runner" \\\n  --tag-list="name-devolop-tag" \\\n  --run-untagged="true" \\\n  --locked="false" \\\n  --docker-volumes="/etc/hosts:/etc/hosts" \\\n  --docker-extra-hosts="xxxx.xxx.xxxx.net:10.13.76.134" \\\n  --docker-network-mode="host"\n\n// 生成之后\n\n[[runners]]\n  name = "name-runner"\n  url = "https://xxxx.xxx.xxxx.net/"\n  token = "ysapCts-obqC6MHmSyyS"\n  executor = "docker"\n  [runners.custom_build_dir]\n  [runners.cache]\n    [runners.cache.s3]\n    [runners.cache.gcs]\n    [runners.cache.azure]\n  [runners.docker]\n    tls_verify = false\n    image = "node:14"\n    privileged = false\n    disable_entrypoint_overwrite = false\n    oom_kill_disable = false\n    disable_cache = false\n    volumes = ["/etc/hosts:/etc/hosts", "/cache"]\n    extra_hosts = ["xxxx.xxx.xxxx.net:10.13.76.134"]\n    shm_size = 0\n')])])]),r("h2",{attrs:{id:"docker创建并执行docker命令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker创建并执行docker命令"}},[e._v("#")]),e._v(" docker创建并执行docker命令")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('docker run -d --add-host xx.xz.net:10.13.32.1 --name nodepm2 -v /root/:/root/ -v /home/xz/deploy/:/home/xz/deploy/ -v /root/codes/:/root/codes/ -v /opt/xz/containers/nginx/www/:/opt/xz/containers/nginx/www/ -p 8933:8933 khub.***.cn/sreopen/node:14.2.0 sh -c "npm i -g pm2;cd /home/xz/deploy;npm i;pm2 start server.js --no-daemon"\n')])])]),r("h2",{attrs:{id:"资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[e._v("#")]),e._v(" 资料")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/sanduzxcvbnm/p/13891452.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("gitlab runner命令"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("a",{attrs:{href:"https://stackoverflow.com/questions/53370840/this-job-is-stuck-because-the-project-doesnt-have-any-runners-online-assigned",target:"_blank",rel:"noopener noreferrer"}},[e._v("This job is stuck, because the project doesn't have any runners online assigned to it. Go to Runners page\n"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/londa/article/details/94165073",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gitlab CI/CD 问题处理"),r("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=a.exports}}]);