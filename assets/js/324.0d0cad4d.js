(window.webpackJsonp=window.webpackJsonp||[]).push([[324],{1326:function(e,t,a){e.exports=a.p+"assets/img/170dcfa198484159_tplv-t2oaga2asx-zoom-in-crop-mark_1304_0_0_0.bd4dafeb.png"},2580:function(e,t,a){"use strict";a.r(t);var n=a(46),l=Object(n.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),n("ul",[n("li",[e._v("WebRTC可能对于大多数前端开发人员来说是陌生的，在日常的开发工作中一般不会有交集。但是如今火爆的C2C远程教学、云游戏等，都少不了WebRTC的影子。")]),e._v(" "),n("li",[e._v("WebRTC(Web Real-Time Communication)是一个可以用在视频聊天，音频聊天或P2P文件分享等Web App中的API")]),e._v(" "),n("li",[e._v("我的理解："),n("span",{staticStyle:{color:"blue"}},[e._v("建立一个端对端的音视频通信通道，两端通过建立的通道进行数据通讯")])])]),e._v(" "),n("h2",{attrs:{id:"webrtc三部曲"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webrtc三部曲"}},[e._v("#")]),e._v(" WebRTC三部曲")]),e._v(" "),n("p",[e._v("WebRTC主要由3个部分组成：")]),e._v(" "),n("ul",[n("li",[n("span",{staticStyle:{color:"blue"}},[e._v("getUserMedia:获取设备上可用媒体权限(视频、音频)，需要用户授权")])]),e._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[e._v("RTCPeerConnection:建立通讯通道用于传输视频、音频")])]),e._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[e._v("RTCDataChannel：建立通信的两端，通过RTCPeerConnection对象进行数据交换")])])]),e._v(" "),n("h2",{attrs:{id:"rtcpeerconnection建立连接的过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rtcpeerconnection建立连接的过程"}},[e._v("#")]),e._v(" RTCPeerConnection建立连接的过程")]),e._v(" "),n("p",[n("img",{attrs:{src:a(1326),alt:"RTCPeerConnection建立连接的过程"}})]),e._v(" "),n("p",[e._v("在上图中，RTCPeerConnection建立连接的过程由发起端、Stun服务器、信令服务器、应答端组成，Stun服务器、信令服务器需要根据自己的业务场景去实现，不过Stun服务器有一些公开的服务器，比如google提供的服务")]),e._v(" "),n("ol",[n("li",[n("span",{staticStyle:{color:"blue"}},[e._v("let rtcPeerConnection = new RTCPeerConnection({'iceServers': [{'url': 'stun:stun.google.com: 19302'}]}) 创建一个RTCPeerConnection对象")])]),e._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[e._v("连接信令服务器获取自己Id及连上信令服务器的其他端(这里可以看成有很多成员都在一个房间内，我们要知道这个房间内所有成员的名单)")])]),e._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[e._v("添加视频轨道，该轨道会传到到另一端(非连接的必要因素)")])]),e._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[e._v("创建一个offer，这个offer包含SDP对象，SDP对象中包含当前音视频的相关参数")])]),e._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[e._v("setLocalDescription保存SDP对象")])]),e._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[e._v("将包含SDP信息的参数发送到信令服务器")])]),e._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[e._v("应答端收到发起端的SDP信息后会调用setRemoteDescription保存SDP信息，并且创建一个应答的answer(SDP对象)发送给发起端")])]),e._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[e._v("发起端收到answer后通过setRemoteDescription保存answer中SDP信息")])]),e._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[e._v("发起端与应答端根据SDP信息创建好了相对应的音视频channel,开启icecandidate的数据收集。（icecandidate可以理解为是获取对等端的IP地址、公网IP地址），发起端通过onicecandidate收到candidate信息。")])]),e._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[e._v("发送端将收到的candidate信息通过信令服务器发送给应答端")])]),e._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[e._v("应答端通过addicecandidate将candidate保存起来")])]),e._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[e._v("同10，应答端将candidate信息发送给发起端")])]),e._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[e._v("发起端将收到的candidate（该描述描述了连接的远程端的状态）通过addIceCandidate传递给浏览器的ICE代理")])]),e._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[e._v("这样发起端与应答端就建立起了P2P音视频通道，发起端通过onaddstream回调接口接收应答端发送过来的视频流。")])])]),e._v(" "),n("h2",{attrs:{id:"结语"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[e._v("#")]),e._v(" 结语")]),e._v(" "),n("p",[e._v("以上是在共工作实践理解的RTCPeerConnection建立连接的全过程")]),e._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[e._v("连接流程不是唯一的，此流程也可以反过来连接，由服务端创建一个offer发起连接 ，可以解决一些特定场景的需求，比如兼容ios safari不兼容的特性，来完成safari webRtc的链接会话等。")])])])}),[],!1,null,null,null);t.default=l.exports}}]);