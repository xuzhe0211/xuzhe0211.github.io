(window.webpackJsonp=window.webpackJsonp||[]).push([[286],{2315:function(s,t,a){"use strict";a.r(t);var n=a(46),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("多年来，CSS 开发者一直希望能够根据元素内容来选择元素。虽然 CSS 提供了许多基于特征选择元素的选择器，但直到最近才有了根据元素内容选择元素的方法。")]),s._v(" "),n("p",[s._v("幸运的是，:has() 的引入改变了这一点。这个新功能是一个“颠覆者”，因为它允许你根据元素内容选择元素。")]),s._v(" "),n("p",[s._v("在本文中，我们将深入探讨其中一个最受期待的 CSS 特性：:has 伪类。事实证明，它远不仅仅是一个“父选择器”。")]),s._v(" "),n("h2",{attrs:{id:"语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[s._v("#")]),s._v(" 语法")]),s._v(" "),n("p",[s._v(":has伪类用于根据元素内容选择元素.它应用于我们想应用规则的元素上，并将其传递给应该包含的元素的选择器：")]),s._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token selector"}},[s._v("// 这里我们选择任何包含 h1 的具有 post类的元素\n.post:has(h1)")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v("background-color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" teal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("h2",{attrs:{id:"使用-has-作为父选择器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-has-作为父选择器"}},[s._v("#")]),s._v(" 使用 :has 作为父选择器")]),s._v(" "),n("p",[s._v("将:has 作为父选择器可以简化很多情况。以下是一些可能的示例：")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("在应用的某些页面上，你可能想要更改 body 元素的全局字体大小或背景颜色。在引入:has伪类之前，我们通常需要通过后端根据页面类型切换某些HTML类。然而通过父选择器，现在可以轻松实现")]),s._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token selector"}},[s._v("body:has(.container.legal-mentions)")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v("font-size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 80%"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])]),s._v(" "),n("li",[n("p",[s._v("在博客文章列表中，如果文章包含图片，我们希望这些文章的边距发生变化")]),s._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".post:has(img)")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v("margin-left")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])])]),s._v(" "),n("p",[s._v("这本身就非常强大，但是在使用 组合器 时，我们可以做得更多。")]),s._v(" "),n("h2",{attrs:{id:"进一步使用组合器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#进一步使用组合器"}},[s._v("#")]),s._v(" 进一步使用组合器")]),s._v(" "),n("blockquote",[n("p",[s._v("组合器以一种使它们彼此和文档中内容位置之间关系更有用的方式组合其他选择器---MDN")])]),s._v(" "),n("p",[s._v("我们可以在has中使用"),n("strong",[s._v("子代选择器 >")]),s._v(",已确保我们选择的是直接子元素。例如，要选择具有hr元素作为直接子元素的div元素，可以使用选择器 div:has(>hr)")]),s._v(" "),n("p",[s._v("我们可以使用"),n("strong",[s._v("相邻兄弟组合器 +")]),s._v(" 来选择紧跟在另一个元素后面的元素。例如，要选择一个标题后面跟着一个副标题，可以使用 title:has(+.subtitle)")]),s._v(" "),n("h2",{attrs:{id:"与其他伪类组合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#与其他伪类组合"}},[s._v("#")]),s._v(" 与其他伪类组合")]),s._v(" "),n("p",[s._v("当在子元素上悬停时，改变容易的杨阿是，牛吧？")]),s._v(" "),n("p",[s._v("我们可以把 has 与 hover 结合使用来实现这一点。例如，如果我们希望在容器中的任何链接 hover 时都有边框，可以使用以下代码：")]),s._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token selector"}},[s._v("container:has(a:hover)")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v("border")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 2px solid pink"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("h2",{attrs:{id:"浏览器支持"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器支持"}},[s._v("#")]),s._v(" 浏览器支持")]),s._v(" "),n("p",[s._v("截至 2023 年 6 月，:has 伪类仅在 Firefox 中缺失。然而，它在一个标志后面，所以很快应该会被支持！")]),s._v(" "),n("p",[n("img",{attrs:{src:a(837),alt:"浏览器兼容性"}})]),s._v(" "),n("h2",{attrs:{id:"结论"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[s._v("#")]),s._v(" 结论")]),s._v(" "),n("p",[s._v(":has 伪类是CSS选择器工具中的一个强大补充。它允许你根据元素内容选择元素，从而简化了许多情况，是你的代码更易于维护。通过使用组合器，你可以进一步细化选择并实现更高级的效果。")]),s._v(" "),n("p",[s._v("尽管在 Firefox 中仍然缺失，但预计它很快会得到支持。在发布到生产环境之前，请务必在所有主要浏览器中测试你的代码。")])])}),[],!1,null,null,null);t.default=r.exports},837:function(s,t,a){s.exports=a.p+"assets/img/20230625145739.a33ba6c3.png"}}]);