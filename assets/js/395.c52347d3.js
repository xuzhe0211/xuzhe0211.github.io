(window.webpackJsonp=window.webpackJsonp||[]).push([[395],{2168:function(e,s,a){"use strict";a.r(s);var t=a(46),r=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"docker启动容器后怎么设置volumes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker启动容器后怎么设置volumes"}},[e._v("#")]),e._v(" docker启动容器后怎么设置volumes")]),e._v(" "),a("h3",{attrs:{id:"在创建容器时设置-volumes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在创建容器时设置-volumes"}},[e._v("#")]),e._v(" 在创建容器时设置 volumes")]),e._v(" "),a("p",[e._v("推荐做法是，在运行容器时通过-v或 --mount选项挂载 volumes")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("docker rum -d -v /host/path:/container/path my-image\n")])])]),a("p",[e._v("这样在容器启动时就已经挂载了指定的 Volume。")]),e._v(" "),a("h3",{attrs:{id:"对现有容器挂载volumes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对现有容器挂载volumes"}},[e._v("#")]),e._v(" 对现有容器挂载volumes")]),e._v(" "),a("p",[e._v("如果容器已经存在，但没有设置 volumes，可以通过一下两种方法实现挂载")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("方法一：停止容器后重新创建")]),e._v(" "),a("p",[e._v("停止现有容器，使用docker create 或 docker run 创建一个新的容器，并添加需要的volumes")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("docker stop "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("container_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("rm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("container_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\ndocker run -d -v /host/path:/container/path my-image\n")])])]),a("p",[e._v("这种方式是最直接的，但会导致原容器被删除并重新创建。")])]),e._v(" "),a("li",[a("p",[e._v("方法二：通过docker cp 复制数据到 Volume后重新启动")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 先创建一个新的 Volume")]),e._v("\ndocker volume create my-volume\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 将现有容器的数据复制到新的 Volume 中")]),e._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("container_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(":/container/path /path/to/temp\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" /path/to/temp my-volume:/container/path\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 删除原容器，并使用 -v 选项重新运行容器，挂载新的 ")]),e._v("\ndocker run -d -v my-volume:/container/path my-image\n")])])])])]),e._v(" "),a("h3",{attrs:{id:"方法三通过-docker-run-创建临时挂载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法三通过-docker-run-创建临时挂载"}},[e._v("#")]),e._v(" 方法三通过 docker run 创建临时挂载")]),e._v(" "),a("p",[e._v("如果只需要临时访问某个 Volume，可以运行一个新的容器共享该 Volume。例如：")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("docker run -it --volumes-from "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("container_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" ubuntu\n")])])]),a("p",[e._v("这样，新创建的容器将共享指定容器的 Volumes。")]),e._v(" "),a("h3",{attrs:{id:"使用-docker-compose-添加-volume"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-docker-compose-添加-volume"}},[e._v("#")]),e._v(" 使用 docker-compose 添加 Volume")]),e._v(" "),a("p",[e._v("如果使用 docker-compose 管理容器，可以修改 volumes 然后重新启动服务")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("version: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'3'")]),e._v("\nservices:\n  app:\n    image: my-image\n    volumes:\n      - /host/path:/container/path\n")])])]),a("p",[e._v("运行以下命令以应用更改：")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("docker-compose up -d\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);