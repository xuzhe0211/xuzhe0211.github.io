(window.webpackJsonp=window.webpackJsonp||[]).push([[233],{1470:function(e,r,t){e.exports=t.p+"assets/img/8.4e387392.jpg"},1471:function(e,r,t){e.exports=t.p+"assets/img/9.1d982646.jpg"},2624:function(e,r,t){"use strict";t.r(r);var a=t(46),s=Object(a.a)({},(function(){var e=this,r=e.$createElement,a=e._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Sentry为一套开源的应用监控和错误追踪的解决方案。这套解决方案由对应各种语言的SDK和一套庞大的数据后台服务组成。应用需要通过与之绑定的token接入Sentry SDK完成数据上报配置。通过Sentry SDK的配置，还可以上报错误关联的版本信息、发布环境、同时Sentry SDK会自动捕获异常发生前的相关操作，便于后续异常追踪。异常数据上报到数据服务后，会通过过滤、关键信息提取、归纳展示在数据后台的Web界面中")]),e._v(" "),a("p",[e._v("转转使用Sentry监控前端错误已经有好几年了。我们在SDK端封装的统一的@zz-common/sentry库。从而实现了vue、react、小程序、node、ssr的同意接入和错误分级管理。可以参考文章："),a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzU0OTExNzYwNg==&mid=2247484793&idx=1&sn=a8949c19eaa1d42e155b3c318f95b23d&chksm=fbb58eb0ccc207a6249404465ebdb6bd7e5ca127098f057eea543bdc7cf87b0a8121954884b4&mpshare=1&scene=21&srcid=&sharer_sharetime=1577419408674&sharer_shareid=2ffb899af29757cd77958f17431b5436#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[e._v("转转商业前端错误监控系统(sentry)策略升级"),a("OutboundLink")],1),e._v(".之前我们使用的Sentry是源码安装的老版本。后来客户端需要接入Sentry并上传mapping文件。但是老版本的Sentry总是上传失败。所以我们就准备升级一下Sentry。本文就是用来记录Sentry升级部署和遇到的问题")]),e._v(" "),a("h2",{attrs:{id:"部署sentry服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署sentry服务"}},[e._v("#")]),e._v(" 部署Sentry服务")]),e._v(" "),a("p",[e._v("快速的部署Sentry服务，官方提供了基于Docker的Compose。Docker用来构建和容器化应用的开源容器化技术。Compose是用于配置和运行多docker应用的工具，可以通过一个配置文件配置应用的所有服务，并一键创建和运行这些服务。")]),e._v(" "),a("p",[e._v("部署配置要求：")]),e._v(" "),a("ul",[a("li",[e._v("Docker 19.03.6+")]),e._v(" "),a("li",[e._v("Compose 1.24.1+")]),e._v(" "),a("li",[e._v("4 CPU Cores")]),e._v(" "),a("li",[e._v("8 GB RAM")]),e._v(" "),a("li",[e._v("20 GB Free Disk Space")])]),e._v(" "),a("h3",{attrs:{id:"安装docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装docker"}},[e._v("#")]),e._v(" 安装docker")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("yum install docker -y\n\n# 查看版本信息\ndocker info \n或者\ndocker -v\n")])])]),a("h3",{attrs:{id:"docker镜像加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像加速"}},[e._v("#")]),e._v(" docker镜像加速")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('vim /etc/docker/daemon.json\n\n{\n  "registry-mirrors": [\n    "https://registry.docker-cn.com",    //国内官方镜像\n "https://mirrors.tuna.tsinghua.edu.cn",   //清华镜像\n "http://hub-mirror.c.163.com",    //网易163镜像\n "https://docker.mirrors.ustc.edu.cn",   //中科大镜像\n  ]\n}\n\n# 重启docker\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n')])])]),a("h2",{attrs:{id:"安装docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装docker-compose"}},[e._v("#")]),e._v(" 安装docker-compose")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("wget -O /usr/local/bin/docker-compose https://github.com/docker/compose/releases/download/1.27.3/docker-compose-Linux-x86_64\n\nchmod 777 /usr/local/bin/docker-compose\n\n# 查看docker-compose 版本\n\ndocker-compose version\n\n")])])]),a("h3",{attrs:{id:"克隆源代码到安装目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#克隆源代码到安装目录"}},[e._v("#")]),e._v(" 克隆源代码到安装目录")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("git clone https://github.com/getsentry/onpremise.git\n\n# 切换需要安装的分支\n\ngit checkout 21.4.1\n\n")])])]),a("h3",{attrs:{id:"运行部署脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行部署脚本"}},[e._v("#")]),e._v(" 运行部署脚本")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cd onpremise\n\n./install.sh\n")])])]),a("h3",{attrs:{id:"启动服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动服务"}},[e._v("#")]),e._v(" 启动服务")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker-compose up -d\n")])])]),a("h3",{attrs:{id:"sentry服务作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sentry服务作用"}},[e._v("#")]),e._v(" Sentry服务作用")]),e._v(" "),a("p",[e._v("通过docker ps 命令，我们可以看到Sentry启动的很多服务")]),e._v(" "),a("ul",[a("li",[e._v("redis")]),e._v(" "),a("li",[e._v("kafka")]),e._v(" "),a("li",[e._v("clickhouse")]),e._v(" "),a("li",[e._v("zookeeper")]),e._v(" "),a("li",[e._v("postgres")]),e._v(" "),a("li",[e._v("memcached")]),e._v(" "),a("li",[e._v("stmp")]),e._v(" "),a("li",[e._v("sentry-cron")]),e._v(" "),a("li",[e._v("sentry-worker")]),e._v(" "),a("li",[e._v("sentry-web")]),e._v(" "),a("li",[e._v("nginx\nSentry的整体运行流程如下图\n"),a("img",{attrs:{src:t(1470),alt:"sentry整体运行流程"}})])]),e._v(" "),a("h3",{attrs:{id:"配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[e._v("#")]),e._v(" 配置文件")]),e._v(" "),a("p",[e._v("onpremise部署之后的主要配置文件")]),e._v(" "),a("ul",[a("li",[e._v("config.yml配置文件")]),e._v(" "),a("li",[e._v("sentry.conf.py：为python代码，覆盖或合并至sentry服务中，从而影响sentry运行")]),e._v(" "),a("li",[e._v(".env：镜像版本、数据保留天数、端口等配置")])]),e._v(" "),a("h2",{attrs:{id:"升级sentry服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#升级sentry服务"}},[e._v("#")]),e._v(" 升级Sentry服务")]),e._v(" "),a("p",[e._v("新的服务已经安装完成，现在需要把旧的数据迁移到新的服务上面来。之前的服务是使用的单独的postgres集群")]),e._v(" "),a("h3",{attrs:{id:"修改数据库配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改数据库配置"}},[e._v("#")]),e._v(" 修改数据库配置")]),e._v(" "),a("p",[e._v("通过修改sentry.conf.py文件，把数据库配置到独立的集群")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("DATABASES = {\n    'default': {\n        'ENGINE': 'sentry.db.postgres',\n        'NAME': 'sentry',\n        'USER': 'postgres',\n        'PASSWORD': 'postgres',\n        'HOST': 'HOST',\n        'PORT': '7001',\n        'AUTOCOMMIT': True,\n        'ATOMIC_REQUESTS': False,\n    }\n}\n")])])]),a("h3",{attrs:{id:"运行升级命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行升级命令"}},[e._v("#")]),e._v(" 运行升级命令")]),e._v(" "),a("p",[e._v("sentry提供了升级命令，一键升级数据库到对应的新版本，但是需要注意之前的版本需要是9.1.2之上。如果小于9.1.2是不兼容的。只能通过命令把用户和项目数据导出。放弃之前的错误信息")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker-compose run -rm web upgrade\n")])])]),a("h2",{attrs:{id:"升级遇到的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#升级遇到的问题"}},[e._v("#")]),e._v(" 升级遇到的问题")]),e._v(" "),a("h3",{attrs:{id:"磁盘占用过大的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#磁盘占用过大的问题"}},[e._v("#")]),e._v(" 磁盘占用过大的问题")]),e._v(" "),a("p",[e._v("随着数据上报，服务器本地的磁盘占用会越来越大，Sentry默认的配置保留90天来说，全量接入磁盘会占用维持在一个比较大的值，同时这么大的数据量的查询也是一个负担。为了减轻负担，需要从服务端和业务应用端同时入手。总和考虑我将数据保留时常改为7天。修改.env文件即可。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SENTRY_EVENT_RETENTION_DAYS=7\n")])])]),a("p",[e._v("同时需要修改docker数据存储位置。docker volume默认挂在在/var目录下，我们的/var目录容量只有100G，随着服务的运行会很快占满，需要对docker volume挂在目录进行修改")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# 在容量最大的目录下创建文件夹\nmkdir -p /opt/var/lib\n\n# 停止docker 服务\nsystemctl stop docker\n\n# 迁移数据\n/bin/cp -a /var/lib/docker /opt/var/lib/docker && rm -rf /var/lib/docker &&  ln -s /opt/var/lib/docker /var/lib/docker\n\n# 重启 docker 服务\n\nsystemctl start docker\n")])])]),a("h3",{attrs:{id:"用户数量丢失"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用户数量丢失"}},[e._v("#")]),e._v(" 用户数量丢失")]),e._v(" "),a("p",[e._v("升级之后用户数量获取失败，也就是Sentry服务获取不到真实的IP。")]),e._v(" "),a("p",[e._v("在Sentry的管理后台中默认会关闭获取IP，需要手动的打开。")]),e._v(" "),a("p",[a("img",{attrs:{src:t(1471),alt:"用户数量丢失问题"}})]),e._v(" "),a("h2",{attrs:{id:"资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[e._v("#")]),e._v(" 资料")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/iQEShvNqY_aSw2gX5Cu6hA",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端异常监控 Sentry 的部署和升级"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/marco__/article/details/103056805",target:"_blank",rel:"noopener noreferrer"}},[e._v("sentry使用实践"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/7009565622883319844",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端工程接入sentry"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6957475955858210823#heading-15",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sentry原理--收集错误、上报"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844903620958224398",target:"_blank",rel:"noopener noreferrer"}},[e._v("搭建私有的前端监控服务"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6974424800563298341",target:"_blank",rel:"noopener noreferrer"}},[e._v("一定要看..."),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844903831256432648",target:"_blank",rel:"noopener noreferrer"}},[e._v("sentry和vue结合"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://events.jianshu.io/p/64a3b3283f0a",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sentry的应用接入与部署运维"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/hack1015/article/details/105624707",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sentry实时应用错误跟踪系统在Kubernetes中私有化部署"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/7083340345215287332",target:"_blank",rel:"noopener noreferrer"}},[e._v("最近部署文档-2024"),a("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=s.exports}}]);