(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{1411:function(t,a,e){t.exports=e.p+"assets/img/22.31904be3.jpg"},1412:function(t,a,e){t.exports=e.p+"assets/img/23.4d78a1b8.jpg"},1413:function(t,a,e){t.exports=e.p+"assets/img/24.cd795233.jpg"},1414:function(t,a,e){t.exports=e.p+"assets/img/terser.1bb1s5v3tt4w.9c2503d4.png"},1415:function(t,a,e){t.exports=e.p+"assets/img/25.68bd81ac.jpg"},2607:function(t,a,e){"use strict";e.r(a);var s=e(46),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("我们把性能优化的方向分为一下两个方面，有助于结构化的思考和系统分析")]),t._v(" "),s("ol",[s("li",[t._v("加载性能。如何更快的把资源从服务器中拉到浏览器，如Http与资源体积的各种优化，都是旨在加载性能的提升")]),t._v(" "),s("li",[t._v("渲染性能。如何更快的把资源在浏览器上进行渲染。如减少重绘重排，RIC等都旨在渲染性能的提升")])]),t._v(" "),s("h2",{attrs:{id:"核心性能指标与performance-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心性能指标与performance-api"}},[t._v("#")]),t._v(" 核心性能指标与Performance API")]),t._v(" "),s("p",[s("img",{attrs:{src:e(1411),alt:"核心性能指标"}})]),t._v(" "),s("ul",[s("li",[t._v("LCP: 加载性能。最大内容绘制应在2.5s内完成")]),t._v(" "),s("li",[t._v("FID: 交互性能。首次输入延迟应在100ms完成")]),t._v(" "),s("li",[t._v("CLS: 页面稳定性。累积布局偏移，需手动计算，CLS应保持在0.1以下。")])]),t._v(" "),s("h3",{attrs:{id:"计算与收集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算与收集"}},[t._v("#")]),t._v(" "),s("span",{staticStyle:{color:"red"}},[t._v("计算与收集")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://web.dev/vitals/",target:"_blank",rel:"noopener noreferrer"}},[t._v("web-vitals"),s("OutboundLink")],1),t._v(" "),s("span",{staticStyle:{color:"red"}},[t._v("当收集浏览器每个用户性能指标时，可通过web-vitals收集并通过"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Navigator/sendBeacon",target:"_blank",rel:"noopener noreferrer"}},[t._v("sendBacon"),s("OutboundLink")],1),t._v("上报到打点系统")])]),t._v(" "),s("li",[t._v("img")]),t._v(" "),s("li",[t._v("xhr")]),t._v(" "),s("li",[t._v("sendbacon")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import { getCLS, getFID, getLCP } from 'web-vitals';\n\nfunction sendToAnalytics(metric) {\n  const body = JSON.stringify(metric);\n  navigator.sendBeacon('/analytics', body)\n}\n\ngetCLS(sendToAnalytics);\ngetFID(sendToAnalytics);\ngetLCP(sendToAnalytics);\n")])])]),s("h2",{attrs:{id:"更快的传输-cdn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更快的传输-cdn"}},[t._v("#")]),t._v(" 更快的传输：CDN")]),t._v(" "),s("p",[t._v("将资源分发到CDN的边缘网络节点，使用户可就近获取所需内容，大幅减少了光纤传输距离，使全球各地用户打开网站都拥有良好的网络体验\n"),s("img",{attrs:{src:e(1412),alt:"CND"}})]),t._v(" "),s("h2",{attrs:{id:"更快的传输-http2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更快的传输-http2"}},[t._v("#")]),t._v(" 更快的传输：http2")]),t._v(" "),s("p",[t._v("http2的诸多特性决定了它更快的传输速度")]),t._v(" "),s("ol",[s("li",[t._v("多路复用，在浏览器可并行发送N条请求")]),t._v(" "),s("li",[t._v("首部压缩，更小的负载体积")]),t._v(" "),s("li",[t._v("请求优先级，更快的关键请求")])]),t._v(" "),s("p",[t._v("目前，网站已大多上了http2,可在控制台面板进行查看\n"),s("img",{attrs:{src:e(1413),alt:"http2"}})]),t._v(" "),s("p",[t._v("由于http2可并行请求，解决了http1.1线头阻塞的问题，一下几个性能优化点将会过时")]),t._v(" "),s("ol",[s("li",[t._v("资源合并，如 https://shanyue.tech/assets??index.js,interview.js,report.js")]),t._v(" "),s("li",[t._v("域名分片")]),t._v(" "),s("li",[t._v("雪碧图。将无数小图片合并成单个大图片")])]),t._v(" "),s("h2",{attrs:{id:"更快的传输-充分利用-http-缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更快的传输-充分利用-http-缓存"}},[t._v("#")]),t._v(" 更快的传输：充分利用 HTTP 缓存")]),t._v(" "),s("p",[t._v("更好的资源缓存策略，对于CDN来讲可减少回源次数，对于浏览器而言可减少请求发送次数。无论哪一点，对于二次网站访问具有更好的访问体验")]),t._v(" "),s("ul",[s("li",[t._v("缓存策略\n"),s("ul",[s("li",[t._v("强缓存:打包后带有hash值的资源(如/build/a3c8a8.js)")]),t._v(" "),s("li",[t._v("协商缓存：打包后不带有hash值的资源(如 /index.html)")])])]),t._v(" "),s("li",[t._v("分包加载(Bundle Spliting)\n"),s("ul",[s("li",[t._v("避免一行代码修改导致整个bundle的缓存失败")])])])]),t._v(" "),s("h2",{attrs:{id:"更快的传输-减少http请求及负载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更快的传输-减少http请求及负载"}},[t._v("#")]),t._v(" 更快的传输：减少HTTP请求及负载")]),t._v(" "),s("p",[t._v("对一个网站的资源进行压缩优化，从而达到HTTP负载的目的。")]),t._v(" "),s("ul",[s("li",[t._v("JS/CSS/images 等常规资源体积优化，这是一个大话题，在以下分别讨论")]),t._v(" "),s("li",[t._v("小图片优化，将小图标内联为Data URI,减少请求次数")]),t._v(" "),s("li",[t._v("图片懒加载\n"),s("ul",[s("li",[t._v("新的API： IntersectionObserver API")]),t._v(" "),s("li",[t._v("新的属性：loading=lazy")])])])]),t._v(" "),s("h2",{attrs:{id:"更小的体积-gzip-brotli"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更小的体积-gzip-brotli"}},[t._v("#")]),t._v(" 更小的体积：gzip/brotli")]),t._v(" "),s("p",[t._v("对JS、CSS、HTML等文版资源均有效，但是对图片效果不大")]),t._v(" "),s("ul",[s("li",[t._v("gzip通过LZ77算法与Huffman编码来压缩文件，重复度越高的文件可压缩的空间越大")]),t._v(" "),s("li",[t._v("brotli通过变种的LZ77、Huffman编码及二阶文件建模来压缩文件，更先进的压缩算法，比gzip有更高的性能和压缩率")])]),t._v(" "),s("p",[t._v("可在浏览器的Content-Encoding 响应头查看该网站是否开启了压缩算法，目前知乎、掘金等已全名开启了brotli压缩。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# Request Header\nAccept-Encoding: gzip, deflate, br\n\n# gzip\nContent-Encoding: gzip\n\n# brotli\nContent-Encoding: br\n")])])]),s("h2",{attrs:{id:"更小的体积-压缩混淆工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更小的体积-压缩混淆工具"}},[t._v("#")]),t._v(" 更小的体积：压缩混淆工具")]),t._v(" "),s("p",[t._v("Terser是JavaScript资源压缩的混淆的神器.")]),t._v(" "),s("ol",[s("li",[t._v("长变量名替换端变量")]),t._v(" "),s("li",[t._v("删除空格换行符")]),t._v(" "),s("li",[t._v("预计算 const a = 24 * 60* 60 => const a = 86400000")]),t._v(" "),s("li",[t._v("移除无法被执行的代码")]),t._v(" "),s("li",[t._v("移除无用的变量和函数")])]),t._v(" "),s("p",[t._v("可在 "),s("a",{attrs:{href:"https://try.terser.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Terser Repl"),s("OutboundLink")],1),t._v("在线查看代码压缩效果。")]),t._v(" "),s("p",[s("img",{attrs:{src:e(1414),alt:"Terser"}})]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://github.com/swc-project/swc",target:"_blank",rel:"noopener noreferrer"}},[t._v("swc"),s("OutboundLink")],1),t._v("是另外一个用以压缩JavaScript的工具，它拥有与Terser相同的API，由于它是由rust所写，因此它拥有更高的性能")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/terser/html-minifier-terser",target:"_blank",rel:"noopener noreferrer"}},[t._v("html-minifier-terser"),s("OutboundLink")],1),t._v("用以压缩HTML的工具")])]),t._v(" "),s("h2",{attrs:{id:"更小的体积-更小的javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更小的体积-更小的javascript"}},[t._v("#")]),t._v(" 更小的体积：更小的JavaScript")]),t._v(" "),s("p",[t._v("关于更小的Javascript，上面已总结了两条")]),t._v(" "),s("ol",[s("li",[t._v("gzip/brotli")]),t._v(" "),s("li",[t._v("terser(minify)")])]),t._v(" "),s("p",[t._v("还有一下几点可以考虑")]),t._v(" "),s("ol",[s("li",[t._v("路由懒加载，无需加载整个应用的资源")]),t._v(" "),s("li",[t._v("Tree Shaking: 无用导出将在生成环境进行删除")]),t._v(" "),s("li",[t._v("browserlist/babel: 及时更新browserlist，将会生产更小的垫片体积")])]),t._v(" "),s("p",[t._v("如何分析并优化当前项目的Javascript体积？如果使用webpack那就简单很多")]),t._v(" "),s("ol",[s("li",[t._v("使用webpack-bundle-analyze分析打包体积")]),t._v(" "),s("li",[t._v("对一些库替换为更小体积的库 如：moment -> dayjs")]),t._v(" "),s("li",[t._v("对一些库进行按需加载，如import lodash -> import lodash/get")]),t._v(" "),s("li",[t._v("对一些库使用支持Tree Shaking 如 import lodash -> import lodash-es")])]),t._v(" "),s("h2",{attrs:{id:"更小的体积-更小的图片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更小的体积-更小的图片"}},[t._v("#")]),t._v(" 更小的体积：更小的图片")]),t._v(" "),s("p",[t._v("在前端发展的现在，webp 普遍比 jpeg/png 更小，而 avif 又比 webp 小一个级别")]),t._v(" "),s("p",[t._v("为了无缝兼容，可选择 picture/source 进行回退处理")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<picture>\n  <source srcset="img/photo.avif" type="image/avif">\n  <source srcset="img/photo.webp" type="image/webp">\n  <img src="img/photo.jpg" width="360" height="240">\n</picture>\n')])])]),s("ol",[s("li",[t._v("更合适的尺寸: 当页面仅需显示 100px/100px 大小图片时，对图片进行压缩到 100px/100px")]),t._v(" "),s("li",[t._v("更合适的压缩: 可对前端图片进行适当压缩，如通过 sharp 等")])]),t._v(" "),s("h2",{attrs:{id:"渲染优化-关键渲染路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染优化-关键渲染路径"}},[t._v("#")]),t._v(" 渲染优化:关键渲染路径")]),t._v(" "),s("p",[t._v("以下五个步骤为关键渲染路径")]),t._v(" "),s("ol",[s("li",[t._v("HTML->DOM,将html解析为DOM")]),t._v(" "),s("li",[t._v("CSS->CSSDOM，将CSS解析为CSSDOM")]),t._v(" "),s("li",[t._v("DOM/CSSDOM -> Render Tree，将DOM与CSSDOM合并成渲染书")]),t._v(" "),s("li",[t._v("RenderTree -> Layout,确定渲染书中每个节点的位置信息")]),t._v(" "),s("li",[t._v("Layout->Paint，将每个节点渲在浏览器中")])]),t._v(" "),s("p",[t._v("渲染的优化很大程度上是对关键渲染路径进行优化")]),t._v(" "),s("h2",{attrs:{id:"preload-prefetch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#preload-prefetch"}},[t._v("#")]),t._v(" preload/prefetch")]),t._v(" "),s("p",[t._v("preload/prefetch 可控制HTTP优先级，从而达到关键请求更快响应的目的")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<link rel="prefetch" href="style.css" as="style">\n<link rel="preload" href="main.js" as="script">\n')])])]),s("ol",[s("li",[t._v("preload加载当前路由必须资源，优先极高.一般对于Bundle Spliting资源做preload")]),t._v(" "),s("li",[t._v("prefetch优先级低，在浏览器idle状态时加载资源。一般用以加载其他路由资源，如当页面出现link，可prefetch当前Link的路由资源。(next.js默认会对link做懒加载+preftech，即当某条Link出现页面中，即自动prefetch该Link指向的路由资源)")])]),t._v(" "),s("p",[t._v("捎带说一下dns-prefetch，可对主机地址进行预解析")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<link rel="dns-prefetch" href="//shanyue.tech">\n')])])]),s("h2",{attrs:{id:"渲染优化-防抖与节流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染优化-防抖与节流"}},[t._v("#")]),t._v(" 渲染优化：防抖与节流")]),t._v(" "),s("ol",[s("li",[t._v("防抖：防止抖动,单位时间内事件触发会被重置，避免事件被误伤触发多次。代码实现重在清零clearTimeout。防抖可以比坐等电梯，只要有一个人进来，就需要在等一会儿。业务场景有避免登录按钮多次点击的重复提交")]),t._v(" "),s("li",[t._v("节流:控制流量，单位时间内事件只能触发一次，与服务器端的限流(Rate Limit)类似。代码实现重在开锁关锁timer=timerout;timer= null.节流可以比做红绿灯，每等一个红灯时间就可以过一批")])]),t._v(" "),s("p",[t._v("无论是防抖还是节流都可以大幅度减少渲染次数，在React中还是可以使用use-debounce之类的hooks避免重新渲染")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useState "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useDebounce "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'use-debounce'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" funcdtion "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Input")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一秒钟渲染一次，打打降低了重新渲染的频率")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useDebounce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Input\n        defaultValue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        onChange"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setText")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Actual value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Debounce value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"渲染优化-虚拟列表优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染优化-虚拟列表优化"}},[t._v("#")]),t._v(" 渲染优化：虚拟列表优化")]),t._v(" "),s("p",[t._v("这又是一个老生常谈的话题，一般在视口内维护一个虚拟列表(仅渲染十几条数据左右)，监听视口窗口变化，从而从视口内的虚拟列表进行控制")]),t._v(" "),s("p",[t._v("在React中采用一下库")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://github.com/bvaughn/react-virtualized",target:"_blank",rel:"noopener noreferrer"}},[t._v("react-virtualized"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/bvaughn/react-window",target:"_blank",rel:"noopener noreferrer"}},[t._v("react-window"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"渲染优化-请求及资源缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染优化-请求及资源缓存"}},[t._v("#")]),t._v(" 渲染优化：请求及资源缓存")]),t._v(" "),s("p",[t._v("在一些前端系统中，当加载页面时会发送请求，路由切换出去再切换回来时又会重新发送请求，每次请求完成后会对页面重新渲染。")]),t._v(" "),s("p",[t._v("然而这些重新请求再大多数时是没有必要的，合理地对 API 进行缓存将达到优化渲染的目的。")]),t._v(" "),s("ol",[s("li",[t._v("对每一条 GET API 添加 key")]),t._v(" "),s("li",[t._v("根据 key 控制该 API 缓存，重复发生请求时将从缓存中取得")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function Example() {\n  // 设置缓存的 Key 为 Users:10086\n  const { isLoading, data } = useQuery(['users', userId], () => fetchUserById(userId))\n}\n")])])]),s("h2",{attrs:{id:"web-workers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-workers"}},[t._v("#")]),t._v(" Web Workers")]),t._v(" "),s("p",[t._v("试举一例：")]),t._v(" "),s("p",[t._v("在纯浏览器中，如何实现高性能的实时代码编译及转换？")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://rollupjs.org/repl/?version=2.64.0&shareable=JTdCJTIybW9kdWxlcyUyMiUzQSU1QiU3QiUyMm5hbWUlMjIlM0ElMjJtYWluLmpzJTIyJTJDJTIyY29kZSUyMiUzQSUyMiUyRiolMjBEWU5BTUlDJTIwSU1QT1JUUyU1Q24lMjAlMjAlMjBSb2xsdXAlMjBzdXBwb3J0cyUyMGF1dG9tYXRpYyUyMGNodW5raW5nJTIwYW5kJTIwbGF6eS1sb2FkaW5nJTVDbiUyMCUyMCUyMHZpYSUyMGR5bmFtaWMlMjBpbXBvcnRzJTIwdXRpbGl6aW5nJTIwdGhlJTIwaW1wb3J0JTIwbWVjaGFuaXNtJTVDbiUyMCUyMCUyMG9mJTIwdGhlJTIwaG9zdCUyMHN5c3RlbS4lMjAqJTJGJTVDbmlmJTIwKGRpc3BsYXlNYXRoKSUyMCU3QiU1Q24lNUN0aW1wb3J0KCcuJTJGbWF0aHMuanMnKS50aGVuKGZ1bmN0aW9uJTIwKG1hdGhzKSUyMCU3QiU1Q24lNUN0JTVDdGNvbnNvbGUubG9nKG1hdGhzLnNxdWFyZSg1KSklM0IlNUNuJTVDdCU1Q3Rjb25zb2xlLmxvZyhtYXRocy5jdWJlKDUpKSUzQiU1Q24lNUN0JTdEKSUzQiU1Q24lN0QlMjIlMkMlMjJpc0VudHJ5JTIyJTNBdHJ1ZSU3RCUyQyU3QiUyMm5hbWUlMjIlM0ElMjJtYXRocy5qcyUyMiUyQyUyMmNvZGUlMjIlM0ElMjJpbXBvcnQlMjBzcXVhcmUlMjBmcm9tJTIwJy4lMkZzcXVhcmUuanMnJTNCJTVDbiU1Q25leHBvcnQlMjAlN0JkZWZhdWx0JTIwYXMlMjBzcXVhcmUlN0QlMjBmcm9tJTIwJy4lMkZzcXVhcmUuanMnJTNCJTVDbiU1Q25leHBvcnQlMjBmdW5jdGlvbiUyMGN1YmUlMjAoeCUyMCklMjAlN0IlNUNuJTVDdHJldHVybiUyMHNxdWFyZSh4KSUyMColMjB4JTNCJTVDbiU3RCUyMiUyQyUyMmlzRW50cnklMjIlM0FmYWxzZSU3RCUyQyU3QiUyMm5hbWUlMjIlM0ElMjJzcXVhcmUuanMlMjIlMkMlMjJjb2RlJTIyJTNBJTIyZXhwb3J0JTIwZGVmYXVsdCUyMGZ1bmN0aW9uJTIwc3F1YXJlJTIwKCUyMHglMjApJTIwJTdCJTVDbiU1Q3RyZXR1cm4lMjB4JTIwKiUyMHglM0IlNUNuJTdEJTIyJTJDJTIyaXNFbnRyeSUyMiUzQWZhbHNlJTdEJTVEJTJDJTIyb3B0aW9ucyUyMiUzQSU3QiUyMmZvcm1hdCUyMiUzQSUyMmVzJTIyJTJDJTIybmFtZSUyMiUzQSUyMm15QnVuZGxlJTIyJTJDJTIyYW1kJTIyJTNBJTdCJTIyaWQlMjIlM0ElMjIlMjIlN0QlMkMlMjJnbG9iYWxzJTIyJTNBJTdCJTdEJTdEJTJDJTIyZXhhbXBsZSUyMiUzQSUyMjAwJTIyJTdE",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel Repl"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("如果纯碎使用传统的 Javascript 实现，将会耗时过多阻塞主线程，有可能导致页面卡顿。")]),t._v(" "),s("p",[t._v("如果使用 Web Worker 交由额外的线程来做这件事，将会高效很多，基本上所有在浏览器端进行代码编译的功能都由 Web Worker 实现。")]),t._v(" "),s("h2",{attrs:{id:"wasm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wasm"}},[t._v("#")]),t._v(" WASM")]),t._v(" "),s("ol",[s("li",[t._v("JS性能低下")]),t._v(" "),s("li",[t._v("C++/Rust 高性能")]),t._v(" "),s("li",[t._v("使用C++/Rust编写代码，然后在JavaScript环境运行")])]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("p",[t._v("在纯浏览器中，如何实现高性能的图片压缩？")]),t._v(" "),s("p",[t._v("基本很难做到，JavaScript的性能与生态决定了实现如片压缩的艰难")]),t._v(" "),s("p",[t._v("而借助于WASM就相当于借用了其他语言的生态")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://github.com/AOMediaCodec/libavif",target:"_blank",rel:"noopener noreferrer"}},[t._v("libavif"),s("OutboundLink")],1),t._v(": c语言写的avif解码编码库")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/webmproject/libwebp",target:"_blank",rel:"noopener noreferrer"}},[t._v("libwebp"),s("OutboundLink")],1),t._v(": C语言写的webp解码编码库")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/mozilla/mozjpeg",target:"_blank",rel:"noopener noreferrer"}},[t._v("mozjpeg"),s("OutboundLink")],1),t._v(": C语言写的jpeg解码编码库")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/shssoichiro/oxipng",target:"_blank",rel:"noopener noreferrer"}},[t._v("oxipng"),s("OutboundLink")],1),t._v(": Rust语言写的png优化库")])]),t._v(" "),s("p",[t._v("而由于 WASM，完全可以把这些其它语言的生态移植到浏览器中，从而实现一个高性能的离线式的图片压缩工具。")]),t._v(" "),s("p",[t._v("如果想了解这种的工具，请看看 "),s("a",{attrs:{href:"https://squoosh.app/",target:"_blank",rel:"noopener noreferrer"}},[t._v("squoosh"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("img",{attrs:{src:e(1415),alt:"squoosh"}})]),t._v(" "),s("h2",{attrs:{id:"资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[t._v("#")]),t._v(" 资料")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s/EyE1ZgpmXT3lq1LNL_l7FQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("2022 的前端性能优化指南"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://shanyue.tech/web-performance/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://shanyue.tech/web-performance/"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);