(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{2380:function(t,a,r){"use strict";r.r(a);var e=r(46),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("BFF是一种Web架构，全名为Backends for Frontends, 即为服务于前端的后端。这个词来源于 Sam Newman 的一篇文章 "),e("a",{attrs:{href:"https://samnewman.io/patterns/architectural/bff/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pattern: Backends For Frontends"),e("OutboundLink")],1),t._v("。BFF一般指的是在前端与后端之间增加一个中间层。为什么要在前端和后端之间增加一个BFF层呢？")]),t._v(" "),e("p",[t._v("计算机科学家 David Wheeler曾经说过一句话： All problems in computer science can be solved by another level of indirection。 计算机科学中的所有问题都可以通过加一层来解决。因此，需要使用BFF的场景，肯定是普通的前后端开发模式遇到了部分问题。例如在Sam Newman的文章中描述了BFF解决多个展示端的场景。")]),t._v(" "),e("h2",{attrs:{id:"多端展示问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多端展示问题"}},[t._v("#")]),t._v(" 多端展示问题")]),t._v(" "),e("p",[t._v("从系统一开始开发的时候只考虑了PC网页端的设计，服务器端API是为了PC网页端而服务的。但是后来随着移动互联网的兴起，移动端开始流行，决定在原有服务端的基础上开发移动端App,复用之前的API，但是原有API是为了PC端设计的，并不符合移动端的需求。")]),t._v(" "),e("ol",[e("li",[t._v("PC端的需求与移动端并不一定完全相同，现有接口无法满足所有移动端的新需求。")]),t._v(" "),e("li",[t._v("PC端电脑性能强，可以并发请求多个接口或进行部分较复杂的数据处理，但是移动端性能低，如果使用同样的多个接口，由前端组装数据，页面展示可能会出现延迟和卡顿现象")]),t._v(" "),e("li",[t._v("PC端的屏幕较大，展示内容较多且全面。但是移动端屏幕小，展示内容较少。而且部分数据的获取并不容易，需要后端调用许多服务。如果移动端复用PC段接口，会获取和传输部分无用数据，不仅消耗服务端资源，还浪费网络带宽")])]),t._v(" "),e("p",[e("img",{attrs:{src:r(937),alt:"多端展示"}})]),t._v(" "),e("p",[t._v("而且随着科技的发展和用户的需求，不同的展示端越来越多，在不仅在手机上会区分Android端，IOS端，而且还会有平板电脑端，手机网页端，PC网页端，PC的APP端等等。这些端的页面设计各不相同，对于数据的需求也不相同。假设我们复用同一个服务端和API接口，如果出现不满足需求的场景就加接口加字段，那么随着这些不同客户端的开发和迭代，服务端会变的大而臃肿，效率低下。而且同一个接口提供给太多前端调用，涉及到太多的逻辑，复杂性越来越高。")]),t._v(" "),e("p",[t._v("因此，"),e("span",{staticStyle:{color:"blue"}},[t._v("更好的方式就是服务端对展示进行解耦，服务端只负责提供数据，有专门的展示端负责前端的展示业务。这里的展示端就是BFF层")])]),t._v(" "),e("h2",{attrs:{id:"不同业务场景的展示模式差异"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#不同业务场景的展示模式差异"}},[t._v("#")]),t._v(" 不同业务场景的展示模式差异")]),t._v(" "),e("p",[t._v("在某些业务中,客户端的类型只有一种，但是在不同的场景下,展示的模式有差异。比如在"),e("a",{attrs:{href:"https://mp.weixin.qq.com/s/mhM9tfWBlIuMVkZQ-6C0Tw",target:"_blank",rel:"noopener noreferrer"}},[t._v("美团的BFF实践中"),e("OutboundLink")],1),t._v(",不同行业的团购货架展示模块不同，是两套独立定义的产品逻辑，并且会各自迭代")]),t._v(" "),e("p",[e("img",{attrs:{src:r(938),alt:"美团BFF"}})]),t._v(" "),e("p",[t._v("在这种业务场景下,虽然同一个客户端，但是业务不同，需求的数据格式和类型也不同，因此遇到与上面多端展示类似的接口问题")]),t._v(" "),e("h2",{attrs:{id:"端生命周期的需求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#端生命周期的需求"}},[t._v("#")]),t._v(" 端生命周期的需求")]),t._v(" "),e("p",[t._v("还有一种情形，是闲鱼团队遇到的短生命周期的需求。在普通的业务场景下，服务端正常稳定迭代开发。但是偶尔会有一些特殊的运营活动，这种活动时间较短，可能仅仅持续几天时间。")]),t._v(" "),e("p",[t._v("如果仅仅为了这些几天的活动，每次都要开新API，联调，甚至修改原有服务端的逻辑，成本较大，而且较为低效。如果加一层BFF，让前端可以直接获取数据，那么开发和联调会变的简单很多。")]),t._v(" "),e("h2",{attrs:{id:"业务整合需要"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#业务整合需要"}},[t._v("#")]),t._v(" 业务整合需要")]),t._v(" "),e("p",[t._v("在某些场景下，业务后端和需求比较复杂，例如这篇文章涉及到的场景，有一个Monments App,包含了像用户管理，关系管理，信息，头像等多种多样后端微服务。这些服务在前端展示的逻辑耦合性比较强。比如有些需要串行处理，例如得到服务1的结果才可以调用服务2，有些则可以并行处理。而数据合并和整理的逻辑较为复杂")]),t._v(" "),e("p",[e("img",{attrs:{src:r(939),alt:"BFF"}})]),t._v(" "),e("p",[t._v("网易云音乐也使用BFF进行微服务的调度以及数据的组装和适配")]),t._v(" "),e("p",[e("img",{attrs:{src:r(940),alt:"网易云"}})]),t._v(" "),e("p",[t._v("这时候可以设立一个BFF层，作为一个数据整合服务，将调用不同微服务接口，与数据处理的复杂逻辑都在BFF端实现，降低前端的复杂度，也提高了响应效率")]),t._v(" "),e("h2",{attrs:{id:"处理部分展示相关的业务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#处理部分展示相关的业务"}},[t._v("#")]),t._v(" 处理部分展示相关的业务")]),t._v(" "),e("p",[t._v("在使用了BFF之后，部分页面展示相关的业务逻辑可以抽象出来，交由BFF端处理")]),t._v(" "),e("p",[t._v("例如数据导出Excel下载服务，输入导入Excel上传服务。BFF层可以接收用导入的Excel，解析并处理表格数据，然后提供给服务端。在导出时，也可以调用服务端API获取数据，由BFF端整合提供给前端下载。在这种情形下，服务端只需要提供一个展示接口，就可以满足页面展示和导出两种不同格式的展示需求。导入也是同理。而且假设表格与页面展示要求的数据格式不同，例如导入时部分字段值需要作转换，那么也可以由BFF端处理这种差异。")]),t._v(" "),e("h2",{attrs:{id:"bff类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bff类型"}},[t._v("#")]),t._v(" BFF类型")]),t._v(" "),e("p",[t._v("BFF本身仅仅是一个概念，实现方式有多种，在实际中我们要根据不同的场景选取不同的方案。按照大类分，主要有单一BFF和多端BFF")]),t._v(" "),e("p",[e("img",{attrs:{src:r(941),alt:"BFF类型"}})]),t._v(" "),e("h3",{attrs:{id:"单一bff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单一bff"}},[t._v("#")]),t._v(" 单一BFF")]),t._v(" "),e("p",[t._v("单一的BFF主要对接服务端，根据展示服务的需求组装数据提供给每个端或者每种业务进行展示。")]),t._v(" "),e("p",[e("strong",[t._v("很多单一BFF都会用到GraphGL,他是由Facebook开发的数据查询工具。通过改工具，可以将不稳定的数据组装部分从从稳定的业务数据逻辑中剥离，使数据控制逻辑前移，开发模式由『下发数据』转变为『取数据』的过程")])]),t._v(" "),e("p",[t._v("例如美团、闲鱼、网易云音乐等的BFF,都提供了按需查询能力，一个BFF对接多种客户端或多种业务的需求。下面是美团使用的BFF架构设计")]),t._v(" "),e("p",[e("img",{attrs:{src:r(942),alt:"单一bff"}})]),t._v(" "),e("h3",{attrs:{id:"多端bff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多端bff"}},[t._v("#")]),t._v(" 多端BFF")]),t._v(" "),e("p",[t._v("多端BFF是指每种业务或者每种客户端采用自己独立的BFF层，这样每种客户端的服务更加灵活，不同的BFF端对于展示服务解耦性更高")]),t._v(" "),e("h3",{attrs:{id:"前端bff与后端bff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端bff与后端bff"}},[t._v("#")]),t._v(" 前端BFF与后端BFF")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.cn/post/7240404579133128760#heading-6",target:"_blank",rel:"noopener noreferrer"}},[t._v("大厂为啥都要用Node去写中间层(BFF)呢？"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=s.exports},937:function(t,a,r){t.exports=r.p+"assets/img/d48c07a01c6b4cc498eeb05cccbea1ce~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.1b5c6d38.png"},938:function(t,a,r){t.exports=r.p+"assets/img/e44bafffda554d0e8fd50e0534d20209~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.1c4de8d5.png"},939:function(t,a,r){t.exports=r.p+"assets/img/dc717f4fe8e84146b4e6fa2f9510ab29~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.994d0f65.png"},940:function(t,a,r){t.exports=r.p+"assets/img/43587032bab34966a9191d2c10c92030~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.749115c3.png"},941:function(t,a,r){t.exports=r.p+"assets/img/c9b5f54ca313431a949dbd256b270174~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.61243169.png"},942:function(t,a,r){t.exports=r.p+"assets/img/41db03c738da41cf8143406824b64a88~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.eeaccf38.png"}}]);