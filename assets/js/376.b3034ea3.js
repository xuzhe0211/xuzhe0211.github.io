(window.webpackJsonp=window.webpackJsonp||[]).push([[376],{2035:function(t,a,e){t.exports=e.p+"assets/img/2607748-d160b043e2f47a86.a286228d.png"},2924:function(t,a,e){"use strict";e.r(a);var s=e(46),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("git 大家都比较熟悉，下面来简单说说git flow。通过几个简单的使用，来比较一下git flow的方便之处。为了演示方便，我现在在远程新建一个代码仓库，名字叫做GitflowDemo。")]),t._v(" "),s("p",[t._v("要使用 git flow,我们的先进行git flow的安装")]),t._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("mac")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Homebrew")]),t._v("\n$ brew "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" git-flow-avh\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Macports")]),t._v("\n$ port "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" git-flow-avh\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Linux")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" git-flow\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Windows")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -q -O - --no-check-certificate https://raw.github.com/petervanderdoes/gitflow-avh/develop/contrib/gitflow-installer.sh "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" stable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v("我们以mac Homebrew为例进行安装。安装完成后，会提示安装成功。因为我已经安装过，所以提示已经安装完成。")]),t._v(" "),s("p",[t._v("安装完成后，我们进行git flow的初始化。")]),t._v(" "),s("p",[t._v("接下来将远程GitflowDemo仓库克隆到本地，并进入GitflowDemo目录。")]),t._v(" "),s("h2",{attrs:{id:"初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git flow init\n")])])]),s("p",[t._v("执行完后，会出现一些命名提示，如图，一般使用默认就好。")]),t._v(" "),s("p",[t._v("到此，git flow的安装以及初始化已经完成。下面来简单说说如何使用它。")]),t._v(" "),s("h2",{attrs:{id:"开发新功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发新功能"}},[t._v("#")]),t._v(" 开发新功能")]),t._v(" "),s("p",[t._v("需求: 新建一个test.txt，并添加内容")]),t._v(" "),s("h3",{attrs:{id:"使用-git-flow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-git-flow"}},[t._v("#")]),t._v(" 使用 git flow")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" flow feature start my-feature\nSwitched to a new branch "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'feature/my-feature'")]),t._v("\n")])])]),s("p",[t._v("结果如下\n"),s("img",{attrs:{src:e(2035),alt:"git flow start"}})]),t._v(" "),s("p",[t._v("根据图中的提示，我们知道一个新的分支'feature/my-feature'基于'develop'分支创建好了，并且目前我们所在的分支为'feature/my-feature'")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" test.txt\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'create test.txt'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" insertion"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncreate mode "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" test.txt\n")])])]),s("p",[t._v("我们来验证一下是不是完成了feature分支的开发。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\nOn branch feature/my-feature\nnothing to commit, working tree clean\n")])])]),s("p",[t._v("好，完成了。下一步：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" flow feature finish my-feature\nSwitched to branch "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'develop'")]),t._v("\nUpdating bde3a64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("e783fdf\nFast-forward\n test.txt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" +\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" insertion"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n create mode "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" test.txt\nDeleted branch feature/my-feature "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("was e783fdf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".\n\nSummary of actions:\n- The feature branch "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'feature/my-feature'")]),t._v(" was merged into "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'develop'")]),t._v("\n- Feature branch "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'feature/my-feature'")]),t._v(" has been locally deleted\n- You are now on branch "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'develop'")]),t._v("\n")])])]),s("p",[t._v("根据提示，我们看到了git flow feature finish my-feature这条语句的作用。")]),t._v(" "),s("ol",[s("li",[t._v("feature/my-feature 分支被merge到了develop分支")]),t._v(" "),s("li",[t._v("本地feature/my-feature分支被删除。我们现在处于develop分支")])]),t._v(" "),s("p",[t._v("来，我们验证下")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n* develop\n  master\n")])])]),s("p",[t._v("发现确实处于develop分支。")]),t._v(" "),s("h3",{attrs:{id:"不适用-git-flow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不适用-git-flow"}},[t._v("#")]),t._v(" 不适用 git flow")]),t._v(" "),s("p",[t._v("那么如果不适用git flow我们会怎么做呢？")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("新建一个分支")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b my-feature develop\n")])])])]),t._v(" "),s("li",[s("p",[t._v("当开发完成后，合并分支")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge --no-ff my-feature\nAlready up-to-date\n")])])])]),t._v(" "),s("li",[s("p",[t._v("删除本地my-feature分支")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("$ git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d my"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("feature\n")])])])]),t._v(" "),s("li",[s("p",[t._v("提交更改到远程 develop分支")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push oriing develop\n")])])])])]),t._v(" "),s("p",[t._v("比较两种方式就会发现，git flow方便了分支的管理,使用上更为简单。")]),t._v(" "),s("h2",{attrs:{id:"发布"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发布"}},[t._v("#")]),t._v(" 发布")]),t._v(" "),s("p",[t._v("需求: 新建readMe.txt并加入版本号与日期。")]),t._v(" "),s("h3",{attrs:{id:"使用-git-flow-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-git-flow-2"}},[t._v("#")]),t._v(" 使用 git flow")]),t._v(" "),s("p",[t._v("一、新建一个分支")]),t._v(" "),s("h2",{attrs:{id:"资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[t._v("#")]),t._v(" 资料")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2015/12/git-workflow.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 工作流程"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.jianshu.com/p/36292d36e41d",target:"_blank",rel:"noopener noreferrer"}},[t._v("git flow的使用"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);