(window.webpackJsonp=window.webpackJsonp||[]).push([[339],{1568:function(t,s,a){t.exports=a.p+"assets/img/0d42902275e94e20827dfc3afdd79d66_tplv-k3u1fbpfcp-watermark.febfcd58.jpg"},2681:function(t,s,a){"use strict";a.r(s);var n=a(46),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("最近遇到了一个老项目，比较有意思的是这个项目集前后端的代码于一起，而后端也会去修改前端代码，所以就出现了后端用IntelliJ IDEA来开发前端项目，而前端用VSCode来开发前端项目。于是，出现了代码规范的问题，所以整理了一下前端代码校验以及在Vue项目中的实践")])]),t._v(" "),n("p",[t._v("阅读完这篇文档，可收获")]),t._v(" "),n("ul",[n("li",[n("span",{staticStyle:{color:"red"}},[t._v("能够自己亲手写出一套ESLint配置;")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"red"}},[t._v("会知道业界都有哪些注明的JS代码规范，熟读他们可以让你写出更规范的代码;")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"red"}},[t._v("vue-cli在初始化一个包含代码检查的项目时都做了什么;")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"red"}},[t._v("Prettier是什么？为什么要使用它？如何与ESLint配合使用;")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"red"}},[t._v("EditorConfig又是什么？如何使用;")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"red"}},[t._v("如何在VSCode中通过插件来协助代码校验工作;")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"red"}},[t._v("如果保证push到远程仓库中的代码是符合规范的；")])])]),t._v(" "),n("h2",{attrs:{id:"eslint是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eslint是什么"}},[t._v("#")]),t._v(" ESLint是什么")]),t._v(" "),n("p",[n("span",{staticStyle:{color:"blue"}},[t._v("ESLint是一个集代码审查和修复的工具，它的核心功能是通过配置一个个规则来限制代码的合法性和风格。")])]),t._v(" "),n("h3",{attrs:{id:"配置解析器和解析参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置解析器和解析参数"}},[t._v("#")]),t._v(" 配置解析器和解析参数")]),t._v(" "),n("p",[t._v("ESLint的解析器，早期的时候用的是"),n("a",{attrs:{href:"https://esprima.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Esprima"),n("OutboundLink")],1),t._v(",后面基于Esprima v1.2.2版本开发了一个新的解析器"),n("a",{attrs:{href:"https://github.com/eslint/espree",target:"_blank",rel:"noopener noreferrer"}},[t._v("Espree"),n("OutboundLink")],1),t._v(",并且把它当做默认解析器。")]),t._v(" "),n("p",[n("strong",[t._v("除了使用ESLint自带的解析器外，还可以指定其他解析器:")])]),t._v(" "),n("ul",[n("li",[n("span",{staticStyle:{color:"blue"}},[t._v("@babel/eslint-parser:使Babel和ESLint兼容,对一些Babel语法提供支持")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[t._v("@typescript-eslint/parser：TSLint被弃用后，Typescript提供了此解析器用于将其与ESTree兼容，使ESLint对TypeScript进行支持。")])])]),t._v(" "),n("p",[t._v("为项目指定某个选择器的原则是什么？")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("如果你的项目用到了比较新的ES语法，比如ES2021的Promise.any(),那就可以指定@babel/eslint-parser为解析器;")])]),t._v(" "),n("li",[n("strong",[t._v("如果项目是基于TS开发的，那就使用@typescript-eslint/parser")])])]),t._v(" "),n("p",[t._v("除了指定解析器parser外，还可以额外配置解析器参数paserOptions")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ESLint默认解析器，也可以指定成别的")]),t._v("\n    parser"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"espree"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    parserOptions"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定要使用的ESMAScript版本，默认5")]),t._v("\n        ecmaVersion"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置为script(默认)或module(如果你的代码是ECMAScript模块)")]),t._v("\n        sourceType"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这是个对象，表示你想使用的额外的语言特性，所有选项默认都是false")]),t._v("\n        ecmafeatures"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否允许在全局作用域下使用 return 语句")]),t._v("\n            globalReturn"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否启用全局 strict 模式（严格模式）")]),t._v("\n            impliedStrict"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否启用JSX")]),t._v("\n            jsx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否启用对实验性的objectRest/spreadProperties的支持")]),t._v("\n            experimentalObjectRestSpread"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"指定环境env"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指定环境env"}},[t._v("#")]),t._v(" 指定环境env")]),t._v(" "),n("p",[t._v("指定不同的环境可以给对应环境下提供预设的全局变量。比如说在Browser环境下，可以使用window全局变量；在node环境下，可以使用process全局变量等；")]),t._v(" "),n("p",[t._v("ESLint中可配置的环境比较多，这里有份完整的列表，下面列出几个比较常见的：")]),t._v(" "),n("ul",[n("li",[t._v("browser：浏览器全局变量")]),t._v(" "),n("li",[t._v("node: Node全局变量和作用域")]),t._v(" "),n("li",[t._v("es6: es6中除了模块之外的其他特性,同时将自动设置parserOptions.ecmaVersion参数为6，依次类推ES2017是7，而ES2021是12；\n"),n("ul",[n("li",[t._v("es2017：parserOptions.ecmaVersion 为 8；")]),t._v(" "),n("li",[t._v("es2020：parserOptions.ecmaVersion 为 11；")]),t._v(" "),n("li",[t._v("es2021：parserOptions.ecmaVersion 为 12；\n配置方式")])])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    env"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        browser"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        node"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        es6"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        commonjs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        mocha"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        jquery"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("可以指定多个环境并不意味着配置的环境越多约好，实际配置的时候还是得依据当前项目的环境来选择")]),t._v(" "),n("h3",{attrs:{id:"配置全局变量globals"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置全局变量globals"}},[t._v("#")]),t._v(" 配置全局变量globals")]),t._v(" "),n("p",[t._v("ESLint的一些核心规则依赖于对代码在运行时可用的全局变量的了解。由于这些在不同环境之间可能会有很大差异，并且在运行时会进行修改，因此ESLint不会假设你的执行环境中存在哪些全局变量.")]),t._v(" "),n("p",[t._v("如果你想使用这些全局变量，那就可以通过globals来指定。比如在react.eslintrc.js里就把spyOnDev、spyOnProd等变量挂载了global下作为全局变量")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    globals"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        spyOnDev"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        spyOnProd"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("对于它的值需要特别说明：")]),t._v(" "),n("ul",[n("li",[t._v("false、readable、readonly这三个是等价的，表示变量只可读不可写；")]),t._v(" "),n("li",[t._v("true、writeable、writable这三个是等价的，表示变量可读科协")])]),t._v(" "),n("h3",{attrs:{id:"配置扩展extends"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置扩展extends"}},[t._v("#")]),t._v(" 配置扩展extends")]),t._v(" "),n("p",[t._v("实际项目中配置规则的时候,不可能团队一条一条的去商议配置，太费精力了。通常的做法是使用业内大家普遍使用的、遵循的编码规范；然后通过extends去引入这些规范。extends配置的时候接受字符串或者数组")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eslint:recommended'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'plugin:vue/essential'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eslint-config-standard'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以缩写成 'standard'")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@vue/prettier'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./node_modules/coding-standard/.eslintrc-es6'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("strong",[t._v("从上面的的配置，可以知道extends支持的配置类型可以是一下几种")])]),t._v(" "),n("ul",[n("li",[t._v("eslint开头的:是ESLint官方扩展;")]),t._v(" "),n("li",[t._v("plugin开头的:是插件类型扩展,比如plugin:vue/essential;")]),t._v(" "),n("li",[t._v("eslint-config开头的:来自npm包，使用时可以省略前缀eslint-config-,比如上面的可以直接写成standard；")]),t._v(" "),n("li",[t._v("@开头: 扩展和eslint-config一样，只是在npm包上面加了一层作用域scope")]),t._v(" "),n("li",[t._v("一个执行配置文件的相对路径或者绝对路径")])]),t._v(" "),n("p",[n("strong",[t._v("有哪些常用的、比较著名的扩展可以被extends引入呢")])]),t._v(" "),n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://eslint.org/docs/rules/",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint:recommended"),n("OutboundLink")],1),t._v(": ESLint内置的推荐规则，即ESLint Rules列表中打了钩的哪些规则")])]),t._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://eslint.org/docs/rules/",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint:all"),n("OutboundLink")],1),t._v(": ESLint内置的所有规则")])]),t._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://github.com/standard/eslint-config-standard",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-config-standard"),n("OutboundLink")],1),t._v("：standard 的 JS 规范；")])]),t._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://github.com/prettier/eslint-config-prettier",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-config-prettier"),n("OutboundLink")],1),t._v("：关闭和 ESLint 中以及其他扩展中有冲突的规则；")])]),t._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb-base",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-config-airbnb-base"),n("OutboundLink")],1),t._v("：airbab 的 JS 规范；")])]),t._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://github.com/AlloyTeam/eslint-config-alloy",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-config-alloy"),n("OutboundLink")],1),t._v("：腾讯 AlloyTeam 前端团队出品，可以很好的针对你项目的技术栈进行配置选择，比如可以选 React、Vue（现已支持 Vue 3.0）、TypeScript 等；")])])]),t._v(" "),n("h3",{attrs:{id:"使用插件plugins"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用插件plugins"}},[t._v("#")]),t._v(" 使用插件plugins")]),t._v(" "),n("h4",{attrs:{id:"eslint提供插件是干嘛用的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eslint提供插件是干嘛用的"}},[t._v("#")]),t._v(" ESLint提供插件是干嘛用的")]),t._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[t._v("ESLint虽然可以定义很多的rules，以及通过extends来引入更多的规则，但是说到底只是检查JS语法。"),n("strong",[t._v("如果需要检查Vue中的template或者React中的JSX，就束手无策了，所以引入插件的目的是为了增强ESLint的检查能力和范围")])])]),t._v(" "),n("h4",{attrs:{id:"如何配置插件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何配置插件"}},[t._v("#")]),t._v(" 如何配置插件")]),t._v(" "),n("p",[t._v("ESLint相关的插件命名形式有两种:不带命名空间的和带命名空间的，比如：")]),t._v(" "),n("ul",[n("li",[t._v("eslint-plugin-开发的可以省略这部分前缀")]),t._v(" "),n("li",[t._v("@/开头的；")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    plugins"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jquery'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是指 eslint-plugin-jquery")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@jquery/jquery'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是指 @jquery/eslint-plugin-jquery")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@foobar'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是指 @foobar/eslint-plugin")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("当需要基于插件进行extends和rules的配置的时候，需要加上插件的引用,比如")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    plugins"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jquery'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eslint-plugin-jquery")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@foo/foo'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @foo/eslint-plugin-foo")]),t._v("\n        '@bar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @bar/eslint-plugin")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'plugin:jquery/recommended'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'plugin:@foo/foo/recommended'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'plugin:@bar/recommended'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    rules"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jquery/a-rule'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@foo/foo/some-rule'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@bar/another-rule'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"配置规则rules"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置规则rules"}},[t._v("#")]),t._v(" 配置规则rules")]),t._v(" "),n("p",[t._v("ESLint提供了大量内置的规则，这里是它的规则列表"),n("a",{attrs:{href:"https://eslint.org/docs/rules/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ESLint Rules"),n("OutboundLink")],1),t._v(",除此之外你还可以通过插件来添加更多的规则")]),t._v(" "),n("p",[n("strong",[t._v("规则校验说明，有3个报错等级")])]),t._v(" "),n("ul",[n("li",[n("span",{staticStyle:{color:"red","font-weight":"bold"}},[t._v("off或0：关闭对该规则校验")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"red","font-weight":"bold"}},[t._v("warn或1：启动规则，不满足抛出警告，且不会退出编译进程")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"red","font-weight":"bold"}},[t._v("error或2：启动规则，不满足抛出错误，且会退出编译进程")])])]),t._v(" "),n("p",[t._v("通常贵天泽值需要配置开启还是关闭即可；但是也有些规则可以传入属性比如：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    rules"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quotes'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'single'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果不是单引号，则报错")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'one-val'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'var'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'always'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每个函数作用域中，只允许1个val声明")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'let'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每个块作用域中，允许多个let声明")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'const'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每个块作用域中，允许多个const声明")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("如何知道某个扩展有哪些规则可以配置，以及每个规则具体限制？这里直接给我业内著名且使用比较多的规则列表的宽恕连接")]),t._v(" "),n("ul",[n("li",[t._v("ESLint rules，这整个列表对应 eslint:all，而打钩 ✔️ 的是 eslint:recommenmed；")]),t._v(" "),n("li",[t._v("Prettier rules")]),t._v(" "),n("li",[t._v("standard rules")]),t._v(" "),n("li",[t._v("airbnb rules")]),t._v(" "),n("li",[t._v("AlloyTeam vue rules")])]),t._v(" "),n("h4",{attrs:{id:"规则优先级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#规则优先级"}},[t._v("#")]),t._v(" 规则优先级")]),t._v(" "),n("ul",[n("li",[n("span",{staticStyle:{color:"red","font-weight":"bold"}},[t._v("如果 extends 配置的是一个数组，那么最终会将所有规则项进行合并，出现冲突的时候，后面的会覆盖前面的；")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"red","font-weight":"bold"}},[t._v("通过 rules 单独配置的规则优先级比 extends 高；")])])]),t._v(" "),n("h3",{attrs:{id:"其他配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他配置"}},[t._v("#")]),t._v(" 其他配置")]),t._v(" "),n("h4",{attrs:{id:"配置当前目录为root"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置当前目录为root"}},[t._v("#")]),t._v(" 配置当前目录为root")]),t._v(" "),n("p",[t._v("ESLint检测配置文件步骤")]),t._v(" "),n("ol",[n("li",[t._v("再要检测的文件同一目录里寻找.eslintrc.*和package.json;")]),t._v(" "),n("li",[t._v("紧接着在父级目录里寻找，一直到文件系统的根目录；")]),t._v(" "),n("li",[t._v("如果在前两步发现有 root：true 的配置，停止在父级目录中寻找 .eslintrc；")]),t._v(" "),n("li",[t._v("如果以上步骤都没有找到，则回退到用户主目录 ~/.eslintrc 中自定义的默认配置；")])]),t._v(" "),n("p",[n("span",{staticStyle:{color:"blue"}},[t._v("通常我们都习惯把 ESLint 配置文件放到项目根目录，因此可以为了避免 ESLint 校验的时候往父级目录查找配置文件，所以需要在配置文件中加上 root: true。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    root"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"添加共享数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加共享数据"}},[t._v("#")]),t._v(" 添加共享数据")]),t._v(" "),n("p",[t._v("ESLint支持在配置文件添加共享设置，你可以添加settings对象到配置文件，它将提供给每一个将被执行的规则.如果你想添加的自定义规则而且使它们可以访问到相同的信息，这将会很有用，并且很容易配置")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    settings"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        sharedData"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("参考：ESLint配置文件.eslintrc参数说明")]),t._v(" "),n("h3",{attrs:{id:"针对个别文件设置新的检查规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#针对个别文件设置新的检查规则"}},[t._v("#")]),t._v(" 针对个别文件设置新的检查规则")]),t._v(" "),n("p",[t._v("比如webpack的中包含了某些运行时的JS文件，而这些文件只是泡在浏览器端的，所以需要针对这部分文件进行差异化配置")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("overrides"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        files"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lib/**/*.runtime.js"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hot/*.js"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        env"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            es6"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            browser"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            globals"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            Promise"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        parserOptions"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            ecmaVersion"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("h2",{attrs:{id:"如何校验"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何校验"}},[t._v("#")]),t._v(" 如何校验")]),t._v(" "),n("p",[t._v("上面细说了ESLint的各种配置项，以及针对Vue如何进行差异配置的说明。")]),t._v(" "),n("p",[t._v("现在我们知道了如何配置，但是你知道这些配置都是配置到带那里了嘛？")]),t._v(" "),n("h3",{attrs:{id:"配置方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置方式"}},[t._v("#")]),t._v(" 配置方式")]),t._v(" "),n("p",[t._v("ESLint支持3中配置方式")]),t._v(" "),n("ul",[n("li",[t._v("命令行： 不推荐，不做介绍；")]),t._v(" "),n("li",[t._v("单文件内的注释：不推荐，不做介绍")]),t._v(" "),n("li",[t._v("配置文件：配置文件的类型可以是好几种，比如：.js、.yml、json等。推荐使用.eslintrc.js;")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装eslint")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i eslint -D\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化一个配置文件")]),t._v("\nnpx eslint --lint\n")])])]),n("p",[t._v("最后会在当前目录生成一个 .eslintrc.js 文件。这里就不把代码贴出来了，没参考意义。")]),t._v(" "),n("p",[t._v("上面我们知道了可以将配置统一写到一个配置文件里，但是你知道该如何去触发这个配置文件的校验规则嘛？")]),t._v(" "),n("h3",{attrs:{id:"检验单个文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#检验单个文件"}},[t._v("#")]),t._v(" 检验单个文件")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 校验a.js 和b.js")]),t._v("\nnpx eslint a.js b.js\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 校验src和scripts目录")]),t._v("\nnpx eslint src scripts\n")])])]),n("h3",{attrs:{id:"校验别的类型的文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#校验别的类型的文件"}},[t._v("#")]),t._v(" 校验别的类型的文件")]),t._v(" "),n("p",[t._v("通常ESLint只能校验JS文件。比如需要检验.vue文件，光配置vue插件和vue-eslint-parse解析器是不够的，还需要让ESLint在查找文件的时候找到.vue文件。")]),t._v(" "),n("p",[t._v("可以通过--ext来指定具体需要校验的文件")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("npx eslint --ext .js,.jsx,.vue src\n")])])]),n("h3",{attrs:{id:"自动修复部分校验错误的代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自动修复部分校验错误的代码"}},[t._v("#")]),t._v(" 自动修复部分校验错误的代码")]),t._v(" "),n("p",[t._v("rules列表项中表示了一个扳手 🔧图案的规则就是表示该规则是可以通过ESLint工具自动修复代码的。如果自动修复呢。通过--fix即可。比如对于ESLint Rules里的这个semi规则，它就是带扳手图案的。")]),t._v(" "),n("p",[t._v("对于如下a.js代码")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n")])])]),n("p",[t._v("当在配置文件配置了'semi': [2, 'always']后 运行命令")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("npx eslint "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("fix a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n")])])]),n("p",[t._v("校验直接就通过了，且会自动修复代码，在代码末尾自动加上分号。")]),t._v(" "),n("h3",{attrs:{id:"把校验命令加到package-json"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#把校验命令加到package-json"}},[t._v("#")]),t._v(" 把校验命令加到package.json")]),t._v(" "),n("p",[t._v("校验命令很长，也难记，习惯上会把这些命令直接加到package.json里")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scripts"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lint"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npx eslint --ext .js,.jsx,.vue src"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lint:fix"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npx eslint --fix --ext .js,.jsx,.vue src"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"过滤一些不需要校验的文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#过滤一些不需要校验的文件"}},[t._v("#")]),t._v(" 过滤一些不需要校验的文件")]),t._v(" "),n("p",[t._v("对于一些公共的JS、测试脚本或者特定目录下的文件习惯上是不需要校验的，因此可以在项目根目录通过创建一个.eslintignore 文件来配置，告诉 ESLint 校验的时候忽略它们：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("public/\nsrc/main.js\n")])])]),n("p",[t._v("除了.eslingignore中指定的文件或目录,ESLint总是忽略/node_modules/和/bower_component/中的文件;因此对于一些目前解决不了的规则报错，但是有急于打包上线，在不影响运行的情况下，我们就可以利用.eslintignore文件将其暂时忽略")]),t._v(" "),n("h2",{attrs:{id:"在vue项目中实践"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在vue项目中实践"}},[t._v("#")]),t._v(" 在Vue项目中实践")]),t._v(" "),n("p",[t._v("上面把 ESLint 的几乎所有的配置参数和校验方式都详细的介绍了一遍，但是如果想在项目中落地，仅仅靠上面的知识还是不够的。下面将细说如何在 Vue 中落地代码校验。")]),t._v(" "),n("p",[t._v("关于如何在 Vue 中落地代码校验，一般是有 2 种情况：")]),t._v(" "),n("ul",[n("li",[n("span",{staticStyle:{color:"red"}},[t._v("通过 vue-cli 初始化项目的时候已经选择了对应的校验配置")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"red"}},[t._v("对于一个空的 Vue 项目，想接入代码校验")])])]),t._v(" "),n("p",[t._v("其实这 2 种情况最终的校验的核心配置都是一样的，只是刚开始的时候安装的包有所区别。下面通过分析 vue-cli 配置的代码校验，来看看它到底做了哪些事情，通过它安装的包以及包的作用，我们就会知道如何在空项目中配置代码校验了。")]),t._v(" "),n("h3",{attrs:{id:"通过vue-cli初始化的项目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#通过vue-cli初始化的项目"}},[t._v("#")]),t._v(" 通过vue-cli初始化的项目")]),t._v(" "),n("p",[t._v("如果你的项目最初是通过vue-cli新建的，那么在新建的时候会让你选")]),t._v(" "),n("ul",[n("li",[t._v("是否支持eslint")]),t._v(" "),n("li",[t._v("是否开启保存校验")]),t._v(" "),n("li",[t._v("是否支持提交前校验")])]),t._v(" "),n("p",[t._v("如果都开启了话，会安装如下几个包：")]),t._v(" "),n("ul",[n("li",[t._v("eslint：前面 2 大章节介绍的就是这玩意，ESLint 出品，是代码校验的基础包，且提供了很多内置的 Rules，比如 eslint:recommended 经常被作为项目的 JS 检查规范被引入；")]),t._v(" "),n("li",[t._v("babel-eslint：一个对 Babel 解析器的包装，使其能够与 ESLint 兼容；")]),t._v(" "),n("li",[t._v("lint-staged：请看后面 pre-commit 部分；")]),t._v(" "),n("li",[t._v("@vue/cli-plugin-eslint")]),t._v(" "),n("li",[t._v("eslint-plugin-vue")])]),t._v(" "),n("p",[t._v("下面重点介绍 @vue/cli-plugin-eslint 和 eslint-plugin-vue，说下这 2 个包是干嘛的。")]),t._v(" "),n("h4",{attrs:{id:"vue-cli-plugin-eslint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli-plugin-eslint"}},[t._v("#")]),t._v(" @vue/cli-plugin-eslint")]),t._v(" "),n("p",[t._v("这个包它主要干了2件事情")]),t._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[n("strong",[t._v("第一件事")])])]),t._v(" "),n("p",[n("strong",[t._v("往package.json里注册了一个命令")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scripts"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lint"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vue-cli-service lint"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("执行这个命令后，它会去检查和修复部分可以修复的问题。默认查找的文件是src和tests目录下所有的.js,.jsx,.vue文件，以及项目根目录下所有的JS文件(比如也会检查.eslintrc.js)")]),t._v(" "),n("p",[t._v("当然你也可以自定义的传入参数和校验文件")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("vue"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cli"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("service lint "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("files"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),n("p",[t._v("支持的参数如下：")]),t._v(" "),n("ul",[n("li",[t._v("--no-fix: 不会修复 errors 和 warnings；")]),t._v(" "),n("li",[t._v("--max-errors [limit]：指定导致出现 npm ERR 错误的最大 errors 数量；")])]),t._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[n("strong",[t._v("第二件事")])])]),t._v(" "),n("p",[t._v("增加了代码保存触发校验的功能 lintOnSave，这个功能默认是开启的。如果想要关闭这个功能，可以在 vue.config.js 里配置，习惯上只开启 development 环境下的代码保存校验功能：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    lintOnSave"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'development'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("intOnSave 参数说明：")]),t._v(" "),n("ul",[n("li",[t._v("true 或者 warning：开启保存校验，会将 errors 级别的错误在终端中以 WARNING 的形式显示。默认的，WARNING 将不会导致编译失败；")]),t._v(" "),n("li",[t._v("false：不开启保存校验；")]),t._v(" "),n("li",[t._v("error：开启保存校验，会将 errors 级别的错误在终端中以 ERROR 的形式出现，会导致编译失败，同时浏览器页面变黑，显示 Failed to compile。")])]),t._v(" "),n("h4",{attrs:{id:"eslint-plugin-vue"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eslint-plugin-vue"}},[t._v("#")]),t._v(" eslint-plugin-vue")]),t._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[n("strong",[t._v("eslint-plugin-vue 是对 .vue 文件进行代码校验的插件。")])])]),t._v(" "),n("p",[n("strong",[t._v("针对这个插件，它提供了这几个扩展")])]),t._v(" "),n("ul",[n("li",[n("span",{staticStyle:{color:"blue"}},[t._v("plugin:vue/base: 基础")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[t._v("plugin:vue/essential: 预防错误的(用于Vue2.x)")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[t._v("plugin: vue/recommended: 推荐的，最小化任意选择和认知开销(用于vue2.x)")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[t._v("plugin: vue/strongly-recommended: 强烈推荐，提高可读性(用于Vue2.x)")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[t._v("vplugin: vue/vue3-essential:（用于vue3.x）")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[t._v("plugin: vue/vue3-recommended:(用于vue3.x)")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[t._v("plugin: vue/vue3-strongly-recommended:(用于Vue3.x)")]),t._v("\n各扩展规则列表:vue rules")])]),t._v(" "),n("p",[n("strong",[t._v("看到这么一堆的扩展，是不是都不知道选那个了")])]),t._v(" "),n("p",[t._v("代码规范的东西，原则还是得由各自的团队去磨合商议一套适合大家的规则。不过，如果你用的是vue2,我这里推荐2套extends配置")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vue官方示例上的配置")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eslint:recommended'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'plugin:vue/recommended'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者使用AlloyTeam团队那套")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'alloy'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'alloy/vue'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"配置和插件对应的解析器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置和插件对应的解析器"}},[t._v("#")]),t._v(" 配置和插件对应的解析器")]),t._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[t._v("如果是vue2.x项目，配置了eslint-plugin-vue插件和extends后，template校验还是会失效，因为不管是ESLint默认的解析器Espree还是babel-eslint都会能解析JS，无法解析template的内容")])]),t._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[n("strong",[t._v("而vue-eslint-parser只能解析template的内容，但是不会解析JS，因此还需要对解析器做如下配置")])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  parser"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue-eslint-parser'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  parseOptions"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    parser"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'babel-eslint'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ecmaVersion"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    sourceType"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eslint: recommended'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'plugin: vue/commended'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("参考：eslint-plugin-vue faq")]),t._v(" "),n("h3",{attrs:{id:"让prettier管控代码风格"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#让prettier管控代码风格"}},[t._v("#")]),t._v(" 让Prettier管控代码风格")]),t._v(" "),n("p",[t._v("针对Prettier不得不提出一下疑问？")]),t._v(" "),n("ul",[n("li",[t._v("Prettier是什么？")]),t._v(" "),n("li",[t._v("为什么有了ESLint,还需要引入Prettier？他两之间有什么区别")]),t._v(" "),n("li",[t._v("如果配置Prettier")]),t._v(" "),n("li",[t._v("Prettier如何和ESLint结合使用")])]),t._v(" "),n("h4",{attrs:{id:"prettier是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#prettier是什么"}},[t._v("#")]),t._v(" Prettier是什么")]),t._v(" "),n("p",[t._v("用它自己的话来说：我是一个自以为是的"),n("strong",[t._v("代码格式化")]),t._v("工具，而且我支持的文件类型很多，比如")]),t._v(" "),n("ul",[n("li",[t._v("javacript(包括实验中的特性)")]),t._v(" "),n("li",[t._v("jsx")]),t._v(" "),n("li",[t._v("Vue")]),t._v(" "),n("li",[t._v("Typescript")]),t._v(" "),n("li",[t._v("CS、Less、SCSS")]),t._v(" "),n("li",[t._v("HTML")]),t._v(" "),n("li",[t._v("JSON")]),t._v(" "),n("li",[t._v("Markdown\n以及还有一些其他类型的文件")])]),t._v(" "),n("h5",{attrs:{id:"prettier对比eslint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#prettier对比eslint"}},[t._v("#")]),t._v(" Prettier对比ESLint")]),t._v(" "),n("p",[n("strong",[t._v("我们知道ESLint负责了对代码的校验功能，并且主要提供了2类规则")])]),t._v(" "),n("ul",[n("li",[n("span",{staticStyle:{color:"red"}},[t._v("检查格式化的规则")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"red"}},[t._v("检查代码质量的规则")])])]),t._v(" "),n("p",[n("strong",[t._v("说到底ESLint就是通过一条条的规则去限制代码的规则，但是这些规则毕竟是有限的，而且更重要的是这些规则终点并不是在代码风格上，所以单凭ESLint并不能完全的同意代码风格")]),t._v("。")]),t._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[t._v("这个时候就需要引入Prettier了，因为它干的事就是直观代码格式化，不管代码质量")])]),t._v(" "),n("blockquote",[n("p",[t._v("Prettier:在代码风格这一块，我一直拿捏的死死的")])]),t._v(" "),n("h5",{attrs:{id:"如何配置prettier"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何配置prettier"}},[t._v("#")]),t._v(" 如何配置Prettier")]),t._v(" "),n("p",[t._v("初始化操作：")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装包")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i prettier -D\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建.prettierrc.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" module.exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" .prettierrc.js\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建.prettierignore")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" .prettierignore\n")])])]),n("p",[t._v("Prettier支持配置参数不对，总共才21个，这里是所有参数的说明"),n("a",{attrs:{href:"https://prettier.io/docs/en/options.html#print-width",target:"_blank",rel:"noopener noreferrer"}},[t._v("prettier options"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("所有的参数都有默认值，也就是说即使你没有配置.prettierrc.js,当你用Prettier去格式化代码的时候全部都会走默认设置。针对个别参数，你不想用默认设置的话，就可以在.prettierrc.js配置具体想要的值")]),t._v(" "),n("p",[t._v("如下，把项目中会用到的参数进行一个说明")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    printWidth"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//（默认值）单行代码超出 80 个字符自动换行")]),t._v("\n    tabWidth"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//（默认值）一个 tab 键缩进相当于 2 个空格")]),t._v("\n    useTabs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 行缩进使用 tab 键代替空格")]),t._v("\n    semi"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//（默认值）语句的末尾加上分号")]),t._v("\n    singleQuote"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用单引号")]),t._v("\n    quoteProps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'as-needed'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//（默认值）仅仅当必须的时候才会加上双引号")]),t._v("\n    jsxSingleQuote"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在 JSX 中使用单引号")]),t._v("\n    trailingComma"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'all'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在多行的逗号分隔的句法结构的最后一行的末尾加上逗号")]),t._v("\n    bracketSpacing"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//（默认值）在括号和对象的文字之间加上一个空格")]),t._v("\n    jsxBracketSameLine"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把 > 符号放在多行的 JSX 元素的最后一行")]),t._v("\n    arrowParens"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'avoid'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当箭头函数中只有一个参数的时候可以忽略括弧")]),t._v("\n    htmlWhitespaceSensitivity"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ignore'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vue template 中的结束标签结尾尖括号掉到了下一行")]),t._v("\n    vueIndentScriptAndStyle"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//（默认值）对于 .vue 文件，不缩进 <script> 和 <style> 里的内容")]),t._v("\n    embeddedLanguageFormatting"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'auto'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//（默认值）允许自动格式化内嵌的代码块")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("扩张阅读：关于"),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Trailing_commas",target:"_blank",rel:"noopener noreferrer"}},[t._v("Trailing commas"),n("OutboundLink")],1),t._v("你或许想了解更多")])]),t._v(" "),n("p",[t._v("然后可以通过命令来格式化代码")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将格式化当前目录及子目录下所有文件")]),t._v("\nnpx prettier --write "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查某个文件是否已经格式化")]),t._v("\nnpx prettier --check src/main.js\n")])])]),n("p",[t._v("如果不想被Prettier格式化，可以将其写入到.prettierignore里")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("build/\npackage.json\npublic/\ntest/*.*\n")])])]),n("h3",{attrs:{id:"prettier和eslint一起干活更配哦"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#prettier和eslint一起干活更配哦"}},[t._v("#")]),t._v(" Prettier和ESLint一起干活更配哦")]),t._v(" "),n("p",[t._v("上面介绍了Prettier的具体配置，这里主要介绍和ESLint组合使用的配置和注意事项")]),t._v(" "),n("p",[t._v("和ESLint配合使用需要用到eslint-plugin-prettier这个插件")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("npm i eslint-plugin-prettier -D\n")])])]),n("p",[t._v("配置")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    plugins"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prettier'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    rules"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prettier/prettier'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("span",{staticStyle:{color:"red"}},[n("strong",[t._v("这个插件的工作原理是先调用Prettier对你的代码进行格式化，然后会把格式化前后不一致的地方进行标记，通过配置'prettier/prettier':'error'此条规则会将标记地方进行error级别报错提示，然后可以通过ESLint的--fix自动修复功能将其修复")])])]),t._v(" "),n("h4",{attrs:{id:"冲突了怎么办"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#冲突了怎么办"}},[t._v("#")]),t._v(" 冲突了怎么办")]),t._v(" "),n("p",[t._v("通过前面的介绍，我们知道 ESLint 也是会对代码风格做一些限制的，而 Prettier 主要就是规范代码风格，所以在把它们结合一起使用的时候是存会在一些问题的。对于个别规则，会使得双方在校验后出现代码格式不一致的问题。")]),t._v(" "),n("p",[t._v("那么当 Prettier 和 ESLint 出现冲突之后，该怎么办呢？")]),t._v(" "),n("p",[t._v("用Prettier的话来说很简单，只要使用eslint-config-prettier就可以了。"),n("span",{staticStyle:{color:"red"}},[n("strong",[t._v("解决冲突的思路就是通过将这个包提供的扩展放到extends最后面引入，依据rules生效的优先级，所以它会覆盖前面起冲突的规则，比如")])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eslint: recommended'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prettier'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 必须放最后")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("span",{staticStyle:{color:"red"}},[t._v("除了能覆盖和ESLint中起冲突的规则之外，eslint-config-prettier还能覆盖以下插件规则(只列出了部分)")])]),t._v(" "),n("ul",[n("li",[t._v("eslint-plugin-standard")]),t._v(" "),n("li",[t._v("eslint-plugin-vue")])]),t._v(" "),n("p",[t._v("那eslint-config-prettier到底提供了那些覆盖规则呢？直接查看这个列表"),n("a",{attrs:{href:"https://github.com/prettier/eslint-config-prettier/blob/main/index.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-config-prettier rules"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("如果想要覆盖某些插件的规则，需要引入对应插件的扩张 比如")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'standard'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'plugin:vue/recommended'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prettier/standard'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 覆盖 eslint-config-stanard ")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prettier/vue'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 覆盖 eslint-plugin-vue ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),n("p",[t._v("提示：在eslint-config-prettier 8.0.0版本后，extends不在需要为单独的插件引入对应扩展来覆盖冲突了，统一引入prettier即可")])]),t._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[n("strong",[t._v("如果同时使用了eslint-plugin-prettier和eslint-config-prettier 可以这么配置")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("{\n  extends: ['plugin:prettier/recommended']\n}\n")])])]),n("p",[t._v("它其实和下面这些配置是等价的")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prettier'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eslint-config-prettier提供的，用于覆盖起冲突的规则")]),t._v("\n  plugins"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prettier'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册eslint-plugin-prettier 插件")]),t._v("\n  rules"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prettier/prettier'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'arrow-body-style'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prefer-arrow-callback'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'off'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("所以如果在vue2项目中配置ESLint和Prettier会怎么配置")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  parser"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue-eslint-parser'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  parserOptions"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    parser"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'babel-eslint'")]),t._v("，\n    ecmaVersion"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    sourceType"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eslint:recommended'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'plugin:vue/recommended'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'plugin:prettier/recommended'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在前面 Vue 配置的基础上加上这行")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  plugins"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("其实如果你的项目是用vue-cli初始化的，且选择了eslint+prettier方案的话，生成的项目中，.eslintrc.js配置文件中extends的配置是这样的")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'plugin:vue/essential'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eslint:recommended'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@vue/prettier'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("它的最后一项扩展是@vue/prettier，这个对应的是@vue/eslint-config-prettier,让我们看看这个包")]),t._v(" "),n("p",[t._v("下面的index.js内容")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  plugins"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prettier'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    require"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eslint-config-prettier'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    require"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eslint-config-prettier/vue'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  rules"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prettier/prettier'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'warn'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("这个和我们上面配置的内容相差无几的，而引入eslint-config-prettier/vue是因为这个@vue/eslin-config-prettier包依赖的eslint-config-prettier版本^6.0.0版本的，所以在处理冲突的时候需要特别指定和对应类型插件匹配的扩展")]),t._v(" "),n("h2",{attrs:{id:"让editorconfig助力多编辑器开发吧"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#让editorconfig助力多编辑器开发吧"}},[t._v("#")]),t._v(" 让EditorConfig助力多编辑器开发吧")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://editorconfig.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("EditorConfig"),n("OutboundLink")],1),t._v("是啥玩意？它可以对多重类型的单文件进行简单的格式化，它提供的配置参数很少：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("# 告诉 EditorConfig 插件，这是根文件，不用继续往上查找\nroot = true\n\n# 匹配全部文件\n[*]\n\n# 设置字符集\ncharset = utf-8\n\n# 缩进风格，可选 space、tab\nindent_style = tab\n\n# 缩进的空格数，当 indent_style = tab 将使用 tab_width\n# 否则使用 indent_size\nindent_size = 2\ntab_width = 2\n\n# 结尾换行符，可选 lf、cr、crlf\nend_of_line = lf\n\n# 在文件结尾插入新行\ninsert_final_newline = true\n\n# 删除一行中的前后空格\ntrim_trailing_whitespace = true\n\n# 匹配md结尾的文件\n[*.md]\ninsert_final_newline = false\ntrim_trailing_whitespace = false\n")])])]),n("p",[t._v("虽然它提供的格式化的配置参数很少，就3个，"),n("strong",[t._v("缩进风格、是否在文件末尾插入新行和是否删除一行中前后空格")]),t._v("。但是它还是非常有必要存在的理由有三个")]),t._v(" "),n("ul",[n("li",[t._v("能够在不同的编辑器和IDE中保持一致的代码风格")]),t._v(" "),n("li",[t._v("配合插件打开文件即自动格式化，非常方便")]),t._v(" "),n("li",[t._v("支持格式化的文件类型很多\n如果需要让以上配置生效，还得在VSCode里安装EditorConfig for VS Code 这个插件配合")])]),t._v(" "),n("p",[n("strong",[t._v("终点来了")])]),t._v(" "),n("p",[t._v("可以看到 EditorConfig 和 Prettier 会存在一些重复的配置，比如都提供了对缩进的配置参数，所以在实际使用的时候需要避免它们，或者把他们的参数设置为一致。")]),t._v(" "),n("h3",{attrs:{id:"在vscode中支持eslint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在vscode中支持eslint"}},[t._v("#")]),t._v(" 在VSCode中支持eslint")]),t._v(" "),n("p",[t._v("前面做的配置，都需要执行命令才能进行检查和修复代码，还是挺不方便的，如果我希望编辑完或保存的时候去检查代码改如何去做呢？可以直接在IDE里安装ESLint插件，因为我使用的是VSCode，所以这里只介绍vscode中配置")]),t._v(" "),n("p",[t._v("在使用前，需要把 ESLint 扩展安装到 VSCode 里，这里我就不细说安装步骤了。 安装完成后，需要在设置里写入配置：")]),t._v(" "),n("ul",[n("li",[t._v("在 VSCode 左下角找到一个齿轮 ⚙ 图标，点击后选择设置选项，这个时候打开了设置面板；")]),t._v(" "),n("li",[t._v("然后在 VSCode 右上角找到打开设置（json）的图标，点击后，会打开 settings.json 文件；")]),t._v(" "),n("li",[t._v("然后把以下配置贴进去即可；")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint.alwaysShowStatus"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 总是在 VSCode 显示 ESLint 的状态")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint.quiet"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 忽略 warning 的错误")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"editor.codeActionsOnSave"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 保存时使用 ESLint 修复可修复错误")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"source.fixAll"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"source.fixAll.eslint"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\t\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("配置说明，在ESLint 2.0.4版本开始:")]),t._v(" "),n("ul",[n("li",[t._v("不需要通过eslint.validate来指定校验的文件类型了，已经自动支持了.vue文件")]),t._v(" "),n("li",[t._v("editor.codeActionsOnSave 开启保存自动修复功能\n当这样配置之后呢，每次编辑代码ESLint都会实时校验代码，且当保存的时候会自动fix，是不是很方便呢。不过对于有些无法自动fix的代码就需要你手动去修改了，如果不想修改的话可以配置rules把该条规则给关闭掉")])]),t._v(" "),n("p",[t._v("其实在团队开发的时候，最好把针对VSCode的配置，写一个文件耿穗这项目，一起提交到远程仓库，这样的话就保证了项目成员都是用的这套配置。比如可以在项目的根目录新建.vscode/settings.json,然后写入上面的那串配置内容")]),t._v(" "),n("h3",{attrs:{id:"在提交前做校验pre-commit"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在提交前做校验pre-commit"}},[t._v("#")]),t._v(" 在提交前做校验pre-commit")]),t._v(" "),n("p",[t._v("以上只是通过ESLint自动修复能够修复的错误以及通过Prettier进行代码格式化，但是在实际开发的时候难免遇到无法fix的错误，可能开发人员也忘记修改，如果这个时候把代码提交到远程仓库，那就把糟糕的嗲吗提交上去了")]),t._v(" "),n("p",[t._v("那么如何杜绝把糟糕的代码提交上去呢，可以通过配置git hooks的pre-commit钩子来实现这个目的。主要是利用了husky和lint-staged这两个包。husky就是用来配置git hooks的，而lint-staged则是对拿到的staged文件进行处理，比如执行npx eslint --fix进行代码校验。")]),t._v(" "),n("p",[t._v("具体操作分两种情况")]),t._v(" "),n("ul",[n("li",[t._v("package.json和.git在同一个目录下")]),t._v(" "),n("li",[t._v("package.json和.git不在同一个目录下")])]),t._v(" "),n("h4",{attrs:{id:"package-json和-git在同一个目录下"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#package-json和-git在同一个目录下"}},[t._v("#")]),t._v(" package.json和.git在同一个目录下")]),t._v(" "),n("ol",[n("li",[t._v("执行一下命令")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("npx mrm lint-staged\n")])])]),n("p",[t._v("会自动安装lint-staged和husky并且在package.json里写入lint-staged")]),t._v(" "),n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),n("p",[t._v("注意：mrm是一个自动化工具，它会根据package.json依赖项中的代码质量工具来安装和配置 husky和lint-staged，因此请确保在此之前安装并配置所有代码质量工具如Prettier和eslint")])]),t._v(" "),n("p",[t._v("如果上面顺利会在package.json中吸入lint-staged,可以自行修改让他支持.vue文件校验")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lint-staged"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.{js,vue}"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("可能你在别的地方有看过如下这种在lint-staged最后一项加了git add的配置，这样也是没问题的。需要说明的是，如果lint-staged是11.x.x的版本已经自动实现了将修改过的代码自动添加暂存区的功能，所以不需要在加git add")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lint-staged"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.{js,vue}"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("启动git hooks")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("npx husky "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),n("p",[t._v("经过上面的命令后，v6版本的husky会在项目根目录新建一个.husky目录。如果是V4版本会写入到package.json里\n3. 创建pre-commit钩子")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("npx husky "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" .husky/pre-commit "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npx lint-staged"')]),t._v("\n")])])]),n("p",[t._v("到这里后，git commit 前自动执行代码校验和修复的功能就算完成了。然后你可以试试修改文件，然后提交试试。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(1568),alt:"husky"}})]),t._v(" "),n("h4",{attrs:{id:"package-json和-git在不同目录下"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#package-json和-git在不同目录下"}},[t._v("#")]),t._v(" package.json和.git在不同目录下")]),t._v(" "),n("p",[t._v("如果你的项目不是纯前端项目，而是前后端代码放在一个项目下，比如如下这个shop-system的项目结构")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("|-.git  // .git目录\n|- shop-service // 后端项目\n|- show-web // 前端项目\n")])])]),n("p",[t._v("如果package.json和.git在不同的目录下，那么通过第一种方式的npm nrm lint-staged 来创建会失败，将无法创建.husky目录，这个时候需要微微麻烦点了。")]),t._v(" "),n("p",[t._v("在shop-web目录终端下运行")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 husky")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" husky --save-dev\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动 git hooks")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" husky "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" shop-web/.husky\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加 pre-commit 钩子")]),t._v("\nnpx husky "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" .husky/pre-commit "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cd shop-web && npx lint-staged"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 lint-staged")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" lint-staged -D\n")])])]),n("p",[t._v("然后在package.json里配置lint-staged,就可以大功告成")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lint-staged"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.{js,vue}"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("参考："),n("a",{attrs:{href:"https://typicode.github.io/husky/#/?id=custom-directory",target:"_blank",rel:"noopener noreferrer"}},[t._v("自定义目录启动 git hook"),n("OutboundLink")],1),t._v(", "),n("RouterLink",{attrs:{to:"/front-end/engineering/best-husky.html"}},[t._v("前端代码规范检查最佳实践")])],1),t._v(" "),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),n("p",[t._v("这篇文章比较长，前前后后讲了很多代码校验的东西，现在我们来梳理下。")]),t._v(" "),n("p",[t._v("首先用 ESLint 来做代码校验，它自带的 ruels 能提供 2 种类型的校验，分别是代码错误校验和代码格式校验，而 ESLint 本身的核心工作其实就是校验和修复错误的代码，而对格式化的规则提供的不多。")]),t._v(" "),n("p",[t._v("所以如果我们相对代码格式化进行一个更加精细的配置则需要借助Prettier,因为它是只负责风格的管控，所以用它在合适不过了。但是如果ESLint和Perttier结合起来一起使用的话，就可能会出现规则的冲突了，毕竟两者都会对风格进行处理，所以这个时候就可以通过eslint-config-prettier这个扩展来把冲突的规则进行关闭，这个扩展不仅可以关闭和ESLint内置规则的冲突，还可以关闭实际项目中引用到的扩展规则的冲突，比如和Vue、React、Typescript、Flow的冲突")]),t._v(" "),n("p",[t._v("在把ESLint和Perttier结合的时候，我们希望让Eslint来检查代码的错误，而Prettier校验代码风格，那么这个时候其实有是有2个任务的，需要2条命令来处理。但是有了eslint-plugin-prettier这个插件就可以很方便的把他们结合起来，当需要校验代码错误的时候ESLint自动会给你校验，当然前提是VSCode离必须按ESLint插件，而当需要校验代码风格的时候ESLint就会调用Prettier的能力进行代码风格检查。")]),t._v(" "),n("p",[t._v("文章的后面分别又细说了EditorConfig和提交代码钱校验的处理，这里就不多讲了")]),t._v(" "),n("h2",{attrs:{id:"参考文档"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.cn/post/6974223481181306888",target:"_blank",rel:"noopener noreferrer"}},[t._v("原文地址"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://mp.weixin.qq.com/s/f3WzR5lXTZ4FNuzMqlXQdA",target:"_blank",rel:"noopener noreferrer"}},[t._v("原文地址1"),n("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);