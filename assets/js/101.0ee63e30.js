(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{1307:function(t,s,a){t.exports=a.p+"assets/img/1332607-81bfaf4dfb43bc9c.46d9769e.png"},1308:function(t,s,a){t.exports=a.p+"assets/img/37.7b295c0d.png"},1309:function(t,s,a){t.exports=a.p+"assets/img/38.8d09d2f6.png"},1310:function(t,s,a){t.exports=a.p+"assets/img/39.cc20df0c.png"},1311:function(t,s,a){t.exports=a.p+"assets/img/42.08a2d414.png"},2572:function(t,s,a){"use strict";a.r(s);var e=a(46),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"typespec是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typespec是什么"}},[t._v("#")]),t._v(" TypeSpec是什么")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://typespec.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeSpec"),e("OutboundLink")],1),t._v("是一种高度可扩展的语言，可轻松描述REST、OpenAPI、grpc和其他协议中常见的API结构。TypeSpec 在生成多种不同的API描述格式、客户端和服务端代码、文档等方面表现出色。有了TypeSpec，你就可以摆脱那些拖慢你速度的手写文件，并在几秒内生成符合标准的API Schemas。")]),t._v(" "),e("h2",{attrs:{id:"typespec的特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typespec的特点"}},[t._v("#")]),t._v(" TypeSpec的特点")]),t._v(" "),e("ul",[e("li",[t._v("简洁清凉：受Typescript的启发，TypeSpec是一种极简语言，可帮助开发人员以熟悉的方式描述API")]),t._v(" "),e("li",[t._v("易集成：编写TypeSpec，发布为各种格式，快速与其他生态系统集成")]),t._v(" "),e("li",[t._v("支持多种协议：TypeSpeck 标准库支持主流的Openapi3.0、JSON Schema 2020-12、Protobuf 和JSON RPC等协议")]),t._v(" "),e("li",[t._v("功能强大：受益于庞大的OpenAPI工具生态系统，可用于配置API网关、生成代码和验证数据")]),t._v(" "),e("li",[t._v("保证数据一致性：定义要在API中使用的通用模型，使用JSON Schema发射器获取类型的JSON Schema，并使用他们验证数据")]),t._v(" "),e("li",[t._v("友好的开发体验：在VSCode和Visual Studio编辑器中为了TypeSpec提供了全面的语言支持。比如语法高亮、代码补全功能")])]),t._v(" "),e("h2",{attrs:{id:"typespec-使用示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typespec-使用示例"}},[t._v("#")]),t._v(" TypeSpec 使用示例")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("生成OpenAPI描述文件")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1307),alt:"生成OpenAPI描述文件"}})])]),t._v(" "),e("li",[e("p",[t._v("生成JSON Schema")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1308),alt:"生成JSON Schema"}})])]),t._v(" "),e("li",[e("p",[t._v("生成Protobuf")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1309),alt:"生成protobuf"}})])])]),t._v(" "),e("h2",{attrs:{id:"typespec-playground"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typespec-playground"}},[t._v("#")]),t._v(" TypeSpec Playground")]),t._v(" "),e("p",[t._v("要快速体验TypeSpec 的功能，推荐你使用TypeSpec 官方提供的 "),e("a",{attrs:{href:"https://typespec.io/playground",target:"_blank",rel:"noopener noreferrer"}},[t._v("playground"),e("OutboundLink")],1),t._v(".该playground预设了 API versioning 、Discriminated unions、HTTP service、Rest frameswork、、Protobuf Kiosk 和 Json Schema 6 个不同的使用示例，并支持 File 和 Swagger UI 两种视图。")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("File视图")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1310),alt:"File视图"}})])]),t._v(" "),e("li",[e("p",[t._v("Swagger UI 视图")]),t._v(" "),e("p",[e("img",{attrs:{src:a(349),alt:"Swagger UI"}})])])]),t._v(" "),e("h2",{attrs:{id:"typespec-快速上手"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typespec-快速上手"}},[t._v("#")]),t._v(" TypeSpec 快速上手")]),t._v(" "),e("h3",{attrs:{id:"_1-安装-typespec-compiler-编译器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装-typespec-compiler-编译器"}},[t._v("#")]),t._v(" 1.安装 @typespec/compiler 编译器")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g @typespec/compiler\n")])])]),e("h3",{attrs:{id:"_2-安装vscode扩展"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装vscode扩展"}},[t._v("#")]),t._v(" 2.安装VSCode扩展")]),t._v(" "),e("p",[t._v("在VSCode中搜索 TypeSpec 安装TypeSpec for VS Code扩展，或在浏览器中打开 TypeSpec for VS Code 网之后点击install")]),t._v(" "),e("h3",{attrs:{id:"_3-创建-typespec-项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建-typespec-项目"}},[t._v("#")]),t._v(" 3.创建 TypeSpec 项目")]),t._v(" "),e("p",[t._v("首先新建一个新的目录，然后在项目的根目录下执行一下命令")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("tsp init\n")])])]),e("p",[e("img",{attrs:{src:a(349),alt:"tsp init"}})]),t._v(" "),e("h3",{attrs:{id:"_4-安装依赖项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-安装依赖项目"}},[t._v("#")]),t._v(" 4.安装依赖项目")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("tsp "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),e("p",[t._v("成功执行上述命令后，在当前目录下会生成一下目录结构")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n├── main.tsp\n├── node_modules\n├── package-lock.json\n├── package.json\n└── tspconfig.yaml\n")])])]),e("p",[t._v("之后，打开 main.tsp 文件，输入以下代码：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@typespec/http"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nusing TypeSpec"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n@"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  title"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Widget Service"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnamespace DemoService"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmodel Widget "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  @"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("visibility")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"read"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"update"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  @path\n  id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  weight"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" int32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  color"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n@error\nmodel Error "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  code"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" int32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  message"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n@"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("route")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/widgets"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n@"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tag")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Widgets"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widgets")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  @"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("list")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Widget"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  @"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("@path id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Widget "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  @post "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("Widget"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Widget "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  @patch "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("Widget"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Widget "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  @"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("@path id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  @"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("route")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{id}/analyze"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" @post "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("analyze")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("@path id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("完成输入后，运行 tsp compile . 命令执行编译操作。成功编译后，在 tsp-output/@typespec/openapi3 目录下就会生成 openapi.yaml 文件：")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1311),alt:"openapi.yml"}})])])}),[],!1,null,null,null);s.default=n.exports},349:function(t,s,a){t.exports=a.p+"assets/img/40.37e4e4bf.png"}}]);