(window.webpackJsonp=window.webpackJsonp||[]).push([[682],{2714:function(e,t,n){"use strict";n.r(t);var s=n(46),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),n("p",[e._v("snowpack/vite等基于ESM的构建工具出现，让项目的工程构建不再需要构建一个完整的bundle。很多人觉得不再需要打包工具的时代即将到来。借助浏览器ESM的能力，一写代码基本可以做到需要构建直接运行。\nvite实践\nhttps://juejin.cn/post/6926822933721513998\nhttps://github.com/57code/vite2-in-action")])]),e._v(" "),n("h2",{attrs:{id:"vite是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vite是什么"}},[e._v("#")]),e._v(" Vite是什么")]),e._v(" "),n("p",[e._v("Vite(读音类似于[weIt]，法语,快的意思)是一个由原生ES Module驱动的Web开发构建工具。在开发环境下基于浏览器原生ES imports开发，生产环境下基于Rollup打包。")]),e._v(" "),n("h3",{attrs:{id:"vite特点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vite特点"}},[e._v("#")]),e._v(" Vite特点")]),e._v(" "),n("ul",[n("li",[e._v("Lightning fast code start --闪电般的冷启动速度")]),e._v(" "),n("li",[e._v("Instanthot module replacement(HMR)--即时热模块替换")]),e._v(" "),n("li",[e._v("True on-demand compilation--真正的按需编译")])]),e._v(" "),n("blockquote",[n("p",[e._v("vite要求项目完全有ES Module模块组成"),n("br"),e._v("\ncommon.js模块不能直接在Vite上使用"),n("br"),e._v("\n打包依旧还是使用rollup等传统打包工具"),n("br")])]),e._v(" "),n("h3",{attrs:{id:"esmodule"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#esmodule"}},[e._v("#")]),e._v(" ESModule")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<script src="./src/index.js" type="module"><\/script>\n')])])]),n("p",[e._v("服务端")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const Koa = require('koa');\nconst app = new Koa();\napp.use(async (ctx) => {\n    const {\n        request: {url, query},\n    } = ctx;\n    console.log(`url: ${url}, query.type: ${query.type}`);\n    // 首页\n    if(url === '/') {\n        ctx.type = 'text/html';\n        let content = fs.readFileSync('./index.html', 'utf-8');\n        ctx.body = content;\n    }\n})\napp.listen(3000, () => {\n    console.log('Vite Start listen 3000...');\n})\n")])])]),n("p",[e._v("新建页面index.html")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <link rel="icon" href="/favicon.ico">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Vite App</title>\n</head>\n<body>\n    <h1>Vite 666</h1>\n    <div id="app"></div>\n    <script><\/script>\n    <script type="module" src="/src/main.js"><\/script>\n</body>\n</html>\n')])])]),n("p",[e._v("新建/src/main.js")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("console.log('main...');\n")])])]),n("p",[e._v("添加模块解析/index.js")]),e._v(" "),n("p",[e._v("/src/moduleA.js")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("export const str = 'Hello Vite'；\n")])])]),n("p",[e._v("/src/main.js")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import {str} from './moduleA.js';\nconsole.log(str);\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("else if (url.endsWith('.js')) {\n    // js文件\n    const p = path.resolve(__dirname, url.slice(1));\n    ctx.type = 'application/javascript';\n    cosnt content = fs.readFileSync(p, 'utf-8');\n    ctx.body = content;\n}\n")])])]),n("h3",{attrs:{id:"添加依赖解析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加依赖解析"}},[e._v("#")]),e._v(" 添加依赖解析")]),e._v(" "),n("blockquote",[n("p",[e._v("Form('./xxx') => from('./xxx')"),n("br"),e._v("\nForm('yyy') => from('@modules/yyy')"),n("br")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("function rewriteImport(content) {\n    return content.replace(/from ['|\"]([^'\"]+)['|\"]/g, function(s0, s1) {\n        console.log('s', s0, s1);\n        // ../  /开头的都是相对路径\n        if(s1[0] !== '.' && s1[1] !== '/') {\n            return `from '/@modules/${s1}/'`;\n        } else {\n            return s0;\n        }\n    })\n}\n// 添加模块改写\nctx.body = rewriteImport(content)\n")])])]),n("h3",{attrs:{id:"第三方依赖支持"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第三方依赖支持"}},[e._v("#")]),e._v(" 第三方依赖支持")]),e._v(" "),n("p",[e._v("/src/main.js")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import {createApp, h} from 'vue';\nconst App = {\n    render() {\n        return h('div', null, [h('div', null, String('123'))]);\n    }\n}\ncreateApp(App).mount('#app');\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("else if (url.startsWith('@/modules/')) {\n    // 这是一个node_module里的东西\n    const prefix = path.resolve(\n        __dirname,\n        'node_module',\n        url.replace('/@modules/', '')\n    );\n    const module = require(prefix + '/package.json').module;\n    const p = path.resolve(prefix, module);\n    cosnt ret = fs.readFileSync(p, 'utf-8');\n    ctx.type = 'application/javascript';\n    ctx.body = rewriteImport(ret);\n}\n")])])]),n("p",[e._v("SFC组件支持")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const compilerSfc = require('@vue/compiler-sfc'); // .vue\nconst compilerDom = require('@vue/compiler-dom'); // 模板\n\nelse if (url.endsWith('.css')) {\n    const p = path.resolve(__dirname, url.slice(1));\n    const file = fs.readFileSync(p, 'utf-8');\n    cosnt content = `\n        const css = '${file.replace(/\\n/g, '')}'\n        let link = document.createElement('style');\n        link.setAttribute('type', 'text/css');\n        document.head.appendChild('link');\n        link.innerHTML = css;\n        export default css\n    `;\n    ctx.type = 'application/javascript';\n    ctx.body = content;\n} else if (url.indexOf('.vue') > -1) {\n    // vue 单文件组成\n    const p = path.resolve(__dirname, url.split('?')[0].slice(1));\n    cosnt { descriptor } = compilerSfc.parse(fs.readFileSync(p, 'utf-8'));\n\n    if (!query.type) {\n        ctx.type = 'application/javascript';\n        // 借用vue自导的compile框架 解析单文件组件，其实相当于vue-loader做的事情\n        ctx.body = `\n            ${rewriteImport(\n                descriptor.script.content.replace('export default ', 'const __script =')\n            )}\n            import { render as __render} from '${url}?type=temeplate'\n            __script.render = __render;\n            export default _script\n        `;\n    } else if (query.type === 'temeplate') {\n        // 模板内容\n        const template = descriptor.temeplate;\n        // 要在server端把compiler做了\n        const render = compilerDom.compile(template.content, {mode: 'module'}).code;\n        ctx.type = 'application/javascript';\n        ctx.body = rewriteImport(render);\n    }\n}\n")])])]),n("h2",{attrs:{id:"资料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[e._v("#")]),e._v(" 资料")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/149351900",target:"_blank",rel:"noopener noreferrer"}},[e._v("替代 webpack？带你了解 snowpack 原理，你还学得动么"),n("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=a.exports}}]);