(window.webpackJsonp=window.webpackJsonp||[]).push([[358],{1882:function(t,s,a){t.exports=a.p+"assets/img/73be33f2d63c4ccca86a0d470fd63947_tplv-k3u1fbpfcp-zoom-in-crop-mark_1304_0_0_0.f4890af5.png"},2815:function(t,s,a){"use strict";a.r(s);var n=a(46),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/reactjs/rfcs/blob/useevent/text/0000-useevent.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("useEvent"),n("OutboundLink")],1),t._v("是一个刚刚提案的原生Hook，还处于RFC。"),n("a",{attrs:{href:"https://github.com/reactjs/rfcs/blob/useevent/text/0000-useevent.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("讨论地址"),n("OutboundLink")],1),t._v("下面有些嗲吗是来自其中")]),t._v(" "),n("blockquote",[n("p",[t._v("RFC:request for Comments还在广泛讨论阶段")])]),t._v(" "),n("h2",{attrs:{id:"为什么要怎么做"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么要怎么做"}},[t._v("#")]),t._v(" 为什么要怎么做")]),t._v(" "),n("h3",{attrs:{id:"没有useevent的时候"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#没有useevent的时候"}},[t._v("#")]),t._v(" 没有useEvent的时候")]),t._v(" "),n("p",[t._v("我么先看看不用useEvent的情况")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Chat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setText"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Always a different function")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onClick")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendMessage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SendButton onClick"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("onClick"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("span",{staticStyle:{color:"blue"}},[t._v("其中点击事件的回调函数onClick中需要读取当前键入的文本text，这里onClick随着组件渲染一次次的重新创建，每次都会是不一样的引用，这显然带来了性能损耗")]),t._v("，如果你想对其进行优化，你可能会这样做")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Chat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setText"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 🟡 A different function whenever `text` changes")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" onClick "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useCallback")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendMessage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SendButton onClick"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("onClick"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"通过usecallback返回一个memoized回调函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#通过usecallback返回一个memoized回调函数"}},[t._v("#")]),t._v(" 通过useCallback返回一个memoized回调函数")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("useCallback:返回一个"),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Memoization",target:"_blank",rel:"noopener noreferrer"}},[t._v("memoized"),n("OutboundLink")],1),t._v("回调函数(记忆)。"),n("span",{staticStyle:{color:"blue"}},[t._v("把内联回调函数及依赖项数组作为参数传入callback,它将返回该回调函数的memoized版本，该回调函数仅在某个依赖项改变时才会更新。当你把回调函数传递给经过优化的并使用引用相等性去避免非必要渲染(例如shouldComponentUpdate)的子组件时，它将非常有用。useCallback(fn, deps)相当于useMemo(() => fn, deps)")])])]),t._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[n("strong",[t._v("最终使得onClick的引用使用不变")])])]),t._v(" "),n("p",[n("strong",[t._v('但是，onClick这个方法有需要保证每次都拿到最新的、正确的text，所以他的deps中就自然是设置了text----坏了，"又会到最初的起点"。随着每一次keystroke, onClick又变成了上面的情况')])]),t._v(" "),n("blockquote",[n("p",[t._v("🟡 Always a different function")])]),t._v(" "),n("p",[n("strong",[t._v("但你又不能将其从deps中移除，移除了他就只能拿到text的初始值，失去了他本该有的功能...")])]),t._v(" "),n("h3",{attrs:{id:"useevent来整个活"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#useevent来整个活"}},[t._v("#")]),t._v(" useEvent来整个活")]),t._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[t._v("useEvent就是为了解决此问题，所以它干脆不要deps了，他就是一直返回一个相同的函数引用，哪怕text发生变化。"),n("strong",[t._v("当然，保证它也能拿到最新、正确的text")])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Chat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setText"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ✅Always the same function (even if 'text' change)")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" onClick "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEvent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendMessage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SendButton onClick"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("onClick"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("现在好了")]),t._v(" "),n("ul",[n("li",[n("span",{staticStyle:{color:"blue"}},[t._v("onClick的引用使用是同一个")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"blue"}},[t._v("保证每次都能拿到最新的、正确的text")])])]),t._v(" "),n("hr"),t._v(" "),n("p",[t._v("当然还有其他一些场景，但是大致需求原理相同，"),n("strong",[t._v("就是不想让A因为b变化而总是重新加载，但是又因为要拿到b恰当的值，所以deps中必须b,导致不得不重新加载")]),t._v('，掉进了"圈圈圆圆圈圈~"的陷阱。')]),t._v(" "),n("h3",{attrs:{id:"好活好活🍞"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#好活好活🍞"}},[t._v("#")]),t._v(" 好活好活🍞")]),t._v(" "),n("p",[t._v("总而言之，用useEvent给他裹上就是香，就可以同事达到上面两个效果")]),t._v(" "),n("ul",[n("li",[n("span",{staticStyle:{color:"red"}},[t._v("引用不变")])]),t._v(" "),n("li",[n("span",{staticStyle:{color:"red"}},[t._v("拿到恰当的值")])])]),t._v(" "),n("h2",{attrs:{id:"这是咋做到的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#这是咋做到的"}},[t._v("#")]),t._v(" 这是咋做到的")]),t._v(" "),n("p",[t._v("说了这么多，我们看看它是咋做到的")]),t._v(" "),n("p",[t._v("他大概就是这么个形状(不是源码就长这样)")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (!) Approximate behavior")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEvent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("handler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" handlerRef "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useRef")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// In a real implementation, this would run before layout effects")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useLayoutEffect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    handlerRef"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" handler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useCallback")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// In a real implementation, this would throw if called during render")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" handlerRef"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"先回顾几个hook相关知识点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#先回顾几个hook相关知识点"}},[t._v("#")]),t._v(" 先回顾几个Hook相关知识点")]),t._v(" "),n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/hooks-reference.html#useref",target:"_blank",rel:"noopener noreferrer"}},[t._v("useRef"),n("OutboundLink")],1)]),t._v(" "),n("blockquote",[n("p",[n("span",{staticStyle:{color:"red"}},[t._v("useRef返回一个可变的ref对象，其.current属性被初始化为传入的参数(initialValue).返回ref对象在组件的整个生命周期内持续存在")]),t._v("\n这里通过useRef保存回调函数handler到handlerRef.current，然后再在useCallback中从handlerRef.current来取函数在调用，这边避免了直接调用，跳出了闭包陷阱。并且不出意外的话handler在整个生命周期内持续存在，也就是"),n("strong",[t._v("只有一个引用")])])])]),t._v(" "),n("li",[n("p",[t._v("useLayoutEffect")]),t._v(" "),n("p",[t._v("这个"),n("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/hooks-reference.html#uselayouteffect",target:"_blank",rel:"noopener noreferrer"}},[t._v("useLayoutEffect"),n("OutboundLink")],1),t._v("可能没那么常用，我们来看看是啥")]),t._v(" "),n("blockquote",[n("p",[t._v("其函数签名与useEffect相同，但它会在所有的DOM变更之后同步调用effect。可以使用它来读取DOM布局并同步触发重渲染。在浏览器执行绘制之前，useLayoutEffect内部的更新计划将被同步刷新")])])]),t._v(" "),n("li",[n("p",[t._v("useEffect")]),t._v(" "),n("p",[t._v("回顾一下"),n("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/hooks-reference.html#useeffect",target:"_blank",rel:"noopener noreferrer"}},[t._v("useEffect"),n("OutboundLink")],1)]),t._v(" "),n("blockquote",[n("p",[n("span",{staticStyle:{color:"blue"}},[t._v("默认情况下，effect将在每轮渲染结束后执行")])])])]),t._v(" "),n("li",[n("p",[t._v("useLayoutEffect vs useEffect")]),t._v(" "),n("p",[t._v('现在我们总结一下两者区别，useLayoutEffect更"快",这个快不是速度更快，而是抢跑了。'),n("span",{staticStyle:{color:"blue"}},[t._v(">useLayoutEffect是在render之前同步执行，useEffect在render之后异步执行，这就保证useLayoutEffect里的回调肯定比useEffect更早被调用、被执行")])])]),t._v(" "),n("li",[n("p",[t._v("usecallback")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("执行时机")]),t._v(" "),n("p",[t._v("前面说到")]),t._v(" "),n("blockquote",[n("p",[t._v("useCallback(fn, deps)相当于usememo(() => fn, deps)")])]),t._v(" "),n("p",[t._v("文档里这样说"),n("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/hooks-reference.html#usememo",target:"_blank",rel:"noopener noreferrer"}},[t._v("usememo"),n("OutboundLink")],1),t._v("的")]),t._v(" "),n("blockquote",[n("p",[t._v("记住，"),n("span",{staticStyle:{color:"blue"}},[t._v("传入useMemo的函数会在渲染期间执行。")]),t._v("请不要在这个函数内部执行与渲染无关的事情，诸如副作用这类的操作属于useEffect的适用范畴， 而不是useMemo")])]),t._v(" "),n("p",[t._v("也就它是在render时执行的，也就保证了赋值handler给handleRef.current是在前面发生")])]),t._v(" "),n("li",[n("p",[t._v("这里的作用")]),t._v(" "),n("p",[t._v("这里返回的是一个useCallback包裹后memoized函数，其中从handlerRef.current中获取函数，并且deps为[]，也就说他不会再次更新")])])])])]),t._v(" "),n("h2",{attrs:{id:"捋一捋🌊"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#捋一捋🌊"}},[t._v("#")]),t._v(" 捋一捋🌊")]),t._v(" "),n("p",[t._v("回顾完知识点我们也就缕清了这个useEvent方法，一句话总结就是："),n("span",{staticStyle:{color:"blue"}},[t._v("它接收一个回调函数handler作为参数，"),n("strong",[t._v("提供给你一个稳定的函数(始终只有一个引用)并且调用时都是用的你传入的最新的参数...args")]),t._v("--- 比如前面案例中text，始终都是"),n("strong",[t._v("最新的、正确的、恰当的")])])]),t._v(" "),n("p",[t._v("在结合一开始的案例，大概流程是这样")]),t._v(" "),n("p",[n("img",{attrs:{src:a(1882),alt:"useEvent流程"}})]),t._v(" "),n("h2",{attrs:{id:"资料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[t._v("#")]),t._v(" 资料")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://mp.weixin.qq.com/s/9hV3cYF9VWlmlBdiR1g7Zw",target:"_blank",rel:"noopener noreferrer"}},[t._v("useEvent：一个显著降低Hooks心智负担的原生Hook"),n("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);