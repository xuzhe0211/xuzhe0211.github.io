(window.webpackJsonp=window.webpackJsonp||[]).push([[424],{2230:function(a,s,n){"use strict";n.r(s);var t=n(46),e=Object(t.a)({},(function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("ol",[n("li",[a._v("设置为淘宝镜像")])]),a._v(" "),n("p",[a._v("npm config set registry https://registry.npm.taobao.org")]),a._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[a._v("设置回原本的源，用来发布npm包")])]),a._v(" "),n("p",[a._v("npm config set registry https://registry.npmjs.org")]),a._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[a._v("查看npm当前设置的源")])]),a._v(" "),n("p",[a._v("npm config get registry 或者 npm config list")]),a._v(" "),n("h2",{attrs:{id:"node-pm2使用文档"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#node-pm2使用文档"}},[a._v("#")]),a._v(" Node pm2使用文档")]),a._v(" "),n("p",[n("strong",[a._v("pm2和forever")]),a._v("是启动Nodejs服务常用到的两个工具。使用这两个指令可以使node服务在后台运行，另外他们可以在服务因异常或其他原因被杀掉后进行自动重启。")]),a._v(" "),n("h3",{attrs:{id:"基本指令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本指令"}},[a._v("#")]),a._v(" 基本指令")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("npm install pm2 -g //全局安装\n\npm2 start app.js 启动服务，入口文件是app.js\n\npm2 start app.js --name [name] 重命名进程、应用\n\npm2 start app.js -i [n] --name [name] 启动n个进程，名字命名为name\n\npm2 restart [name or id] 重启服务\n\npm2 start app.js --max_memory_restart 1024M 当内存超过1024M时自动重启。\n\n\npm2 stop [name or id] 结束进程\n\npm2 delete [name or id] 删除进程\n\npm2 delete all 删除所有进程/应用\n\npm2 stop all 结束所有进程\n\npm2 list 列出所有进程/应用\n\npm2 monit 对服务进行监控-查看进程/应用的资源消耗情况\n\npm2 describe [name or id] 查看某个进程/应用具体情况\n\n")])])]),n("h3",{attrs:{id:"高级用法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#高级用法"}},[a._v("#")]),a._v(" 高级用法")]),a._v(" "),n("p",[a._v("pm2配置文件启动")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('pm2 ecosystem 生成配置文件ecosystem.json\n\npm2 start Or Restart /file/path/ecosystem.json 通过配置文件启动服务\n\n//ecosystem.json内容\n\n  {\n    /**\n    * Application configuration section\n    * http://pm2.keymetrics.io/docs/usage/application-declaration/\n    * 多个服务，依次放到apps对应的数组里\n    */\n    apps : [\n    // First application\n        {\n            name      : "nova",\n            max_memory_restart: "300M",\n            script    : "/root/nova/app.js",\n            out_file : "/logs/nova_out.log",\n            error_file : "/logs/nova_error.log",\n            instances  : 4,\n            exec_mode  : "cluster",\n            env: {\n                NODE_ENV: "production"\n            }\n        }\n    ]\n }\n')])])]),n("h2",{attrs:{id:"nrm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nrm"}},[a._v("#")]),a._v(" NRM")]),a._v(" "),n("h3",{attrs:{id:"什么是nrm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是nrm"}},[a._v("#")]),a._v(" 什么是nrm")]),a._v(" "),n("p",[a._v("nrm是一个npm源管理器，允许你快速的在npm源间切换。")]),a._v(" "),n("p",[a._v("npm默认情况下是使用npm官方源(使用npm config ls命令查看)，这个源不稳定，一般我们使用淘宝源：https://registry.npm.taobao.org/，修改源的方式也很简单")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("npm set registry https://registry.npm.taobao.org/\n")])])]),n("p",[a._v("之后切换官方源，是不是比较麻烦？？所以有了nrm")]),a._v(" "),n("h4",{attrs:{id:"nrm使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nrm使用"}},[a._v("#")]),a._v(" nrm使用")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("//nrm安装\nnpm install -g nrm\n\n//查看可选源\nnrm ls\n\n//查看当前使用源\nnrm current\n\n//切换源\n/**\nregistry为源名，例如：nrm use taobao\n**/\nnrm use <registry>\n\n//添加源\nnrm add <registry> <url>\n//例如：\nnrm add cpm http://192.168.21.11:8888/repository\n\n\n//删除源\nnrm del <registry>\n\n//测试源速度(响应时间)\nnrm test <registry>\n\n")])])]),n("h2",{attrs:{id:"nvm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nvm"}},[a._v("#")]),a._v(" NVM")]),a._v(" "),n("h3",{attrs:{id:"nvm是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nvm是什么"}},[a._v("#")]),a._v(" nvm是什么")]),a._v(" "),n("p",[a._v("nvm全名node.js version management,顾名思义是一个nodejs的版本管理工具。通过它可以安装和切换不同的nodejs版本。")]),a._v(" "),n("h3",{attrs:{id:"下载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下载"}},[a._v("#")]),a._v(" 下载")]),a._v(" "),n("p",[a._v("增加host")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("185.199.109.133 raw.githubusercontent.com\n185.199.108.133 raw.githubusercontent.com\n185.199.110.133 raw.githubusercontent.com\n185.199.111.133 raw.githubusercontent.com\n199.232.68.133 raw.githubusercontent.com\n199.232.68.133 user-images.githubusercontent.com\n199.232.68.133 avatars2.githubusercontent.com\n199.232.68.133 avatars1.githubusercontent.com\n\n// 官网\nhttps://github.com/nvm-sh/nvm/blob/master/README.md?spm=a2c6h.24755359.0.0.15c27cbc4PqUmi\n\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash\n或\nwget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash\n\n")])])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),n("p",[a._v("由于公司内网限制？切换到手机热点安装成功")])]),a._v(" "),n("h3",{attrs:{id:"使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[a._v("#")]),a._v(" 使用")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('//查看本地安装的所有版本 可选参数available 显示所有可下载的版本\nnvm list available\n\n//安装\nnvm install 11.13.0\n\n//使用特定版本\nnvm use 11.13.0\n\n//卸载\nnvm uninstall 11.13.0\n\n// 修改默认版本\nnvm alias default <version>  如： nvm alias default v11.1.0\n\n\nnvm install stable #安装最新稳定版 node，现在是 5.0.0\nnvm install 4.2.2 #安装 4.2.2 版本\nnvm install 0.12.7 #安装 0.12.7 版本\n\n# 特别说明：以下模块安装仅供演示说明，并非必须安装模块\nnvm use 0 #切换至 0.12.7 版本\nnpm install -g mz-fis #安装 mz-fis 模块至全局目录，安装完成的路径是 /Users/<你的用户名>/.nvm/versions/node/v0.12.7/lib/mz-fis\nnvm use 4 #切换至 4.2.2 版本\nnpm install -g react-native-cli #安装 react-native-cli 模块至全局目录，安装完成的路径是 /Users/<你的用户名>/.nvm/versions/node/v4.2.2/lib/react-native-cli\n\nnvm alias default 0.12.7 #设置默认 node 版本为 0.12.7\n\n//我们将nvm的安装镜像设置成国内镜像\nexport NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node  \n\n// nvm 删除\n# nvm unload\nrm -rf "$NVM_DIR"\n')])])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),n("p",[a._v("Mac M1 中，nvm install 可能会安装不了，报clang: error: no such file or directory: 'CXX=c++'错误")]),a._v(" "),n("p",[a._v("解决方案：在iTrem2 中输入")]),a._v(" "),n("p",[a._v("arch -x86_64 zsh")])]),a._v(" "),n("p",[a._v("https://blog.csdn.net/qq_33794441/article/details/114585457")]),a._v(" "),n("p",[a._v("https://github.com/hawtim/blog/issues/10")]),a._v(" "),n("p",[a._v("https://zhuanlan.zhihu.com/p/115450863")]),a._v(" "),n("p",[a._v("https://www.jianshu.com/p/27cd8ea20d7d")]),a._v(" "),n("p",[a._v("https://juejin.cn/post/6968639978242834468")]),a._v(" "),n("h2",{attrs:{id:"nodemon"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nodemon"}},[a._v("#")]),a._v(" nodemon")]),a._v(" "),n("p",[a._v("nodemon是一种工具，可以自动检测到目录中的文件更改时通过重新启动应用程序来调试基于node.js的应用程序。")]),a._v(" "),n("p",[a._v("安装")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("npm install -g nodemon\n//或\nnpm install --save-dev nodemon\n")])])]),n("p",[a._v("使用")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('nodemon   ./main.js // 启动node服务\nnodemon ./main.js localhost 6677 // 在本地6677端口启动node服务\n"start": "ts-node -r tsconfig-paths/register nodemon src/main.ts",\n')])])]),n("p",[a._v("延迟重启")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("nodemon -delay10 main.js\n\nnodemon --delay 2.5 server.js\n\nnodemon --delay 2500ms server.js\n")])])]),n("p",[a._v("这个就类似于js函数中的函数节流,只在最后一次更改的文件往后延迟重启.避免了短时间多次重启的局面.")]),a._v(" "),n("p",[a._v("nodemon支持本地和全局配置文件。这些通常是命名的nodemon.json，可以位于当前工作目录或主目录中。可以使用该--config (file)选项指定备用本地配置文件。")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('\n{\n  "verbose": true,\n  "ignore": ["*.test.js", "fixtures/*"],\n  "execMap": {\n    "rb": "ruby",\n    "pde": "processing --sketch={{pwd}} --run"\n  }\n}\n')])])]),n("h2",{attrs:{id:"yzb-cli"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yzb-cli"}},[a._v("#")]),a._v(" yzb-cli")]),a._v(" "),n("blockquote",[n("p",[a._v("开发node cli工具参考，感觉写的不错哦")])]),a._v(" "),n("p",[n("a",{attrs:{href:"https://www.npmjs.com/package/yzb-cli",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考地址"),n("OutboundLink")],1)]),a._v(" "),n("h2",{attrs:{id:"cli-table"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cli-table"}},[a._v("#")]),a._v(" cli-table")]),a._v(" "),n("blockquote",[n("p",[a._v("在cli中打印表格")])]),a._v(" "),n("p",[n("a",{attrs:{href:"https://www.npmjs.com/package/cli-table",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考地址"),n("OutboundLink")],1)]),a._v(" "),n("h2",{attrs:{id:"一、linux下chmod-x的意思"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、linux下chmod-x的意思"}},[a._v("#")]),a._v(" 一、linux下chmod +x的意思")]),a._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[a._v("chmod +x的意思就是给文件执行权限")])]),a._v(" "),n("p",[a._v("LINUX下不同的文件类型有不同的颜色，")]),a._v(" "),n("ul",[n("li",[n("p",[a._v("绿色文件： 可执行文件，可执行的程序")])]),a._v(" "),n("li",[n("p",[a._v("红色文件：压缩文件或者包文件")])]),a._v(" "),n("li",[n("p",[a._v("蓝色文件：目录")])]),a._v(" "),n("li",[n("p",[a._v("白色文件：一般性文件，如文本文件，配置文件，源码文件等")])]),a._v(" "),n("li",[n("p",[a._v("浅蓝色文件：链接文件，主要是使用ln命令建立的文件")])]),a._v(" "),n("li",[n("p",[a._v("红色闪烁：表示链接的文件有问题")])]),a._v(" "),n("li",[n("p",[a._v("黄色：表示设备文件")])]),a._v(" "),n("li",[n("p",[a._v("灰色：表示其他文件")])])]),a._v(" "),n("p",[n("a",{attrs:{href:"!https://blog.csdn.net/xudailong_blog/article/details/82891506"}},[a._v("相关问题")])]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("chmod u+x install.sh\n")])])]),n("h2",{attrs:{id:"二、postman"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、postman"}},[a._v("#")]),a._v(" 二、postman")]),a._v(" "),n("p",[a._v("接口调试工具")]),a._v(" "),n("h2",{attrs:{id:"三、node-模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、node-模块"}},[a._v("#")]),a._v(" 三、node 模块")]),a._v(" "),n("h3",{attrs:{id:"ora"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ora"}},[a._v("#")]),a._v(" ora")]),a._v(" "),n("p",[a._v("node命令行环境的loading、显示各种状态的图标等")]),a._v(" "),n("h3",{attrs:{id:"commander"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#commander"}},[a._v("#")]),a._v(" commander")]),a._v(" "),n("p",[a._v("命令行界面的完整解决方案，受Ruby Commander启发")]),a._v(" "),n("p",[n("strong",[a._v("安装")])]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("npm install commander --save\n")])])]),n("p",[a._v("** Options解析**")]),a._v(" "),n("p",[a._v("使用.option()方法定义commander的选项options，也可以作为选项的文档。下面的示例讲解析来自process.argv的args和options，然后将剩下的参数(未定义的参数)赋值给commander对象的args属性(program.args)，program.args是一个数组。")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("#!/usr/bin/env node\nvar program = require('commander');\n\nprogram\n\t.version('0.1.0')\n    .options('-p,--peppers', 'Add peppers')\n    .options('-P, --pineapple', 'Add pineapple')\n    .options('-b, --bbq-sauce', 'Add bbq sauce')\n    .options('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n    .parse(process.argv);\n    \nconsole.log('you ordered a pizza with:');\nif(program.peppers) console.log('  --peppers');\nif (program.pineapple) console.log('  - pineapple');\nif (program.bbqSauce) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n// 执行\nnode index.js -pPbc hahah<br>\nyou ordered a pizza with:\n  - peppers\n  - pineapple\n  - bbq\n  - hahah cheese\n")])])]),n("p",[a._v("栗子：")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("#!/usr/bin/env node\n\nconst program = require('commander')\nprogram.version(require('../package').version)\nprogram\n    .command('init <name>')\n    .description('init project')\n    .action(\n        require('../lib/init')\n    )\nprogram.parse(process.argv)\n\n")])])]),n("h2",{attrs:{id:"数据库工具"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据库工具"}},[a._v("#")]),a._v(" 数据库工具")]),a._v(" "),n("p",[a._v("adminer--- Adminer是一个类似于phpMyAdmin的MySQL管理客户端")]),a._v(" "),n("p",[a._v("mongo express---基于Web的MongoDB管理界面")]),a._v(" "),n("p",[a._v("sequel pro 数据库工具")]),a._v(" "),n("h2",{attrs:{id:"rsync-scip文件同步命令使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rsync-scip文件同步命令使用"}},[a._v("#")]),a._v(" rsync | scip文件同步命令使用")]),a._v(" "),n("h3",{attrs:{id:"scp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#scp"}},[a._v("#")]),a._v(" scp")]),a._v(" "),n("p",[n("RouterLink",{attrs:{to:"/back-end/Docker/#docker将容器打包成镜像并传输到其他服务器部署"}},[a._v("docker将容器打包成镜像并传输到其他服务器部署")])],1),a._v(" "),n("h3",{attrs:{id:"rsync"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rsync"}},[a._v("#")]),a._v(" rsync")]),a._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[a._v("rsync "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("aq "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("password"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("file"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("etc"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("rsync161"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("pas  "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("data2"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("xxx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("upload"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("adsvideo"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("material"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("16981")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("人物进阶选择"),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("720")]),a._v("X1280"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mp4  asasa@"),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("106.")]),a._v("xxxx"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("mysqlbackup"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("www"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("\n")])])]),n("p",[a._v("需要在服务端B开启rsync服务器，并配置用户密码，同时密码在服务器A下也配置一份；同时路径别名，如上面的mysqlbackup代表/data/")])])}),[],!1,null,null,null);s.default=e.exports}}]);