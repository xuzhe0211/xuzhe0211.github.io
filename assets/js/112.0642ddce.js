(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{2370:function(t,a,s){"use strict";s.r(a);var n=s(46),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"javascript组成"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript组成"}},[t._v("#")]),t._v(" Javascript组成")]),t._v(" "),n("p",[t._v("Jvascript的实现包括以下3个部分")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("name")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("ECMAScript(核心)")]),t._v(" "),n("td",[t._v("描述了JS的语法和基本对象")])]),t._v(" "),n("tr",[n("td",[t._v("文档对象模型")]),t._v(" "),n("td",[t._v("处理网页内容的方法和接口")])]),t._v(" "),n("tr",[n("td",[t._v("浏览器对象模型")]),t._v(" "),n("td",[t._v("与浏览器交互的方法和接口")])])])]),t._v(" "),n("p",[t._v("javascript有三部分组成，ECMAScript，DOM和BOM，根据宿主(浏览器)的不同，具体的表现形式也不尽相同,IE和其他浏览器风格迥异，IE扩展了BOM，加入了ActiveXObject类，可以通过Javascript实例化ActiveX对象.")]),t._v(" "),n("ol",[n("li",[t._v("DOM是W3C的标准(所有浏览器公共遵守的标准)")]),t._v(" "),n("li",[t._v("BOM是各个浏览器厂商根据DOM在各自浏览器上的实现(表现为不同浏览器定义有差别，实现方式不同)")]),t._v(" "),n("li",[t._v("window是BOM对象，而非JS对象；Javascript是通过BOM(Browser Object Model)对象来访问、控制、修改客户端(浏览器)")])]),t._v(" "),n("p",[n("strong",[n("span",{staticStyle:{color:"red"}},[t._v("ECMAScript扩展知识")])])]),t._v(" "),n("ol",[n("li",[t._v("ECMAScript是一个标准，JS只是它的实现，其他实现包括ActionScript")]),t._v(" "),n("li",[t._v("ECMAScript可以为不同种类的宿主环境提供核心的脚本编程能力，即ECMAScript不与具体的宿主环境相邦定，如JS的宿主环境是浏览器，AS的宿主环境是Flash")]),t._v(" "),n("li",[t._v("ECMAScript描述了一下内容：语法、类型、语句、关键词、保留字、运算符、对象")])]),t._v(" "),n("h2",{attrs:{id:"dom-document-bom-window区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom-document-bom-window区别"}},[t._v("#")]),t._v(" DOM,DOCUMENT,BOM,WINDOW区别")]),t._v(" "),n("p",[t._v("DOM是为了操作文档出现的API，document是其的一个对象；")]),t._v(" "),n("p",[t._v("BOM是为了操作浏览器出现的API，window是其的一个对象。")]),t._v(" "),n("p",[t._v("BOM是浏览器对象模型，DOM是"),n("a",{attrs:{href:"https://www.baidu.com/s?wd=%E6%96%87%E6%A1%A3%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B&tn=44039180_cpr&fenlei=mv6quAkxTZn0IZRqIHcvrjTdrH00T1Y4mvn3mWKWmWT4nW99myRv0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EnHTvPH6Ln1DzPH0snWR1P1fvn0",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档对象模型"),n("OutboundLink")],1),t._v(",前者是对浏览器本身进行操作，而后者是对浏览器(可看成容器)内的内容进行操作")]),t._v(" "),n("p",[n("img",{attrs:{src:s(907),alt:"BOM/DOM"}})]),t._v(" "),n("p",[n("strong",[n("span",{staticStyle:{color:"orange"}},[t._v("归DOM管的")])])]),t._v(" "),n("p",[t._v("E区(就是你说的document。由web开发人员呕心沥血写出来的一个文件夹，里面有index.html，css和JS什么的，部署在服务器上，我们可以通过浏览器的地址栏输入URL然后回车将这个document加载到本地，浏览，右键查看源代码等)")]),t._v(" "),n("p",[n("strong",[n("span",{staticStyle:{color:"orange"}},[t._v("归BOM管的")])])]),t._v(" "),n("p",[t._v("A区(浏览器的标签页，地址栏，搜索栏，书签栏，窗口放大还原关闭按钮，菜单栏等)")]),t._v(" "),n("p",[t._v("B区(浏览器的右键菜单)")]),t._v(" "),n("p",[t._v("C区(document加载时的状态栏，显示http状态码)")]),t._v(" "),n("p",[t._v("D区(滚动条scroll bar)")]),t._v(" "),n("h3",{attrs:{id:"dom"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" DOM")]),t._v(" "),n("p",[t._v("DOM全称是Document Object Model，也就是文档对象模型。是针对XML的基于树的API。描述了处理处理网页内容的方法和接口，是HTML和XML的API，DOM把整个页面规划成由节点层级构成的文档。")]),t._v(" "),n("p",[t._v("这个DOM定义了一个"),n("span",{staticStyle:{color:"blue"}},[t._v("HTMLDocument")]),t._v("和"),n("span",{attrs:{stle:"color: blue"}},[t._v("HTMLElement")]),t._v("作为这种实现的基础，就是说为了能以编程方法操作这个HTML的内容(比如添加某些元素、修改元素的内容、删除某些元素),我们把这个HTML看做一个对象树(DOM树)，它本身和里面的所有东西比如<dev></div>这些标签都看做一个对象，每个对象都叫做一个节点(node)，节点可以理解为DOM中所有Object的父类")]),t._v(" "),n("p",[n("img",{attrs:{src:s(908),alt:"node节点"}})]),t._v(" "),n("p",[n("span",{staticStyle:{color:"blue"}},[t._v("DOM有什么用？就是为了操作HTML中的元素，比如说我们要通过JS把这个网页的标题给改了，直接这样就可以")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'how to make love'")]),t._v("\n")])])]),n("p",[t._v("这个API使得网页被下载到浏览器之后改变网页的内容成为可能")]),t._v(" "),n("h3",{attrs:{id:"document"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#document"}},[t._v("#")]),t._v(" document")]),t._v(" "),n("p",[t._v("当浏览器下载到一个网页，通常是HTML，这个HTML就叫document(当然，这也是DOM树中的一个node),从上图可以看到，document通常是整个DOM树的根节点。这个document包含了标题(document.title)、URL(document.URL)等属性，可以直接在JS中访问到")]),t._v(" "),n("p",[t._v("在一个浏览器窗口中可能有多个document,例如，通过iframe加载的网页，每一个都是一个document.")]),t._v(" "),n("p",[t._v("在JS中，可以通过document访问其子节点(其实任何节点都可以)，如")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"bom"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bom"}},[t._v("#")]),t._v(" BOM")]),t._v(" "),n("p",[t._v("BOM是Browser Object Model,浏览器对象模型。")]),t._v(" "),n("p",[t._v("刚才说DOM是为了操作文档出现的接口，那BOM顾名思义其实就是为了控制浏览器的行为而出现的接口。")]),t._v(" "),n("p",[t._v("浏览器可以做什么呢？比如跳转到另一个页面、前进、后退等等，程序还可能需要获取屏幕大小之后的参数。")]),t._v(" "),n("p",[t._v("所以BOM就是为了解决这些事情出现的接口。比如我们要让浏览器跳转到另一个页面，只需要location.href = 'http://www.xxx.com',这个location就是BOM里的一个对象。")]),t._v(" "),n("p",[t._v("由于BOM的window包含了document，因此可以直接使用window对象里的document属性，通过document属性就可以访问、检索、修改XHTML文档内容与结构。因为document对象有是DOM(Document Object Model)模型的根节点")]),t._v(" "),n("p",[t._v("可以说BOM包含了DOM(对象)，浏览器提供出来给予访问的是BOM对象，从BOM对象在访问DOM对象，从而js可以操作浏览器以及浏览器读取到的文档。")]),t._v(" "),n("h3",{attrs:{id:"window"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#window"}},[t._v("#")]),t._v(" window")]),t._v(" "),n("p",[t._v('window也是BOM的一个对象，除去编程意义上的"兜底对象"外，通过这个对象可以获取窗口位置、确定窗口大小、弹出对话框等等。例如我要关闭当前窗口')]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"浏览器对象模型-bom"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器对象模型-bom"}},[t._v("#")]),t._v(" 浏览器对象模型(BOM)")]),t._v(" "),n("p",[t._v("BOM与DOM的结构关系示意图\n"),n("img",{attrs:{src:s(909),alt:"BOM与DOM的结构关系示意图"}})]),t._v(" "),n("p",[t._v("BOM的核心是window，而Window对象又具有双重角色，它即是通过js访问浏览器窗口的一个接口，又是一个Global(全局)对象。这意味着在网页中定义的任何对象，变量和函数，都以window作为其global对象")]),t._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[t._v("window对象包含属性：document,location,navigator,screen,history,frames")])]),t._v(" "),n("p",[t._v("document根节点包含子节点：forms，location,anchors,images,links")]),t._v(" "),n("p",[t._v("从window.document已然可以看出，DOM的最根本的对象是BOM的window对象的子对象")]),t._v(" "),n("p",[t._v("区别：DOM描述了处理网页内容的方法和接口，BOM描述了与浏览器进行交互的方法和接口")]),t._v(" "),n("h3",{attrs:{id:"window对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#window对象"}},[t._v("#")]),t._v(" window对象")]),t._v(" "),n("p",[t._v("window对象是Javascript层级中的顶层对象")]),t._v(" "),n("p",[t._v("window对象代表一个浏览器窗口或一个框架。")]),t._v(" "),n("p",[t._v("window对象会在<body>或<frameset>每次出现时候被自动创建")]),t._v(" "),n("h2",{attrs:{id:"文档对象模型-dom"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#文档对象模型-dom"}},[t._v("#")]),t._v(" 文档对象模型(DOM)")]),t._v(" "),n("p",[t._v("DOM节点树模型(以HTML DOM树为例)")]),t._v(" "),n("p",[n("img",{attrs:{src:s(910),alt:"DOM节点树模型"}})]),t._v(" "),n("p",[t._v("DOM模型将整个文档(XML文档和HTML文档)看成一个属性结构，")]),t._v(" "),n("p",[t._v("在DOM中，HTML文档文档的层次结构呗表示为一个树形结构。并用document对象表示该文档，树的每个子节点表示HTML文档中不同的内容")]),t._v(" "),n("p",[t._v("每个载入浏览器的HTML文档都会成为Document对象，Document是探索DOM的入口，利用全局变量document可以访问Document对象")]),t._v(" "),n("h3",{attrs:{id:"附-dom基本操作思维导图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#附-dom基本操作思维导图"}},[t._v("#")]),t._v(" 附:DOM基本操作思维导图")]),t._v(" "),n("p",[n("img",{attrs:{src:s(911),alt:"DOM基本操作思维导图"}})]),t._v(" "),n("h2",{attrs:{id:"其他"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),n("h3",{attrs:{id:"window-open-和window-location-href区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#window-open-和window-location-href区别"}},[t._v("#")]),t._v(" window.open 和window.location.href区别")]),t._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[t._v("window.location是window对象的属性，而window.open是window对象的方法")])]),t._v(" "),n("p",[t._v("window.location是你对当前浏览器窗口的URL地址对象的参考")]),t._v(" "),n("p",[t._v("window.open是用来打开一个新窗口的函数！")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/qq_41694906/article/details/88224861",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript中window.open（）和Window Location href的区别"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"资料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[t._v("#")]),t._v(" 资料")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/qq877507054/article/details/51395830",target:"_blank",rel:"noopener noreferrer"}},[t._v("Javascript之BOM与DOM讲解"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/qq_41908550/article/details/83060780",target:"_blank",rel:"noopener noreferrer"}},[t._v("BOM与DOM解释与分析"),n("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports},907:function(t,a,s){t.exports=s.p+"assets/img/20160826135326655.6e51df8d.png"},908:function(t,a,s){t.exports=s.p+"assets/img/20160826135305647.bf0c41fa.png"},909:function(t,a,s){t.exports=s.p+"assets/img/20160826135345273.3e5424af.png"},910:function(t,a,s){t.exports=s.p+"assets/img/20160826135409617.1a08c232.png"},911:function(t,a,s){t.exports=s.p+"assets/img/20160826135824498.55024b9f.png"}}]);