(window.webpackJsonp=window.webpackJsonp||[]).push([[338],{1562:function(t,s,a){t.exports=a.p+"assets/img/OUD9ktyZMBuc5Y7T-Snipaste_2021-05-20_10-25-12.f8a2ebcc.png"},2666:function(t,s,a){"use strict";a.r(s);var n=a(46),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("ESLint + Prettier + CommitLint + husky + lint-staged")])]),t._v(" "),n("h2",{attrs:{id:"终极目标"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#终极目标"}},[t._v("#")]),t._v(" 终极目标")]),t._v(" "),n("p",[t._v("团队中的所有开发人员用一套代码格式规范，并且无需在话费其他精力趣味了格式而格式。让工具自动帮助我们检测代码是否规范，并按照我们指定的规范去执行格式化。")]),t._v(" "),n("h2",{attrs:{id:"方案背景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方案背景"}},[t._v("#")]),t._v(" 方案背景")]),t._v(" "),n("p",[t._v("由于此次统一化的规范检查配置是中期加入进项目，如果执行全局代码检查，肯定会暴露很多规范问题，处理成本也会变大，所以奔着代码检查最小影响的原则，我们理想处理方案是，对每次开发人员提交的改动文件进行lint检查")]),t._v(" "),n("h2",{attrs:{id:"准备工作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[t._v("#")]),t._v(" 准备工作")]),t._v(" "),n("p",[t._v("目前相关的lint配置文件都已集中化管理维护，公共配置文件包放在工具箱项目quick下，我们在安装配置前需要完成一下操作")]),t._v(" "),n("h3",{attrs:{id:"配置工具箱-quick源"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置工具箱-quick源"}},[t._v("#")]),t._v(" 配置工具箱@quick源")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yarn 安装")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" config "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" @quick:registry https://registry.npm.***.cn/\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# npm 命令安装")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" @quick:registry https://registry.npm.***.cn/\n")])])]),n("h3",{attrs:{id:"添加工具箱-quick包别名"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加工具箱-quick包别名"}},[t._v("#")]),t._v(" 添加工具箱@quick包别名")]),t._v(" "),n("p",[t._v("此处以vue-cli搭建的项目配置为例")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改根目录下配置文件 vue.config.js")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处无关代码省略")]),t._v("\n\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("chainWepack")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("config")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        config\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("resolve\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alias\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/quick'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node_module/@quick'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加@quick别名")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"安装配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装配置"}},[t._v("#")]),t._v(" 安装配置")]),t._v(" "),n("h3",{attrs:{id:"依赖包安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#依赖包安装"}},[t._v("#")]),t._v(" 依赖包安装")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装ESLint, Prettier, CommitLint公共配置文件包")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" @quick/eslint-config @quick/prettier-config @quick/commitlint-config -D\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装ESLint, Prettier相关依赖包")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" eslint-config-airbnb-base eslint-plugin-import prettier -D\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装Prettier相关依赖包")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# eslint-config-prettier：关闭所有不必要的可能与Prettier冲突的规则")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# eslint-plugin-prettier: 将Prettier作为ESLint规则运行，并将差异报告为单个ESLint问题")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" eslint-config-prettier eslint-plugin-prettier -D\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 CommitLint相关依赖包")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cz-conventional-changelog:提交日志规范模板")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# @commitlint/cli: 提交日志的校验工具，校验是否符合提交约束")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# @commitlint/config-conventional: 校验工具配置")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" cz-conventional-changelog @commitlint/cli @commitlint/config-conventional -D\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局安装commitizen")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# commitizen:Git 日志提交约束工具")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" global "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" commitizen\n")])])]),n("h3",{attrs:{id:"创建配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建配置文件"}},[t._v("#")]),t._v(" 创建配置文件")]),t._v(" "),n("p",[t._v("新建eslint配置文件.eslintrc.js")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根目录新建ESLint配置文件 .eslintrc.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意：如果之前项目中已配置过eslint，建议删除")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" eslintConfig "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@quick/eslint-config'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 复写eslintConfig 使用vue官方parser去解析项目中的vue文件代码，其余js代码用babel-eslint")]),t._v("\neslintConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parser "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue-eslint-parser'")]),t._v("\neslintConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parserOptions"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parser "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'babel-eslint'")]),t._v("\n\neslintConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extends "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("eslintConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extends"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugin:prettier/recommended"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\neslintConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rules "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("eslintConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier/prettier"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" eslintConfig\n")])])]),n("p",[t._v("新建prettier配置文件.prettierrc.js")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 根目录新建Prettier配置 .prettierrc.js\nconst prettierConfig = require('@quick/prettier-config')\nmodule.exports = prettierConfig\n")])])]),n("p",[t._v("新建comitlint配置文件.commitlintrc.js")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 根目录新建CommitLint配置文件 .commitlintrc.js\nconst commitLintConfig = require('@quick/commitlint-config')\nmodule.exports = commitLintConfig\n")])])]),n("h3",{attrs:{id:"安装配置检查辅助工具"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装配置检查辅助工具"}},[t._v("#")]),t._v(" 安装配置检查辅助工具")]),t._v(" "),n("h4",{attrs:{id:"安装lint-staged"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装lint-staged"}},[t._v("#")]),t._v(" 安装lint-staged")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("# lint-staged 是git暂存文件上运行linters的工具\n> yarn add lint-staged -D\n")])])]),n("h4",{attrs:{id:"修改package-json文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改package-json文件"}},[t._v("#")]),t._v(" 修改package.json文件")]),t._v(" "),n("p",[t._v("添加如下代码")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('{\n  ...此处无关代码省略\n\n  "script": {\n\n    ...此处无关代码省略,\n\n    "precommit": "lint-staged"\n  },\n\n  ...此处无关代码省略\n\n  "lint-staged": {\n    "src/**/*.{js,vue,test.{j,t}s?(x)}": [\n      "eslint --fix",\n      "prettier --write"\n    ]\n  },\n\n  ...此处无关代码省略\n\n  "config": {\n    "commitizen": {\n      "path": "node_modules/cz-conventional-changelog"\n    }\n  }\n}\n')])])]),n("p",[t._v("以上代码主要作用是：")]),t._v(" "),n("ul",[n("li",[t._v("新增一条script命令")]),t._v(" "),n("li",[t._v("新增一个检查任务(对匹配路径下的后缀文件进行检查)")]),t._v(" "),n("li",[t._v("配置commit提交日志规范模板")])]),t._v(" "),n("blockquote",[n("p",[t._v("提示：检查任务内容可根据自身项目需要添加或删除配置")])]),t._v(" "),n("h4",{attrs:{id:"安装husky"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装husky"}},[t._v("#")]),t._v(" 安装husky")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("# husky 是一个GitHook工具\n# husky 安装需要注意，老版本安装后不会触发pre-commit hook钩子函数，一下为官方推荐安装方式\n# 具体可查看官方文档 https://typicode.github.io/husky/#/?id=install\n> npx husky-init && npm install       # npm 安装\n> npx husky-init && yarn              # Yarn 1 安装\n> yarn dlx husky-init --yarn2 && yarn # Yarn 2 安装\n")])])]),n("p",[t._v('安装完项目根目录下回自动新增一个.husky的文件夹，.husky已经帮你在里面创建了一个简单的pre-commit hook脚本，默认内容是提交代码时运行npm test命令。package.json里也会自动新增了一条scirpt命令"prepare":"husky install"命令，这都是husky初始化操作自动生成的，知道就行不用过多理会')]),t._v(" "),n("p",[n("strong",[t._v("修改.husky/pre-commit文件")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('#!/bin/sh\n. "$(dirname "$0")/_/husky.sh"\n\n# 去除默认命令npm run test, 修改为我们在package.json里定义好的检查命令\nYarn precommit\n')])])]),n("p",[n("strong",[t._v("新建.husky/commit-msg文件")])]),t._v(" "),n("p",[t._v("复制 .husky/pre-commit 文件，同路径下粘贴重命名文件为 commit-msg ，此操作是为了新建 commit hook 函数。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('#!/bin/sh\n. "$(dirname "$0")/_/husky.sh"\n\n# 加入commitlint 检查命令, 对代码commit时提交规范进行检查\nyarn commitlint --edit $1\n')])])]),n("p",[t._v("若 window 系统下遇到 stdin is not a tty 报错，可在 .husky 下增加 common.sh，内容如下：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('command_exists () {\n  command -v "$1" >/dev/null 2>&1\n}\n\n# Workaround for Windows 10, Git Bash and Yarn\nif command_exists winpty && test -t 1; then\n  exec < /dev/tty\nfi\n')])])]),n("p",[t._v("并且修改 pre-commit, commit-msg 这两个文件的头部：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('#!/bin/sh\n. "$(dirname "$0")/_/husky.sh"\n. "$(dirname "$0")/common.sh"\n')])])]),n("p",[t._v("此时 .husky 文件夹下已有两个 hook 函数，分别对提交代码进行规范检查和对提交message 格式进行检查。")]),t._v(" "),n("h2",{attrs:{id:"补充说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[t._v("#")]),t._v(" 补充说明")]),t._v(" "),n("p",[t._v("由于每次触发 git commit 会进行 commitlint 检查，所以这里简单说明下必要的提交规范，详细 commit 规范可参考"),n("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Commit message 和 Change log 编写指南 - 阮一峰的网络日志"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("# 日常代码提交格式（注意冒号后面有空格）\ngit commit -m <type>[optional scope]: <description>\n")])])]),n("p",[t._v("type ：用于表明我们这次提交的改动类型，是新增了功能？还是修改了测试代码？又或者是更新了文档？")]),t._v(" "),n("p",[t._v("optional scope ：一个可选的修改范围。用于标识此次提交主要涉及到代码中哪个模块。")]),t._v(" "),n("p",[t._v("description：一句话描述此次提交的主要内容，做到言简意赅。")]),t._v(" "),n("p",[t._v("举个例子")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("git commit -m 'feat: 增加 xxx 功能'\ngit commit -m 'fix: 修复 xxx 功能'\n")])])]),n("p",[t._v("当然，你还可以通过 commit 模板进行提交（强烈推荐使用），用 git cz 命令来代替 git commit 命令，调用出提交模板。（若 window 系统下 git bash 调 git cz 命令可能有问题，可以试试 winpty git cz）")]),t._v(" "),n("p",[t._v("以下是执行结果截图：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(1562),alt:"git cz执行结果截图"}})]),t._v(" "),n("h3",{attrs:{id:"validate-commit-msg"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#validate-commit-msg"}},[t._v("#")]),t._v(" validate-commit-msg")]),t._v(" "),n("p",[t._v("正常提交git commit -m 'feat: 增加xxx功能' 增加校验 validate-commit-msg插件")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://www.npmjs.com/package/validate-commit-msg",target:"_blank",rel:"noopener noreferrer"}},[t._v("validate-commit-msg"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),n("p",[t._v("有时候husk不好使，需要解决脚本权限问题")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x .husky/pre-commit\n")])])]),n("h2",{attrs:{id:"资料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[t._v("#")]),t._v(" 资料")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/366786798",target:"_blank",rel:"noopener noreferrer"}},[t._v("husky使用总结"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://commitlint.js.org/#/concepts-commit-conventions",target:"_blank",rel:"noopener noreferrer"}},[t._v("concepts-commit-conventions rules"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.cn/post/6979054290526535717",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitlint 从0到1 (git commit 校验工具)---看看"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("https://www.cnblogs.com/bitbw/p/15931436.html")])])}),[],!1,null,null,null);s.default=e.exports}}]);