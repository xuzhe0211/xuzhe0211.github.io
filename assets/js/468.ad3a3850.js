(window.webpackJsonp=window.webpackJsonp||[]).push([[468],{2322:function(t,s,a){"use strict";a.r(s);var e=a(46),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),a("ul",[a("li",[t._v("一切皆为Widgets")]),t._v(" "),a("li",[t._v("多组件容器(Row、Column、Stack、Wrap)")]),t._v(" "),a("li",[t._v("单组件容器(Container、Padding、Center、Align)")]),t._v(" "),a("li",[t._v("Flutter组件的规律")])]),t._v(" "),a("h3",{attrs:{id:"widgets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#widgets"}},[t._v("#")]),t._v(" Widgets")]),t._v(" "),a("p",[a("strong",[t._v("状态")])]),t._v(" "),a("p",[t._v("stateful和stateless：实现Flutter app时,我们用widgets来构建app的UI。这些widgets有两种类型-statefule(有状态)和stateless(无状态)")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("stateless: 当创建的widget不需要管理任何形式的内部state时，则使用StatelessWidget.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("runApp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyStatelessWidget")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"StatelessWidget Example"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyStatelessWidget")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StatelessWidget")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    final String text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyStatelessWidget")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Key key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    @Override\n    Widget "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("BuildContext context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Center")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            child"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                textDirection"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" TextDirection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ltr\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("stateful:当创建一个能随时间动态改变的widget，并且不依赖其初始化状态")]),t._v(" "),a("p",[t._v("注意")]),t._v(" "),a("ol",[a("li",[t._v("创建Stateful Widget需要两个累，分别继承自StateFulWidge 和 State")]),t._v(" "),a("li",[t._v("state对象包含了widget的state和widget的build()方法")]),t._v(" "),a("li",[t._v("当widget的state改变了的时候，当调用setState()方法时，框架就会去调用build方法重绘widget")])])])]),t._v(" "),a("h2",{attrs:{id:"flutter-布局组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flutter-布局组件"}},[t._v("#")]),t._v(" flutter 布局组件")]),t._v(" "),a("ul",[a("li",[t._v("Container：用于创建一个矩形的可定制容器，可以设置背景色、边框等样式。")]),t._v(" "),a("li",[t._v("Row：用于在水平方向上排列子组件，子组件在水平方向上依次排列。")]),t._v(" "),a("li",[t._v("Column：用于在垂直方向上排列子组件，子组件在垂直方向上依次排列。")]),t._v(" "),a("li",[t._v("Stack：用于在重叠的方式排列子组件，可以通过定位子组件来控制它们的位置。")]),t._v(" "),a("li",[t._v("Expanded：用于占据可用空间的子组件，可以在Row、Column等布局组件中使用，让子组件填充剩余空间。")]),t._v(" "),a("li",[t._v("GridView：用于创建一个网格布局，可以在水平和垂直方向上排列子组件。")]),t._v(" "),a("li",[t._v("ListView：用于创建一个滚动的列表布局，可以在垂直方向上排列子组件，并支持滚动。")]),t._v(" "),a("li",[t._v("Wrap：用于在水平方向上自动换行的方式排列子组件。")]),t._v(" "),a("li",[t._v("Flex：用于根据比例分配可用空间的子组件，可以在Row、Column等布局组件中使用。")]),t._v(" "),a("li",[t._v("SizedBox：用于创建一个具有固定尺寸的盒子，可以用来设置宽度、高度或两者。")])]),t._v(" "),a("p",[t._v("这些是常见的布局组件，通过它们的组合和嵌套，可以实现各种复杂的布局效果。同时，Flutter还提供了许多其他布局组件和布局相关的属性，可以根据实际需求选择适合的布局方式。")]),t._v(" "),a("h2",{attrs:{id:"打开模拟器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打开模拟器"}},[t._v("#")]),t._v(" 打开模拟器")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),t._v(" -a Simulator\n")])])]),a("h2",{attrs:{id:"插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件"}},[t._v("#")]),t._v(" 插件")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("flutter")])]),t._v(" "),a("li",[a("p",[t._v("dart")])]),t._v(" "),a("li",[a("p",[t._v("Flutter Widget Snippets")])]),t._v(" "),a("li",[a("p",[t._v("Awesome Flutter Snippets是vscode中一个可以快速生成FLutter代码的插件。")]),t._v(" "),a("p",[t._v("使用示例")]),t._v(" "),a("p",[t._v("键入“stlss”，回车，自动生成Stateless页面框架。")])])]),t._v(" "),a("h2",{attrs:{id:"在flutter里使用packages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在flutter里使用packages"}},[t._v("#")]),t._v(" 在flutter里使用packages")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://flutter.cn/docs/development/packages-and-plugins/using-packages",target:"_blank",rel:"noopener noreferrer"}},[t._v("在 Flutter 里使用 Packages"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);