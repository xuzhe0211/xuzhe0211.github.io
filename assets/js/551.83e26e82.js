(window.webpackJsonp=window.webpackJsonp||[]).push([[551],{2493:function(t,a,s){"use strict";s.r(a);var r=s(46),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"幂等"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#幂等"}},[t._v("#")]),t._v(" 幂等")]),t._v(" "),s("p",[t._v("从逻辑学的角度解释")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("p\n")])])]),s("p",[t._v("从数学的角度理解")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("简单来说，幂等这个概念指的是多次同样的操作不改变结果。幂等的概念广泛运用于各种分布式架构，由于网络延迟等原因，一个请求可能要多次重试，遇到这种情况需要保证对应的请求接口是幂等的。另外还有类似银行转账的情形，就算多次请求也要保证对账户只做一次操作")]),t._v(" "),s("h2",{attrs:{id:"http协议的幂等性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http协议的幂等性"}},[t._v("#")]),t._v(" HTTP协议的幂等性")]),t._v(" "),s("p",[t._v("以我们常见的四种HTTP Method为例，加深我们对幂等性的理解")]),t._v(" "),s("h3",{attrs:{id:"get"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[t._v("#")]),t._v(" GET")]),t._v(" "),s("p",[t._v("GET操作是幂等的，原因是GET操作根本不会对服务器产生任何影响。有人可能会说我们访问GET/last_news可能每次拿到的数据结果不一样，"),s("strong",[t._v("这里幂等的一致性指的是数据库的最终的存储结果，而不是调用方拿到的返回结果")])]),t._v(" "),s("h2",{attrs:{id:"put"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#put"}},[t._v("#")]),t._v(" PUT")]),t._v(" "),s("p",[t._v("PUT方法通常是对已经存在的资源进行修改，也是幂等的。比如我们发起多个把A替换成B的请求，最终结果还是会B")]),t._v(" "),s("h2",{attrs:{id:"delete"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[t._v("#")]),t._v(" DELETE")]),t._v(" "),s("p",[t._v("DELETE方法也是幂等的，例如我们发起多个对A的删除请求，如果第一个成功的话，后面的请求都应返回资源找不到的错误")]),t._v(" "),s("h2",{attrs:{id:"post"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#post"}},[t._v("#")]),t._v(" POST")]),t._v(" "),s("p",[t._v("POST一般是指新增资源，不是幂等的。如果连续发起三个A资源的增加，最终结果回事三个A资源，而不是一个")])])}),[],!1,null,null,null);a.default=e.exports}}]);