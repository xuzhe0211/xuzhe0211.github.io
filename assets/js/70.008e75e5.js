(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{2178:function(t,s,a){"use strict";a.r(s);var n=a(46),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("主要解决的问题")]),t._v(" "),n("ul",[n("li",[t._v("故障恢复")]),t._v(" "),n("li",[t._v("多核利用")]),t._v(" "),n("li",[t._v("多进程共享端口")])]),t._v(" "),n("h2",{attrs:{id:"cluster-集群"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cluster-集群"}},[t._v("#")]),t._v(" cluster(集群)")]),t._v(" "),n("p",[t._v("cluster可以多核监听同一个端口。实现多进程共享端口，这个在node底层已经做好了")]),t._v(" "),n("p",[n("strong",[t._v("folk(child_process.fork)方式不能实现多进程共享端口，还需要nginx去做多个端口的负载均衡，一般来说用cluster要好点，folk方式适用于多个程序之间")])]),t._v(" "),n("p",[t._v("建立一个cluster.js文件")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cluster "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cluster'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cluster库")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" os "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'os'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取cpu的数量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" numCPUs "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cpus")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" process "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'process'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 管理进程用的")]),t._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'numCPUs:'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" numCPUs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印cpu数量 ①")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" workers "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cluster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isMaster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里是进入主进程，第一次启动的时候运行这里")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 主进程分支")]),t._v("\n    cluster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'death'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("worker")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ②")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当一个工作进程结束时，重启工作进程delete workers[worker.pid];这里主要是为了让代码即使报错，也不会影响服务器运行。故障恢复")]),t._v("\n        worker "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cluster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        workers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("worker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" worker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始开启与CPU数量相同的工作进程， 多核利用③")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" numCPUs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" worker "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cluster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 复制进程，有多少个核，复制多少个子进程，复制的过程会重新运行一遍该文件(因为是复制进程，代码也会复制在子进程运行)")]),t._v("\n        workers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("worker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" worker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里是子进程开启的时候，就是主进程folk之后，会走到这里。所以这里会启动与cpu相同数量的子进程服务")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子进程启动服务器，多进程共享3000端口 ④")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" koa "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'koa'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" app "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("koa")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// app.use(require('koa-static')(__dirname + '/'))")]),t._v("\n    app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello docker'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'worker'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" cluster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("worker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("',PID:'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当主进程被终止之后，关闭所有工作进程 ⑤")]),t._v("\nprocess"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SIGTERM'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pid "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" workers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("直接看代码，这样看可能看不太懂。我们用一个流程图来展示。我在上面代码标记了①-⑤ ,5个代码块")]),t._v(" "),n("p",[n("img",{attrs:{src:a(459),alt:"cluster"}})]),t._v(" "),n("p",[t._v("这里看运行情况，启动后，打印了5次cupu数量(主进程一次，子进程4次)，①这段代码执行了5次")]),t._v(" "),n("p",[t._v("然后我们通过访问localhost:3000,得到当前访问的是第三个子进程")]),t._v(" "),n("p",[n("img",{attrs:{src:a(460),alt:"numCPUs"}})]),t._v(" "),n("h2",{attrs:{id:"更优雅的部署node-pm2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更优雅的部署node-pm2"}},[t._v("#")]),t._v(" 更优雅的部署node(PM2)")]),t._v(" "),n("ul",[n("li",[t._v("内建负载均衡(使用Node cluster集群模块、子进程)")]),t._v(" "),n("li",[t._v("线程守护，keep alive")]),t._v(" "),n("li",[t._v("0秒停机重载，维护升级的时候不需要停机")]),t._v(" "),n("li",[t._v("现在Linux(stable)&MacOs(stable)&Windows(stable)多平台支持")]),t._v(" "),n("li",[t._v("停止不稳定的进程(避免无限循环)")]),t._v(" "),n("li",[t._v("控制台检测https://id.keymetrics.io/api/oauth/login#/register")]),t._v(" "),n("li",[t._v("提供HTTP API")])]),t._v(" "),n("p",[t._v("命令部署方法")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("npm install -g pm2\npm2 start app.js --watch -i 2 // watch监听文件变化\n// -i 启动多少个实例\npm2 stop all\npm2 list\npm2 start app.js -i max # 根据机器CPU数,开启对应数目的进程\n")])])]),n("p",[n("img",{attrs:{src:a(461),alt:"pm2"}})]),t._v(" "),n("p",[t._v("process.yml文件部署方法")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("apps: \n    - script: app.js\n      instances: 2\n      watch  : true\n      env    :\n        NODE_ENV: production\n")])])]),n("p",[t._v("运行pm2 start process.yml")]),t._v(" "),n("p",[n("img",{attrs:{src:a(462),alt:"pm2 process.yml"}})]),t._v(" "),n("p",[t._v("pm2设置开机启动pm2 startup")]),t._v(" "),n("p",[t._v("可以看到两种方式的效果是一样的，但是大多数选择yml文件启动")]),t._v(" "),n("h2",{attrs:{id:"docker概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker概念"}},[t._v("#")]),t._v(" docker概念")]),t._v(" "),n("p",[t._v("docker属于Linux容器的一种封装，提供简单易用的容器使用接口")]),t._v(" "),n("ul",[n("li",[t._v("提供一次性的环境。比如，本地测试他人的软件、持续集成的时候提供单元测试和构建环境")]),t._v(" "),n("li",[t._v("提供弹性的云服务。因为docker容器可以随开随关，很适合动态扩容和缩容")]),t._v(" "),n("li",[t._v("组建微服务架构。通过多个容器，一台机器可以跑多个服务，因此在本机就可以模拟处微服务架构")]),t._v(" "),n("li",[t._v("image可以创建容器，每个容器都有自己的容器端口，我们需要将它映射到主机端口")]),t._v(" "),n("li",[t._v("docker compose是docker提供的一个命令行工具，用来定义和运行由多个容器组成的应用。使用compose，我们可以通过YAML文件声明式的定义应用程序的各个服务，并由单个命令完成应用的创建和启动")])]),t._v(" "),n("p",[t._v("特点")]),t._v(" "),n("ul",[n("li",[t._v("高效的利用系统资源")]),t._v(" "),n("li",[t._v("快速的启动时间")]),t._v(" "),n("li",[t._v("一致的运行环境")]),t._v(" "),n("li",[t._v("持续交付和部署")]),t._v(" "),n("li",[t._v("更轻松地迁移")])]),t._v(" "),n("p",[t._v("对比传统虚拟机总结")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("特性")]),t._v(" "),n("th",[t._v("容器")]),t._v(" "),n("th",[t._v("虚拟机")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("启动")]),t._v(" "),n("td",[t._v("秒级")]),t._v(" "),n("td",[t._v("分钟级")])]),t._v(" "),n("tr",[n("td",[t._v("硬盘使用")]),t._v(" "),n("td",[t._v("一般为MB")]),t._v(" "),n("td",[t._v("一般为GB")])]),t._v(" "),n("tr",[n("td",[t._v("性能")]),t._v(" "),n("td",[t._v("接近原生")]),t._v(" "),n("td",[t._v("弱于")])]),t._v(" "),n("tr",[n("td",[t._v("系统支持两")]),t._v(" "),n("td",[t._v("单机支持上千个容器")]),t._v(" "),n("td",[t._v("一般几十个")])])])]),t._v(" "),n("p",[t._v("三个核心概念")]),t._v(" "),n("ol",[n("li",[t._v("镜像")]),t._v(" "),n("li",[t._v("容器")]),t._v(" "),n("li",[t._v("仓库")])]),t._v(" "),n("p",[t._v("和pm2类似，docker也有两种方式启动，一种是命令方式，一种是Dockerfile定制镜像方式")]),t._v(" "),n("p",[t._v("DockerFile参数")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("FROM")]),t._v(" "),n("th",[t._v("MAINTAINER")]),t._v(" "),n("th",[t._v("RUN")]),t._v(" "),n("th",[t._v("ADD&COPY")]),t._v(" "),n("th",[t._v("WORKDIR")]),t._v(" "),n("th",[t._v("VALUME")]),t._v(" "),n("th",[t._v("EXPOSE")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("它依赖什么")]),t._v(" "),n("td",[t._v("维护者信息")]),t._v(" "),n("td",[t._v("执行命令行命令")]),t._v(" "),n("td",[t._v("复制文件到指定路径(ADD能解压)")]),t._v(" "),n("td",[t._v("指定工作目录")]),t._v(" "),n("td",[t._v("目录挂载")]),t._v(" "),n("td",[t._v("容器端口")])])])]),t._v(" "),n("p",[t._v("常用的doker命令")]),t._v(" "),n("ul",[n("li",[t._v("查看docker版本：dokcer version")]),t._v(" "),n("li",[t._v("显示docker系统信息：docker info")]),t._v(" "),n("li",[t._v("检索image:docker search image_name")]),t._v(" "),n("li",[t._v("下载image:dokcer pull image_name")]),t._v(" "),n("li",[t._v("已下载镜像列表:dokcer images")]),t._v(" "),n("li",[t._v("删除镜像: docker rm image_name")]),t._v(" "),n("li",[t._v("启动容器: docker run image_name")])]),t._v(" "),n("h3",{attrs:{id:"docker构建一个nginx服务器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker构建一个nginx服务器"}},[t._v("#")]),t._v(" docker构建一个nginx服务器")]),t._v(" "),n("ol",[n("li",[t._v("拉去官方镜像"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("拉取官方镜像\ndocker pull nginx\n查看镜像\ndocker images nginx\n启动镜像\ndocker run -p 80:80 -d nginx\n查看进程\ndocker ps\ndocker ps -a // 查看全部\n停止\ndocker stop id\n删除镜像\ndocker rm id\n")])])])]),t._v(" "),n("li",[t._v("Dockerfile定制镜像"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("#Dockerfile\nFROM nginx:latest\nRUN echo '<h1>Hello, docker</h1>' > /usr/share/nginx/html/index.html\n\n\n# 定制镜像\ndocker build -t mynginx .\n# 运⾏\n# -d 守护态运⾏\ndocker run -p 80:80 -d mynginx\n")])])])])]),t._v(" "),n("h3",{attrs:{id:"docker-compose"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[t._v("#")]),t._v(" Docker-Compose")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/pushiqiang/article/details/78682323",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("Docker-Compose项目是Docker官方开源项目，负责实现对docker容器集群的快速编排\nDocker-Compose将所管理的容器分为三层,分别是工程(project)，服务(service)以及容器(container)。\nDocker-Compose运行目录下的所有文件(docker-compose.yml,extends文件或环境变量文件等)组成一个功能，若无特殊指定工程名即为当前目录名")])]),t._v(" "),n("p",[t._v("docker-compose主要是可以集合多个服务，一起运行。比如一个项目有(前端、后台、数据库、nginx)4个服务需要去启动，如果单独启动的话，我们需要运行4次docker。这里我们能通过docker-compose，一起运行")]),t._v(" "),n("p",[t._v("案例：nginx+node+pm2后台")]),t._v(" "),n("ol",[n("li",[t._v("nginx-在nginx文件夹里，里面建立一个conf.d文件夹。添加一个一个docker.conf文件"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("## nginx/conf.d/docker.conf\nserver {\n    listen       80;\n    location / {\n        root   /var/www/html;\n        index  index.html index.htm;\n    }\n    location ~ \\.(gif|jpg|png)$ {\n        root /static;\n        index index.html index.htm;\n    }\n    location /api {\n            proxy_pass  http://127.0.0.1:3000;\n            proxy_redirect     off;\n            proxy_set_header   Host             $host;\n            proxy_set_header   X-Real-IP        $remote_addr;\n            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n    }\n}\n")])])])]),t._v(" "),n("li",[t._v("node"),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// app.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Koa "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'koa'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Koa")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello docker'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app started at http://localhost:3000/'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// process.yml")]),t._v("\napps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" script "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n    instances"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    watch  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    env    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" production\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Dockerfile")]),t._v("\n#Dockerfile\n#制定node镜像的版本\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FROM")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alpine\n#移动当前目录下面的文件到app目录下\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ADD")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("app"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n#进入到app目录下面，类似cd\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WORKDIR")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("app\n#安装依赖\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RUN")]),t._v(" npm install\n#对外暴露的端口\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EXPOSE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("\n#程序启动脚本\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CMD")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pm2-runtime"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"start"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"process.yml"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])]),t._v(" "),n("li",[t._v("构建docker-compose.yml"),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("## docker"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("compose"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("yml\n\nversion"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\nservices"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\napp"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pm2"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    container_name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" app"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pm2\n    #构建容器\n    build"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("node \n    ports"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3000:3000"')]),t._v("\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    restart"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" always\n    image"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" nginx\n    ports"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    volumes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("conf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("etc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("conf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("  #本地配置文件写入到nginx配置目录\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" \n")])])])]),t._v(" "),n("li",[t._v("创建一个www文件夹放一个静态html文件"),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//index.html")]),t._v("\n\nhello web"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" \n")])])])])]),t._v(" "),n("p",[t._v("可以看到在docker-compose文件里面，我们运行了两个镜像，一个是打包后的node名为app-pm2的镜像，一个是nginx的镜像。\n同时我们把nginx的配置文件从本地写到了docker运行的nginx目录里面。现在我们来看运行效果：")]),t._v(" "),n("p",[t._v("输入：docker-compose up -d 后台启动命令。\n"),n("img",{attrs:{src:a(463),alt:"docker-compose"}})]),t._v(" "),n("p",[t._v("可以看到，两个容器都被创建。现在我们先访问80端口（nginx映射在80端口）。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(464),alt:"web server"}})]),t._v(" "),n("p",[t._v("访问成功，成功访问到www/index.html")]),t._v(" "),n("p",[t._v("然后我们访问/api路径，看是否可以访问到node服务器")]),t._v(" "),n("p",[n("img",{attrs:{src:a(465),alt:"node server"}})]),t._v(" "),n("p",[t._v("访问成功。这里一个docker-compose的案例就成功运行了。里面用了nginx反向代理3000端口接口到80端口/api路径，同时用了pm2去启动node接口服务器。")]),t._v(" "),n("p",[t._v("项目搭建好之后，就需要持续集成了")]),t._v(" "),n("h2",{attrs:{id:"其他"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个项目example")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hostname "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0.0.0.0'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" port "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" server "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusCode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/plain'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World\\n'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\nserver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("port"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hostname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("Server running at http://")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("hostname"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("port"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("运行并启动项目")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("example"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])])]),n("p",[t._v("运行以下命令，列入系统已在监听的端口信息。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("netstat "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("tpln\n")])])]),n("p",[t._v("删掉进程")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("ps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ax "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" grep node\n\nkill "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("11191")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("进程id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"查看-dockervolumes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看-dockervolumes"}},[t._v("#")]),t._v(" 查看 dockervolumes")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有 docker volumes")]),t._v("\ndocker volume "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看容器挂载的volumes")]),t._v("\ndocker inspect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("container-id_or_name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 示例")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mounts"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Type"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"volume"')]),t._v(",\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Name"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my-volume"')]),t._v(",\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Source"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/var/lib/docker/volumes/my-volume/_data"')]),t._v(",\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Destination"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/app/data"')]),t._v(",\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Driver"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"local"')]),t._v(",\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mode"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(",\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"RW"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true,\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Propagation"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("h3",{attrs:{id:"通过docker-compose查看volumes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#通过docker-compose查看volumes"}},[t._v("#")]),t._v(" 通过docker-compose查看volumes")]),t._v(" "),n("p",[t._v("如果你的容器是通过 docker-compose 启动的，可以查看 docker-compose.yml文件中的 volumes配置项")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("volumes:\n  my-volume:\n    driver: "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v("\n")])])]),n("h3",{attrs:{id:"实时查看容器挂载的volumes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实时查看容器挂载的volumes"}},[t._v("#")]),t._v(" 实时查看容器挂载的volumes")]),t._v(" "),n("p",[t._v("通过一下命令动态查看容器 volume 信息")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("docker container inspect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("container_id_or_name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --format "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{{ json .Mounts }}'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Type"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"volume"')]),t._v(",\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Name"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my-volume"')]),t._v(",\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Source"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/var/lib/docker/volumes/my-volume/_data"')]),t._v(",\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Destination"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/app/data"')]),t._v(",\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Driver"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"local"')]),t._v(",\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mode"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(",\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"RW"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true,\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Propagation"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("h2",{attrs:{id:"参考资料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://nodejs.org/dist/latest-v10.x/docs/api/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js"),n("OutboundLink")],1)])]),t._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://blog.csdn.net/qq_24073885/article/details/109580808",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何构建一个高可用的node环境"),n("OutboundLink")],1)])])])])}),[],!1,null,null,null);s.default=e.exports},459:function(t,s,a){t.exports=a.p+"assets/img/20201109164619230.5381c06c.png"},460:function(t,s,a){t.exports=a.p+"assets/img/20201109164545122.76dd224f.png"},461:function(t,s,a){t.exports=a.p+"assets/img/20201110154350270.ff16f24d.png"},462:function(t,s,a){t.exports=a.p+"assets/img/20201110154526738.b52675a6.png"},463:function(t,s,a){t.exports=a.p+"assets/img/2020111116230168.0b6ede64.png"},464:function(t,s,a){t.exports=a.p+"assets/img/20201111162434400.26da005d.png"},465:function(t,s,a){t.exports=a.p+"assets/img/2020111116313679.bd9719ad.png"}}]);