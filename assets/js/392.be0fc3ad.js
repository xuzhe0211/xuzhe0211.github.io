(window.webpackJsonp=window.webpackJsonp||[]).push([[392],{2164:function(n,e,s){"use strict";s.r(e);var t=s(46),o=Object(t.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h2",{attrs:{id:"dockerfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[n._v("#")]),n._v(" DockerFile")]),n._v(" "),s("h3",{attrs:{id:"基本结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本结构"}},[n._v("#")]),n._v(" 基本结构")]),n._v(" "),s("p",[n._v("Dockerfile")]),n._v(" "),s("h2",{attrs:{id:"docker-compose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[n._v("#")]),n._v(" docker-compose")]),n._v(" "),s("p",[n._v("举个栗子")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('version: \'3.2\'\nservices:\n  #Nginx\n  nginx_lb:\n    restart: always\n    image: nginx:1.11.6-alpine\n    ports:\n      - 28080:80\n      - 80:80\n      - 443:443\n    volumes:\n      - /opt/soft/containers/nginx/conf.d:/etc/nginx/conf.d\n      - /opt/soft/containers/nginx/log:/var/log/nginx\n      - /opt/soft/containers/nginx/www:/var/www\n      - /opt/soft/containers/nginx/zl-management-system:/var/zl-management-system\n      - /opt/soft/containers/nginx/ssl:/etc/nginx/ssl\n    stdin_open: true\n    tty: true\n  mysql_db:\n    image: percona:5.6\n    environment:\n      MYSQL_ROOT_PASSWORD: cloud\n      TZ: "Asia/Shanghai"\n    volumes:\n      - /opt/soft/containers/mysql/conf:/etc/mysql/conf.d\n      - /opt/soft/containers/mysql/data:/var/lib/mysql\n      - /opt/soft:/opt/soft\n    ports:\n      - "3306:3306"\n    networks:\n      vpcbr:\n        ipv4_address: 172.16.0.51\n  zoo1:\n    image: wurstmeister/zookeeper\n    ports:\n      - "2181:2181"\n    networks:\n      vpcbr:\n        ipv4_address: 172.16.0.56\n\n  # kafka version: 1.1.0\n  # scala version: 2.12\n  kafka:\n    image: wurstmeister/kafka\n    ports:\n      - "9092:9092"\n    environment:\n      KAFKA_ADVERTISED_HOST_NAME: kafka\n      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"\n      KAFKA_BROKER_ID: 1\n      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1\n      KAFKA_CREATE_TOPICS: "drive_fsys_fop:1:1"\n    depends_on:\n      - zoo1\n    networks:\n      vpcbr:\n        ipv4_address: 172.16.0.57\n\n\nnetworks:\n  vpcbr:\n    driver: bridge\n    ipam:\n     config:\n       - subnet: 172.16.0.0/16\n       #- gateway: 172.16.0.1\n  #vpchost:\n  #  driver: host\n')])])]),s("p",[n._v("使用")]),n._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("cd")]),n._v(" /root/docker-compose/\ndocker-compose restart mysql_db\n\n\ndocker-compose --help你会看到如下这么多命令\nbuild               Build or rebuild services\nbundle              Generate a Docker bundle from the Compose "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("file")]),n._v("\nconfig              Validate and view the Compose "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("file")]),n._v("\ncreate              Create services\ndown                Stop and remove containers, networks, images, and volumes\nevents              Receive real "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("time")]),n._v(" events from containers\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("exec")]),n._v("                Execute a "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("command")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("in")]),n._v(" a running container\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("help")]),n._v("                Get "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("help")]),n._v(" on a "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("command")]),n._v("\nimages              List images\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("kill")]),n._v("                Kill containers\nlogs                View output from containers\npause               Pause services\nport                Print the public port "),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("for")]),n._v(" a port binding\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("ps")]),n._v("                  List containers\npull                Pull "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("service")]),n._v(" images\npush                Push "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("service")]),n._v(" images\nrestart             Restart services\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("rm")]),n._v("                  Remove stopped containers\nrun                 Run a one-off "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("command")]),n._v("\nscale               Set number of containers "),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("for")]),n._v(" a "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("service")]),n._v("\nstart               Start services\nstop                Stop services\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("top")]),n._v("                 Display the running processes\nunpause             Unpause services\nup                  Create and start containers\nversion             Show the Docker-Compose version information\n　　\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("3")]),n._v(".常用命令\n\ndocker-compose up -d nginx                     构建建启动nignx容器\n\ndocker-compose "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("exec")]),n._v(" nginx "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("bash")]),n._v("            登录到nginx容器中\n\ndocker-compose down                              删除所有nginx容器,镜像\n\ndocker-compose "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("ps")]),n._v("                                   显示所有容器\n\ndocker-compose restart nginx                   重新启动nginx容器\n\ndocker-compose run --no-deps --rm php-fpm php -v  在php-fpm中不启动关联容器，并容器执行php -v 执行完成后删除容器\n\ndocker-compose build nginx                     构建镜像 。        \n\ndocker-compose build --no-cache nginx   不带缓存的构建。\n\ndocker-compose logs  nginx                     查看nginx的日志 \n\ndocker-compose logs -f nginx                   查看nginx的实时日志\n\n \n\ndocker-compose config  -q                        验证（docker-compose.yml）文件配置，当配置正确时，不输出任何内容，当文件配置错误，输出错误信息。 \n\ndocker-compose events --json nginx       以json的形式输出nginx的docker日志\n\ndocker-compose pause nginx                 暂停nignx容器\n\ndocker-compose unpause nginx             恢复ningx容器\n\ndocker-compose "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("rm")]),n._v(" nginx                       删除容器（删除前必须关闭容器）\n\ndocker-compose stop nginx                    停止nignx容器\n\ndocker-compose start nginx                    启动nignx容器\n")])])]),s("h2",{attrs:{id:"资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[n._v("#")]),n._v(" 资料")]),n._v(" "),s("p",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg2MjEwMjI1Mg==&mid=2247522872&idx=3&sn=91b72d3ce5d079f481cbc0df8e3d3bf8&chksm=ce0e2dbbf979a4ad408fb490313c1fd635f14fd36e9aae1cc67130d5d6f97b248fac1d310bb4&scene=132#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[n._v("入门docker"),s("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=o.exports}}]);