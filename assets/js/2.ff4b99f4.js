(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{2158:function(s,t,a){"use strict";a.r(t);var e=a(46),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("Docker 是一种容器技术，它可以在操作系统上创建多个相互隔离的容器。容器内独立安装软件、运行服务。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(381),alt:"docker"}})]),s._v(" "),e("p",[s._v("但是，这个容器和宿主机还是有关联的，比如可以把宿主机的端口映射到容器内的端口、宿主机某个目录挂载到容器内的目录")]),s._v(" "),e("p",[e("img",{attrs:{src:a(382),alt:"宿主机"}})]),s._v(" "),e("p",[s._v("比如映射了3000端口，那容器内3000端口的服务，就可以在宿主机的3000端口访问了。")]),s._v(" "),e("p",[s._v("比如挂载了/aaa到容器的/bbb/ccc,那容器内读写/bbb/ccc目录的时候，改的就是宿主机的/aaa目录，反过来，改宿主机/aaa目录，容器内的/bbb/ccc也会改，这两同一个。")]),s._v(" "),e("p",[s._v("这分别叫做"),e("span",{staticStyle:{color:"red","font-weight":"bold"}},[s._v("端口映射、数据卷(volume)挂载")])]),s._v(" "),e("p",[s._v("这个容器是通过镜像起来的，通过docker run images-name")]),s._v(" "),e("p",[s._v("比如")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker run -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v(":3000 -v /aaa:/bbb/ccc --name xxx-container xx-image\n")])])]),e("p",[s._v("通过xx-image 镜像跑起来一个叫做xxx-container的容器。")]),s._v(" "),e("p",[s._v("-p 指定端口映射，映射宿主机的3000到容器的3000端口")]),s._v(" "),e("p",[s._v("-v 指定数据卷挂载，挂载宿主机的/aaa到容器的/bbb/ccc目录。")]),s._v(" "),e("p",[s._v("这个镜像是通过 Dockerfiler 经过build产生的")]),s._v(" "),e("p",[s._v("也就是这样的流程")]),s._v(" "),e("p",[e("img",{attrs:{src:a(383),alt:"docker publish"}})]),s._v(" "),e("p",[s._v("一般在项目里维护dockerfile，然后执行docker build构建出镜像、push到镜像仓库，部署的的时候pull下来用docker run跑起来。")]),s._v(" "),e("p",[s._v("基本CI/CD也是这样的流程：")]),s._v(" "),e("p",[s._v("CI 的时候git clone 项目，根据dockerfile构建出镜像，打上tag，push到仓库")]),s._v(" "),e("p",[s._v("CD 的时候把打 tag的镜像下载下来，docker run 跑起来。")]),s._v(" "),e("p",[s._v("这个 Dokcerfile 是在项目里维护的，虽然CI/CD流程不用自己搞，但是Dockerfile还是要开发者自己写的。")]),s._v(" "),e("p",[s._v("比如我创建了一个nest项目")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("npx nest new dockerfile-test -p "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v("\n")])])]),e("p",[e("img",{attrs:{src:a(384),alt:"npx new"}})]),s._v(" "),e("p",[s._v("然后执行npm run build，之后把它跑起来")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("npm run build\nnode "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("dist"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("main"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js\n")])])]),e("p",[e("img",{attrs:{src:a(385),alt:"npm run build"}})]),s._v(" "),e("p",[s._v("这时候访问http://localhost:3000 可以看到hello world，说明服务器跑成功了")]),s._v(" "),e("p",[e("img",{attrs:{src:a(386),alt:"webview"}})]),s._v(" "),e("p",[s._v("那如何通过Docker部署这个服务呢？")]),s._v(" "),e("p",[s._v("首先，如果你没安装docker,可以从docker.com下载docker desktop，它自带了docker 命令")]),s._v(" "),e("p",[e("img",{attrs:{src:a(387),alt:"docker 官网"}})]),s._v(" "),e("p",[s._v("跑起来可以看到本地的所有docker容器和镜像")]),s._v(" "),e("p",[e("img",{attrs:{src:a(388),alt:"docker setup"}})]),s._v(" "),e("p",[s._v("命令行也是可以用的\n"),e("img",{attrs:{src:a(389),alt:"docker command"}})]),s._v(" "),e("p",[s._v("然后我们来写下Dockerfile")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FROM")]),s._v(" node"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("WORKDIR")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("app\n\n"),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COPY")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("json "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COPY")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lock "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RUN")]),s._v(" npm config "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" registry https"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("registry.npmmirror.com")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RUN")]),s._v(" npm install\n\n"),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COPY")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RUN")]),s._v(" npm run build\n\n"),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("EXPOSE")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CMD")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./dist/main.js"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),e("p",[s._v("FROM node:18 是继承 node:18 基础镜像。")]),s._v(" "),e("p",[s._v("WORKDIR /app 是指定当前目录为/app")]),s._v(" "),e("p",[s._v("COPY 复制宿主机的package.json 和 lock 文件到容器的当前目录，也就是/app下")]),s._v(" "),e("p",[s._v("RUN 是执行命令，这里执行了npm install")]),s._v(" "),e("p",[s._v("然后再复制其余的文件到容器内。")]),s._v(" "),e("p",[s._v("EXPOSE 指定容器需要暴露的端口是3000.")]),s._v(" "),e("p",[s._v("CMD指定容器跑起来时执行的命令是 node ./dist/main.js")]),s._v(" "),e("p",[s._v("然后通过 docker build 把它构建成镜像：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("docker build "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("t dockerfile"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("test"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("first\n")])])]),e("p",[s._v("-t 是指定名字和标签，这里镜像名为 dockerfile-test 标签为 first")]),s._v(" "),e("p",[e("img",{attrs:{src:a(390),alt:"docker build -t"}})]),s._v(" "),e("p",[s._v("然后在 docker desktop 的iamges里就可以看到这个镜像了")]),s._v(" "),e("p",[e("img",{attrs:{src:a(391),alt:"docker desktop"}})]),s._v(" "),e("p",[s._v("就是现在镜像稍微大了点，有 1.45 G。")]),s._v(" "),e("p",[s._v("我们先跑起来看看：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("docker run "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("d "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2333")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("name first"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("container dockerfile"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("test"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("first\n")])])]),e("p",[e("span",{staticStyle:{color:"blue"}},[s._v("-d 是后台运行")])]),s._v(" "),e("p",[e("span",{staticStyle:{color:"blue"}},[s._v("-p 指定端口映射，映射宿主机2333端口到容器的3000端口")])]),s._v(" "),e("p",[e("span",{staticStyle:{color:"blue"}},[s._v("--name 指定容器名")])]),s._v(" "),e("p",[e("img",{attrs:{src:a(392),alt:"docker run"}})]),s._v(" "),e("p",[s._v("然后就可以看到容器部分有了这个这个容器")]),s._v(" "),e("p",[e("img",{attrs:{src:a(393),alt:"docker container"}})]),s._v(" "),e("p",[s._v("浏览器访问 http://localhost:2333 就可以访问容器内跑的这个服务：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(394),alt:"docker server"}})]),s._v(" "),e("p",[s._v("这就是 Dockerfile 构建成镜像，然后通过容器跑起来的流程。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(395),alt:"docker 流程"}})]),s._v(" "),e("p",[s._v("但是刚才也发现了，现在镜像太大了，有 1.45G 呢，怎么优化一下呢？")]),s._v(" "),e("p",[s._v("这就涉及到了第一个技巧：")]),s._v(" "),e("h2",{attrs:{id:"使用-alpine-镜像-而不是默认的-linux-镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-alpine-镜像-而不是默认的-linux-镜像"}},[s._v("#")]),s._v(" 使用 alpine 镜像，而不是默认的 linux 镜像")]),s._v(" "),e("p",[s._v("docker容器内跑的是linux系统，各种镜像的dockerfile都会继承linux镜像作为基础镜像。")]),s._v(" "),e("p",[s._v("比如我们刚刚创建的那个镜像，点开详情可以看到它的镜像继承关系")]),s._v(" "),e("p",[e("img",{attrs:{src:a(396),alt:"镜像的继承关系"}})]),s._v(" "),e("p",[s._v("最终还是继承了debian的Linux镜像，这是一个linux发行版")]),s._v(" "),e("p",[s._v("但其实这个linux镜像可以换成更小的版本，也就是alpine。")]),s._v(" "),e("p",[s._v("它裁剪了很多不必要的linux功能，使得镜像体积大幅减小了。")]),s._v(" "),e("p",[s._v("alpine 是高山植物，就是很少的资源就能存活的意思。")]),s._v(" "),e("p",[s._v("我们改下 dockerfile，使用 alpine 的镜像：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(397),alt:"linux alpine"}})]),s._v(" "),e("p",[s._v("node:18-alpine3.14是使用18版本的node镜像")]),s._v(" "),e("p",[s._v("然后 docker build")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("docker build "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("t dockerfile"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("test"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("second\n")])])]),e("p",[e("img",{attrs:{src:a(398),alt:"docker build"}})]),s._v(" "),e("p",[s._v("这次的 tag 为 second。")]),s._v(" "),e("p",[s._v("然后在docker desktop 里看下\n"),e("img",{attrs:{src:a(399),alt:"docker desktop"}})]),s._v(" "),e("p",[s._v("好家伙，足足小了 900M。")]),s._v(" "),e("p",[s._v("我们点开看看：\n"),e("img",{attrs:{src:a(400),alt:"linux alipine"}})]),s._v(" "),e("p",[s._v("可以看到它的底层linux镜像是 alpine3.14")]),s._v(" "),e("p",[s._v("体积小了这么多，功能还正常么？")]),s._v(" "),e("p",[s._v("我们跑跑看：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("docker run "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("d "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2334")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("name second"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("container dockerfile"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("test"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("second\n")])])]),e("p",[s._v("docker desktop 可以看到这个跑起来的容器：")]),s._v(" "),e("p",[s._v("浏览器访问下，依然是正常的：\n"),e("img",{attrs:{src:a(401),alt:"localhost"}})]),s._v(" "),e("p",[s._v("alpine只是去掉了很多linux里用不到的功能，使得镜像体积更小")]),s._v(" "),e("p",[s._v("这就是第一个技巧。")]),s._v(" "),e("p",[s._v("然后再来看第二个：")]),s._v(" "),e("h2",{attrs:{id:"使用多阶段构建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用多阶段构建"}},[s._v("#")]),s._v(" 使用多阶段构建")]),s._v(" "),e("p",[s._v("看下面这个 dockerfile，大家发现有啥问题没？")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("FROM node:18-alpine3.14\n\nWORKDIR /app\n\nCOPY package.json "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\nRUN "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" config "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" registry https://registry.npmmirror.com/\n\nRUN "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n\nCOPY "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\nRUN "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run build\n\nEXPOSE "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v("\n\nCMD "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./dist/main.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),e("p",[s._v("有的同学可能会说：为什么先复制package.json 进去，安装一类之后在赋值其他文件，直接全服赋值进去不就行了？")]),s._v(" "),e("p",[s._v("不是的，这两种写法的效果不同。")]),s._v(" "),e("p",[e("span",{staticStyle:{color:"blue"}},[s._v("docker 是分层存储的，dockerfile里的每一行指令是一层，会做缓存")])]),s._v(" "),e("p",[e("span",{staticStyle:{color:"blue"}},[s._v("每次docker build的时候，只会从变化的层开始重新构建，没变的层会直接复用")])]),s._v(" "),e("p",[e("span",{staticStyle:{color:"blue"}},[e("strong",[s._v("也就说现在这种写法，如果package.json没变，那么就不会执行 npm  install,直接复用之前的。")])])]),s._v(" "),e("p",[s._v("那如果一开始就把所有文件复制进去呢？")]),s._v(" "),e("p",[s._v("那不管 package.json 变没变，任何一个文件变了，都会重新 npm install，这样没法充分利用缓存，性能不好。")]),s._v(" "),e("p",[s._v("我们试试看就知道了：")]),s._v(" "),e("p",[s._v("现在重新跑 docker build，不管跑多少次，速度都很快，因为文件没变，直接用了镜像缓存：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("docker build "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("t dockerfile"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("test"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("second "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])])]),e("p",[e("img",{attrs:{src:a(402),alt:"docker 缓存"}})]),s._v(" "),e("p",[s._v("现在我们改下 README.md")]),s._v(" "),e("p",[s._v("然后重新跑 build：\n"),e("img",{attrs:{src:a(403),alt:"重新build"}})]),s._v(" "),e("p",[s._v("现在花了 25s，其实是没有重新 npm install 的。")]),s._v(" "),e("p",[s._v("然后改下 package.json：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(404),alt:"修改package.json"}})]),s._v(" "),e("p",[s._v("再跑 docker build")]),s._v(" "),e("p",[e("img",{attrs:{src:a(405),alt:"重新npm install"}})]),s._v(" "),e("p",[s._v("时间明显多了很多，过程中你可以看到在 npm install 那层停留了很长时间。")]),s._v(" "),e("p",[s._v("这就是为什么要这样写：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(406),alt:"划重点"}})]),s._v(" "),e("p",[s._v("这里没问题，大家还能发现有别的问题吗？")]),s._v(" "),e("p",[s._v("问题就是源码和很多构建的依赖是不需要的，但是现在都保存在了镜像里。")]),s._v(" "),e("p",[s._v("实际上我们只需要构建出来的./dist目录下的文件还有运行时的依赖。")]),s._v(" "),e("p",[s._v("那怎么办呢？")]),s._v(" "),e("p",[s._v("这时可以用多阶段构建：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("FROM node:18-alpine3.14 as build-stage\n\nWORKDIR /app\n\nCOPY package.json "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\nRUN "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n\nCOPY "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\nRUN "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run build\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# production stage")]),s._v("\nFROM node:18-alpine3.14 as production-stage\n\nCOPY --from"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("build-stage /app/dist /app\nCOPY --from"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("build-stage /app/package.json /app/package.json\n\nWORKDIR /app\n\nRUN  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" --production\n\nEXPOSE "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v("\n\nCMD "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/app/main.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),e("p",[e("span",{staticStyle:{color:"red"}},[s._v("FROM 后面添加一个 as 来指定当前构建阶段的名字")])]),s._v(" "),e("p",[e("span",{staticStyle:{color:"red"}},[s._v("通过 COPY --from=xxx可以从上个阶段复制文件过来。")])]),s._v(" "),e("p",[e("span",{staticStyle:{color:"red"}},[s._v("然后 npm install 的时候添加 --production，这样只会安装dependencies的依赖")])]),s._v(" "),e("p",[e("span",{staticStyle:{color:"red"}},[s._v("docker build之后，只会留下最后一个阶段的镜像")])]),s._v(" "),e("p",[e("span",{staticStyle:{color:"red"}},[s._v("也就是说，最终构建出来的镜像里没有源码的，有的只是dist的文件和运行时的依赖")])]),s._v(" "),e("p",[s._v("这样镜像会小很多")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker build -t dockerfile-test:third -f "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("222")]),s._v(".Dockerfile\n")])])]),e("p",[s._v("标签为third")]),s._v(" "),e("p",[e("span",{staticStyle:{color:"red"}},[s._v("-f 是指定 Dockerfile 的名字41.j")])]),s._v(" "),e("p",[e("img",{attrs:{src:a(407),alt:"docker 多阶段构建"}})]),s._v(" "),e("p",[s._v("然后 desktop 里看下构建出来的镜像：\n"),e("img",{attrs:{src:a(408),alt:"多阶段构建结果"}})]),s._v(" "),e("p",[s._v("镜像体积比没有用多阶段构建的时候小了250M。")]),s._v(" "),e("p",[s._v("然后跑起来看看")]),s._v(" "),e("p",[e("img",{attrs:{src:a(409),alt:"多阶段构建跑起来"}})]),s._v(" "),e("p",[s._v("这次映射 2335 端口到容器内的 3000 端口。")]),s._v(" "),e("p",[s._v("依然能正常访问：")]),s._v(" "),e("p",[s._v("这就是第二个技巧，多阶段构建。")]),s._v(" "),e("h2",{attrs:{id:"使用-arg-增加构建灵活性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-arg-增加构建灵活性"}},[s._v("#")]),s._v(" 使用 ARG 增加构建灵活性")]),s._v(" "),e("p",[s._v("我们写一个test.js")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("aaa"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("；\n\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("bbb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("打印了环境变量aaa、bbb")]),s._v(" "),e("p",[s._v("跑一下：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" aaa"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" bbb"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n\nnode "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js\n")])])]),e("p",[s._v("可以看到打印了这两环境变量")]),s._v(" "),e("p",[e("img",{attrs:{src:a(410),alt:"打印demo"}})]),s._v(" "),e("p",[s._v("然后我们写个dockerfile,文件名是333.Dockerfile")]),s._v(" "),e("div",{staticClass:"language-dockerfile extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node:18-alpine3.14")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ARG")]),s._v(" aaa")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ARG")]),s._v(" bbb")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" ./test.js")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" aaa="),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${aaa}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    bbb="),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${bbb}")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/app/test.js"')]),s._v("]")]),s._v("\n")])])]),e("p",[e("span",{staticStyle:{color:"red"}},[s._v("使用ARG声明构建参数，使用 "),e("code",[s._v("${xxx}")]),s._v("获取")])]),s._v(" "),e("p",[e("span",{staticStyle:{color:"red"}},[s._v("然后用ENV声明环境变量")])]),s._v(" "),e("p",[e("span",{staticStyle:{color:"red"}},[s._v("dockerfile 内换行使用 ''")])]),s._v(" "),e("p",[s._v("之后构建的时候传入构建参数")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker build --build-arg "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("aaa")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" --build-arg "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("bbb")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" -t arg-test -f "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("333")]),s._v(".Dockerfile "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),e("p",[e("span",{staticStyle:{color:"red"}},[s._v("通过 --build-arg xxx=yyy 传入ARG参数的值")])]),s._v(" "),e("p",[e("img",{attrs:{src:a(411),alt:"ARG"}})]),s._v(" "),e("p",[s._v("点击查看镜像详情，可以看到 ARG 已经被替换为具体的值了：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(412),alt:"查看镜像详情"}})]),s._v(" "),e("p",[e("img",{attrs:{src:a(413),alt:"查看镜像详情"}})]),s._v(" "),e("p",[s._v("然后跑起来")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker run --name fourth-container arg-test\n")])])]),e("p",[e("img",{attrs:{src:a(414),alt:"查看镜像详情"}})]),s._v(" "),e("p",[s._v("可以看到容器内拿到的环境变量就是ENV设置的。")]),s._v(" "),e("p",[s._v("也就是说 ARG 是构建时候的参数，EVN 是运行时的变量")]),s._v(" "),e("p",[s._v("灵活使用 ARG，可以增加 dockerfile的灵活性")]),s._v(" "),e("p",[s._v("这就是第三个技巧")]),s._v(" "),e("h2",{attrs:{id:"cmd-结合-entrypoint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cmd-结合-entrypoint"}},[s._v("#")]),s._v(" CMD 结合 ENTRYPOINT")]),s._v(" "),e("p",[s._v("前面我们指定容器跑起来之后运行什么命令，用的CMD")]),s._v(" "),e("p",[e("img",{attrs:{src:a(415),alt:"DOCKERFILE CMD"}})]),s._v(" "),e("p",[s._v("其实还可以写成ENTRYPOINT\n"),e("img",{attrs:{src:a(416),alt:"dockerfile entrypoint"}})]),s._v(" "),e("p",[s._v("这两种写法有什么区别呢？")]),s._v(" "),e("p",[s._v("我们来试试")]),s._v(" "),e("p",[s._v("写个444.Dockerfile")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("FROM node:18-alpine3.14\n\nCMD "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"光光"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"到此一游"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),e("p",[s._v("然后build")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("docker build "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("t cmd"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("test "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("f "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("444.")]),s._v("Dockerfile "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])])]),e("p",[e("img",{attrs:{src:a(417),alt:"DOCKER CMD"}})]),s._v(" "),e("p",[s._v("然后run一下")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("docker run cmd"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("test\n")])])]),e("p",[e("img",{attrs:{src:a(418),alt:"docker run "}})]),s._v(" "),e("p",[s._v("没有指定 --name 时，会生成一个随机容器名。")]),s._v(" "),e("p",[s._v("就是这种：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(419),alt:"docker desttop"}})]),s._v(" "),e("p",[s._v("这不是重点。")]),s._v(" "),e("p",[e("span",{staticStyle:{color:"red","font-weight":"bold"}},[s._v("重点是用 CMD 的时候,启动命令是可以重写的")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker run cmd-test "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"东东"')]),s._v("\n")])])]),e("p",[e("img",{attrs:{src:a(420),alt:"cmd 重写"}})]),s._v(" "),e("p",[s._v("可以替换成任何命令")]),s._v(" "),e("p",[s._v("而用 ENTRYPOINT 就不会")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("FROM node:18-alpine3.14\n\nENTRYPOINT "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"光光"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"到此一游"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),e("p",[s._v("docker build:")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("docker build "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("t cmd"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("test "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("f "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("444.")]),s._v("Dockerfile "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])])]),e("p",[s._v("docker run:")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker run cmd-test "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"东东"')]),s._v("\n")])])]),e("p",[e("img",{attrs:{src:a(421),alt:"docker entrypoint"}})]),s._v(" "),e("p",[s._v("可以看到，现在dockerfile里ENTRYPOINT的命令依然执行了。")]),s._v(" "),e("p",[s._v("docker run 传入的参数作为了echo的额外参数")]),s._v(" "),e("p",[s._v("这就是 ENTRYPOINT 和 CDM的区别。")]),s._v(" "),e("p",[s._v("一般还是CMD 用的多点，可以灵活修改启动命令")]),s._v(" "),e("p",[s._v("其实ENTTRYPOINT 和CMD是可以结合使用的")]),s._v(" "),e("p",[s._v("比如这样")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("FROM node:18-alpine3.14\n\nENTRYPOINT "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo"')]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"光光"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\nCMD "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'到此一游'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),e("p",[s._v("docker build")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("docker build "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("t cmd"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("test "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("f "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("444.")]),s._v("Dockerfile "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])])]),e("p",[e("img",{attrs:{src:a(422),alt:"docker build"}})]),s._v(" "),e("p",[s._v("docker run")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("docker run cmd"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("test\ndocker run cmd"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("test "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("66666")]),s._v("\n")])])]),e("p",[e("img",{attrs:{src:a(423),alt:"docker run"}})]),s._v(" "),e("p",[s._v("当没传参数的时候，执行的是 ENTRYPOINT + CMD 组合的命令，而传入参数的时候，只有CMD部分会被覆盖。")]),s._v(" "),e("p",[s._v("这就起到了默认值的作用")]),s._v(" "),e("p",[s._v("所以，用 ENTRYPOINT + CMD 的方式更加灵活。")]),s._v(" "),e("p",[s._v("这是第四个技巧。")]),s._v(" "),e("h2",{attrs:{id:"copy-vs-add"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#copy-vs-add"}},[s._v("#")]),s._v(" COPY vs ADD")]),s._v(" "),e("p",[s._v("其实不只是 ENTRYPOINT 和 CMD 相似，dockerfile里还有一对指令也比较相似，就是ADD 和 COPY")]),s._v(" "),e("p",[s._v("这两都可以把宿主机的文件复制到容器内")]),s._v(" "),e("p",[s._v("但有一点区别，就是对于tar.gz这种压缩文件的处理上；")]),s._v(" "),e("p",[s._v("我们创建一个aaa 目录，下面添加两个文件")]),s._v(" "),e("p",[e("img",{attrs:{src:a(424),alt:"添加文件"}})]),s._v(" "),e("p",[s._v("使用 tar 命令打包：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("tar "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("zcvf aaa"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tar"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gz "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("aaa\n")])])]),e("p",[s._v("然后写个 555.Dockerfile")]),s._v(" "),e("div",{staticClass:"language-dockerfile extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node:18-alpine3.14")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" ./aaa.tar.gz /aaa")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" ./aaa.tar.gz /bbb")]),s._v("\n")])])]),e("p",[s._v("docker build 生成镜像")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("docker build "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("t add"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("test "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("f "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("555.")]),s._v("Dockerfile "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])])]),e("p",[e("img",{attrs:{src:a(425),alt:"docker build 555.Dockerfile"}})]),s._v(" "),e("p",[s._v("docker run 跑起来")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker run -d --name sixth-container add-test\n")])])]),e("p",[e("span",{staticStyle:{color:"red"}},[s._v("可以看到，ADD把 tar.gz 给解压然后复制到容器内了。")])]),s._v(" "),e("p",[e("span",{staticStyle:{color:"red"}},[s._v("而COPY 没有解压，它把文件整个复制过去了")])]),s._v(" "),e("p",[e("img",{attrs:{src:a(426),alt:"add vs copy"}}),s._v(" "),e("img",{attrs:{src:a(427),alt:"add vs copy"}}),s._v(" "),e("img",{attrs:{src:a(428),alt:"add vs copy"}})]),s._v(" "),e("p",[s._v("也就是说，ADD、COPY都可以用于把目录下的文件复制到容器内的目录下。")]),s._v(" "),e("p",[s._v("但ADD还可以解压 tar.gz 文件。")]),s._v(" "),e("p",[s._v("一般情况下，还是用COPY居多")]),s._v(" "),e("p",[s._v("案例代码上传了 github："),e("a",{attrs:{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/dockerfile-test",target:"_blank",rel:"noopener noreferrer"}},[s._v("案例"),e("OutboundLink")],1)]),s._v(" "),e("p",[e("span",{staticStyle:{color:"red","font-weight":"bold"}},[s._v("可以看到，ADD把tar.gz给解压然后复制到容器内了。而COPY没有解压，它把文件整个复制过去了")])]),s._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),e("p",[s._v("Dokcer是流行的容器技术，它可以在操作系统上创建多个隔离的容器，在容器内跑各种服务。")]),s._v(" "),e("p",[s._v("它的流程是Dockerfile经过 docker build 生成docker 镜像，然后 dockerrun 来跑容器")]),s._v(" "),e("p",[e("img",{attrs:{src:a(429),alt:"docker 流程"}})]),s._v(" "),e("p",[s._v("docker run 的时候可以通过 -p 指定宿主机和容器的端口映射，通过 -v 挂载数据卷到容器内的某个目录")]),s._v(" "),e("p",[s._v("CI/CD基本也是这套流程，但是Dockerfile是要开发者自己维护的。")]),s._v(" "),e("p",[s._v("Dockerfile有挺多的技巧：")]),s._v(" "),e("ul",[e("li",[e("span",{staticStyle:{color:"red"}},[s._v("使用alpine的镜像，而不是默认的linux镜像，可以极大减小镜像体积，比如node:18-alpine3.14这种")])]),s._v(" "),e("li",[e("span",{staticStyle:{color:"red"}},[s._v("使用多阶段构建，比如一个阶段来执行build，一个阶段把文件复制过去，跑起服务来，最后只保留最后一个阶段的镜像。这样使镜像内只保留运行需要的文件以及dependencies.")])]),s._v(" "),e("li",[e("span",{staticStyle:{color:"red"}},[s._v("使用ARG增加构建灵活性，ARG可以在docker build时通过 --build-arg xxx=yyy 传入，在dockerfile中生效，可以使构建过程更灵活。如果是想定义运行时可以访问的变量，可以通过 ENV 定义环境变量，值使用 ARG 传入。")])]),s._v(" "),e("li",[e("span",{staticStyle:{color:"red"}},[s._v("CMD 和 ENTRYPOINT 都可以指定容器跑起来之后运行的命令，CMD 可以被覆盖，而 ENTRYPOINT 不可以，两者结合使用可以实现参数默认值的功能。")])]),s._v(" "),e("li",[e("span",{staticStyle:{color:"red"}},[s._v("ADD 和 COPY 都可以复制文件到容器内，但是 ADD 处理 tar.gz 的时候，还会做一下解压。")])])]),s._v(" "),e("h2",{attrs:{id:"资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[s._v("#")]),s._v(" 资料")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/JnTmB7H-8tJuRWMosnHCKA",target:"_blank",rel:"noopener noreferrer"}},[s._v("掌握这 5 个技巧，让你的 Dockerfile 像个大师！"),e("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports},381:function(s,t,a){s.exports=a.p+"assets/img/13.49c83fd2.png"},382:function(s,t,a){s.exports=a.p+"assets/img/14.773e6e41.png"},383:function(s,t,a){s.exports=a.p+"assets/img/15.84f2666e.png"},384:function(s,t,a){s.exports=a.p+"assets/img/16.e1b54c4a.jpg"},385:function(s,t,a){s.exports=a.p+"assets/img/17.b16acc3d.jpg"},386:function(s,t,a){s.exports=a.p+"assets/img/18.c31386f8.jpg"},387:function(s,t,a){s.exports=a.p+"assets/img/19.f8e10c54.jpg"},388:function(s,t,a){s.exports=a.p+"assets/img/20.1fb38c13.jpg"},389:function(s,t,a){s.exports=a.p+"assets/img/21.73adba98.jpg"},390:function(s,t,a){s.exports=a.p+"assets/img/22.8e9e6434.jpg"},391:function(s,t,a){s.exports=a.p+"assets/img/23.5fd2e2f7.jpg"},392:function(s,t,a){s.exports=a.p+"assets/img/24.6911701f.jpg"},393:function(s,t,a){s.exports=a.p+"assets/img/25.61988b7a.jpg"},394:function(s,t,a){s.exports=a.p+"assets/img/26.6fd32da0.jpg"},395:function(s,t,a){s.exports=a.p+"assets/img/27.2b29d035.png"},396:function(s,t,a){s.exports=a.p+"assets/img/29.7e463c55.jpg"},397:function(s,t,a){s.exports=a.p+"assets/img/30.d3647851.jpg"},398:function(s,t,a){s.exports=a.p+"assets/img/31.4f344c73.jpg"},399:function(s,t,a){s.exports=a.p+"assets/img/32.838e2e0e.jpg"},400:function(s,t,a){s.exports=a.p+"assets/img/33.f8fc7ff7.jpg"},401:function(s,t,a){s.exports=a.p+"assets/img/34.bec78ce5.jpg"},402:function(s,t,a){s.exports=a.p+"assets/img/36.77174340.jpg"},403:function(s,t,a){s.exports=a.p+"assets/img/37.944049b7.jpg"},404:function(s,t,a){s.exports=a.p+"assets/img/38.439b3ceb.jpg"},405:function(s,t,a){s.exports=a.p+"assets/img/39.ba410f5f.jpg"},406:function(s,t,a){s.exports=a.p+"assets/img/40.7e4bf72f.jpg"},407:function(s,t,a){s.exports=a.p+"assets/img/41.e7f76a04.jpg"},408:function(s,t,a){s.exports=a.p+"assets/img/42.8e52b876.jpg"},409:function(s,t,a){s.exports=a.p+"assets/img/43.e0e3b2b3.jpg"},410:function(s,t,a){s.exports=a.p+"assets/img/44.e4957e91.jpg"},411:function(s,t,a){s.exports=a.p+"assets/img/45.607ed863.jpg"},412:function(s,t,a){s.exports=a.p+"assets/img/46.6cddee14.jpg"},413:function(s,t,a){s.exports=a.p+"assets/img/47.08fbb4c2.jpg"},414:function(s,t,a){s.exports=a.p+"assets/img/48.8b4ed93d.jpg"},415:function(s,t,a){s.exports=a.p+"assets/img/49.28bbb536.jpg"},416:function(s,t,a){s.exports=a.p+"assets/img/50.d5e5051f.jpg"},417:function(s,t,a){s.exports=a.p+"assets/img/51.b902694b.jpg"},418:function(s,t,a){s.exports=a.p+"assets/img/52.9d56e925.jpg"},419:function(s,t,a){s.exports=a.p+"assets/img/53.930390bb.jpg"},420:function(s,t,a){s.exports=a.p+"assets/img/54.07776d57.jpg"},421:function(s,t,a){s.exports=a.p+"assets/img/55.95b907ee.jpg"},422:function(s,t,a){s.exports=a.p+"assets/img/56.c159b880.jpg"},423:function(s,t,a){s.exports=a.p+"assets/img/57.cb6a0232.jpg"},424:function(s,t,a){s.exports=a.p+"assets/img/58.4f808f8a.jpg"},425:function(s,t,a){s.exports=a.p+"assets/img/59.2eab6873.jpg"},426:function(s,t,a){s.exports=a.p+"assets/img/60.37602cbb.jpg"},427:function(s,t,a){s.exports=a.p+"assets/img/61.eb9b2531.jpg"},428:function(s,t,a){s.exports=a.p+"assets/img/62.edc7fdb4.jpg"},429:function(s,t,a){s.exports=a.p+"assets/img/28.c35a5fea.jpg"}}]);