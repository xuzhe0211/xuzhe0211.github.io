(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{2266:function(t,s,a){"use strict";a.r(s);var r=a(46),n=Object(r.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),r("ul",[r("li",[r("span",{staticStyle:{color:"blue"}},[t._v("数组、字符串/Array & String")])]),t._v(" "),r("li",[r("span",{staticStyle:{color:"blue"}},[t._v("链表/Linked-list")])]),t._v(" "),r("li",[r("span",{staticStyle:{color:"blue"}},[t._v("栈/Stack")])]),t._v(" "),r("li",[r("span",{staticStyle:{color:"blue"}},[t._v("队列/Queue")])]),t._v(" "),r("li",[r("span",{staticStyle:{color:"blue"}},[t._v("双端队列/Deque")])]),t._v(" "),r("li",[r("span",{staticStyle:{color:"blue"}},[t._v("树/Tree")])])]),t._v(" "),r("h2",{attrs:{id:"数组、字符串-array-string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组、字符串-array-string"}},[t._v("#")]),t._v(" 数组、字符串/Array & String")]),t._v(" "),r("h3",{attrs:{id:"翻转字符串"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#翻转字符串"}},[t._v("#")]),t._v(" 翻转字符串")]),t._v(" "),r("p",[t._v("1.第一个指针指向第一个字符，另一个指针指向最后一个字符")]),t._v(" "),r("p",[r("img",{attrs:{src:a(676),alt:"头尾指针"}})]),t._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[t._v("互相交换")])]),t._v(" "),r("p",[r("img",{attrs:{src:a(677),alt:"交换指针"}})]),t._v(" "),r("ol",{attrs:{start:"3"}},[r("li",[t._v("交换之后两个指针向中央位置各自靠拢交换")])]),t._v(" "),r("p",[r("img",{attrs:{src:a(678),alt:"交换指针"}})]),t._v(" "),r("ol",{attrs:{start:"4"}},[r("li",[t._v("直至两个指针相遇为止")])]),t._v(" "),r("div",{staticClass:"language-javascript extra-class"},[r("pre",{pre:!0,attrs:{class:"language-javascript"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 翻转字符串")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'algorithm'")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverseArr")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" strArr "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" len "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" strArr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" l "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" r "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" len "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" r"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("strArr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("l"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" strArr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("r"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("strArr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("r"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" strArr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("l"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    r"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    l"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" strArr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverseArr")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),r("p",[r("img",{attrs:{src:a(679),alt:"数组、字符串"}})]),t._v(" "),r("ul",[r("li",[r("p",[t._v("优点")]),t._v(" "),r("p",[r("span",{staticStyle:{color:"blue"}},[t._v("构建一个数组非常简单，能让我们在O(1)的时间里根据数组下标(index)查询某个元素")])])]),t._v(" "),r("li",[r("p",[t._v("缺点")]),t._v(" "),r("ul",[r("li",[r("p",[r("span",{staticStyle:{color:"blue"}},[t._v("构建时候必须分配一个连续空间。")])])]),t._v(" "),r("li",[r("p",[r("span",{staticStyle:{color:"blue"}},[t._v("查询某个元素是否存在时需要遍历整个数组，耗费O(n)的时间(其中，n是元素个数)")])])]),t._v(" "),r("li",[r("p",[r("span",{staticStyle:{color:"blue"}},[t._v("删除和添加某个元素时，同样需要耗费O(n)的时间")])])])])])]),t._v(" "),r("h3",{attrs:{id:"demo-有效的字母异位词"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#demo-有效的字母异位词"}},[t._v("#")]),t._v(" demo:有效的字母异位词")]),t._v(" "),r("ol",[r("li",[t._v("两个长度都为26的数组，来统计每个字符串中小写字母出现的次数，然后对比两个数组是否相等")]),t._v(" "),r("li",[t._v("方案二")])]),t._v(" "),r("p",[r("img",{attrs:{src:a(680),alt:"长度为26字符数组"}}),t._v(" "),r("img",{attrs:{src:a(681),alt:"出现在s中+1"}}),t._v(" "),r("img",{attrs:{src:a(682),alt:"出现在t中-1"}}),t._v("\n最终每个数组中都为0")]),t._v(" "),r("p",[r("RouterLink",{attrs:{to:"/front-end/Code/stady-02.html#有效的字符异同词"}},[t._v("解题参考")])],1),t._v(" "),r("h2",{attrs:{id:"链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[t._v("#")]),t._v(" 链表")]),t._v(" "),r("p",[t._v("链表的出现是为了避免数组的一大缺陷即分配一段连续的内存空间，牺牲数组的优点：不能通过下标查询")]),t._v(" "),r("p",[r("img",{attrs:{src:a(683),alt:"链表"}})]),t._v(" "),r("ul",[r("li",[t._v("优点\n"),r("ul",[r("li",[r("span",{staticStyle:{color:"blue"}},[t._v("灵活分配内存空间")])]),t._v(" "),r("li",[r("span",{staticStyle:{color:"blue"}},[t._v("能O(1)时间诶删除或者添加元素")])])])]),t._v(" "),r("li",[t._v("缺点\n"),r("ul",[r("li",[r("span",{staticStyle:{color:"blue"}},[t._v("查询元素需要O(n)时间")])])])])]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),r("p",[t._v("数组元素不确定 经常插入删除--链表")]),t._v(" "),r("p",[t._v("数组元素大小确定，删除插入操作不多-- 数组")])]),t._v(" "),r("h3",{attrs:{id:"解题技巧"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解题技巧"}},[t._v("#")]),t._v(" 解题技巧")]),t._v(" "),r("ul",[r("li",[t._v("利用快慢指针(有时候用到三个指针)")]),t._v(" "),r("li",[t._v("构建一个虚假的链表头")])]),t._v(" "),r("p",[t._v("例如：")]),t._v(" "),r("ul",[r("li",[t._v("两个排序链表，进行整合排序")]),t._v(" "),r("li",[t._v("将链表的奇偶数按原定顺序分离，生成前半部分为奇数，后半部分为偶数")])]),t._v(" "),r("p",[t._v("创建一个空的链表头，然后连接 返回空链表的下一个(next)")]),t._v(" "),r("h3",{attrs:{id:"k个一组翻转链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#k个一组翻转链表"}},[t._v("#")]),t._v(" K个一组翻转链表")]),t._v(" "),r("p",[r("img",{attrs:{src:a(684),alt:"K个一组翻转链表"}}),t._v(" "),r("img",{attrs:{src:a(685),alt:"K个一组翻转链表"}}),t._v(" "),r("img",{attrs:{src:a(686),alt:"K个一组翻转链表"}}),t._v(" "),r("img",{attrs:{src:a(687),alt:"K个一组翻转链表"}}),t._v(" "),r("img",{attrs:{src:a(688),alt:"K个一组翻转链表"}})]),t._v(" "),r("h2",{attrs:{id:"栈"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),r("p",[t._v("特点")]),t._v(" "),r("ul",[r("li",[t._v("后进先出(LIFO)")])]),t._v(" "),r("p",[t._v("算法基本思想")]),t._v(" "),r("ul",[r("li",[t._v("可以用一个单链表来实现")]),t._v(" "),r("li",[t._v("只关心上一次的操作(最近的操作)")]),t._v(" "),r("li",[t._v("处理完上一次操作后，能在O(1)时间内查找到更前一次的操作")])]),t._v(" "),r("p",[r("img",{attrs:{src:a(689),alt:"栈-后进先出"}}),t._v(" "),r("img",{attrs:{src:a(690),alt:"栈-后进先出"}})]),t._v(" "),r("h3",{attrs:{id:"有效的括号"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#有效的括号"}},[t._v("#")]),t._v(" 有效的括号")]),t._v(" "),r("p",[t._v("往栈里压入左括号  遇到右括号 就把栈顶的左括号弹出来，最后判断栈里是否还有左括号\n"),r("img",{attrs:{src:a(691),alt:"有效的括号"}}),t._v(" "),r("img",{attrs:{src:a(692),alt:"有效的括号"}}),t._v(" "),r("img",{attrs:{src:a(693),alt:"有效的括号"}})]),t._v(" "),r("h3",{attrs:{id:"每日温度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#每日温度"}},[t._v("#")]),t._v(" 每日温度")]),t._v(" "),r("p",[r("img",{attrs:{src:a(694),alt:"有效的括号"}}),t._v(" "),r("img",{attrs:{src:a(695),alt:"有效的括号"}}),t._v(" "),r("img",{attrs:{src:a(696),alt:"有效的括号"}}),t._v(" "),r("img",{attrs:{src:a(697),alt:"有效的括号"}})]),t._v(" "),r("h2",{attrs:{id:"队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#队列"}},[t._v("#")]),t._v(" 队列")]),t._v(" "),r("p",[t._v("特点")]),t._v(" "),r("ul",[r("li",[t._v("先进先出")])]),t._v(" "),r("h2",{attrs:{id:"双端队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#双端队列"}},[t._v("#")]),t._v(" 双端队列")]),t._v(" "),r("p",[t._v("基本实现")]),t._v(" "),r("ul",[r("li",[t._v("可以利用一个双链表")]),t._v(" "),r("li",[t._v("队列的头尾两端能在O(1)的时间内进行数据的查看、添加和删除\n"),r("img",{attrs:{src:a(698),alt:"双端队列"}})])]),t._v(" "),r("p",[t._v("常用场景")]),t._v(" "),r("ul",[r("li",[t._v("实现一个长度动态变化的窗口或者连续空间\n"),r("img",{attrs:{src:a(699),alt:"双端队列"}}),t._v(" "),r("img",{attrs:{src:a(700),alt:"双端队列"}}),t._v(" "),r("img",{attrs:{src:a(701),alt:"双端队列"}}),t._v(" "),r("img",{attrs:{src:a(702),alt:"双端队列"}})])]),t._v(" "),r("h3",{attrs:{id:"滑动窗口最大值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#滑动窗口最大值"}},[t._v("#")]),t._v(" 滑动窗口最大值")]),t._v(" "),r("h2",{attrs:{id:"树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#树"}},[t._v("#")]),t._v(" 树")]),t._v(" "),r("p",[t._v("树的共性")]),t._v(" "),r("ul",[r("li",[t._v("结构直观")]),t._v(" "),r("li",[t._v("通过树问题来考察"),r("strong",[t._v("递归算法")]),t._v("掌握的熟练程度")])]),t._v(" "),r("p",[t._v("面试始终常考的树的形状有")]),t._v(" "),r("ul",[r("li",[t._v("普通二叉树")]),t._v(" "),r("li",[t._v("平衡二叉树")]),t._v(" "),r("li",[t._v("完全二叉树")]),t._v(" "),r("li",[t._v("二叉搜索树")]),t._v(" "),r("li",[t._v("四叉树\n特殊的树：红黑树、自平衡二叉搜索树")])]),t._v(" "),r("p",[t._v("遍历")]),t._v(" "),r("ul",[r("li",[t._v("前序遍历")]),t._v(" "),r("li",[t._v("中序遍历")]),t._v(" "),r("li",[t._v("后续遍历")])]),t._v(" "),r("h3",{attrs:{id:"二叉搜索中第k小的元素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉搜索中第k小的元素"}},[t._v("#")]),t._v(" 二叉搜索中第K小的元素")]),t._v(" "),r("p",[r("img",{attrs:{src:a(703),alt:"二叉搜索树"}})]),t._v(" "),r("h2",{attrs:{id:"资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[t._v("#")]),t._v(" 资料")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=apuclMi4CrM&list=PLFOgdf0iZ6uskTJam3P2BZwpdAGGG0e24&index=2",target:"_blank",rel:"noopener noreferrer"}},[t._v("[力扣&拉勾网 300分钟搞定算法面试] 第01讲：常用的数据结构"),r("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports},676:function(t,s,a){t.exports=a.p+"assets/img/1646273703000.c976f525.jpg"},677:function(t,s,a){t.exports=a.p+"assets/img/2.1016a9cb.jpg"},678:function(t,s,a){t.exports=a.p+"assets/img/3.4f72b418.jpg"},679:function(t,s,a){t.exports=a.p+"assets/img/10.c5457f3e.jpg"},680:function(t,s,a){t.exports=a.p+"assets/img/11.6695b0be.jpg"},681:function(t,s,a){t.exports=a.p+"assets/img/12.e1cd3156.jpg"},682:function(t,s,a){t.exports=a.p+"assets/img/13.69d61ea8.jpg"},683:function(t,s,a){t.exports=a.p+"assets/img/14.6afa5658.jpg"},684:function(t,s,a){t.exports=a.p+"assets/img/15.d180e876.jpg"},685:function(t,s,a){t.exports=a.p+"assets/img/16.6a0f0be6.jpg"},686:function(t,s,a){t.exports=a.p+"assets/img/17.5776991a.jpg"},687:function(t,s,a){t.exports=a.p+"assets/img/18.6859a6fb.jpg"},688:function(t,s,a){t.exports=a.p+"assets/img/19.c6909f04.jpg"},689:function(t,s,a){t.exports=a.p+"assets/img/20.cc9d7480.jpg"},690:function(t,s,a){t.exports=a.p+"assets/img/21.91d69134.jpg"},691:function(t,s,a){t.exports=a.p+"assets/img/22.b386036d.jpg"},692:function(t,s,a){t.exports=a.p+"assets/img/23.c6403f7d.jpg"},693:function(t,s,a){t.exports=a.p+"assets/img/24.869a050e.jpg"},694:function(t,s,a){t.exports=a.p+"assets/img/25.6d42a775.jpg"},695:function(t,s,a){t.exports=a.p+"assets/img/26.4171a5a6.jpg"},696:function(t,s,a){t.exports=a.p+"assets/img/27.befa53ad.jpg"},697:function(t,s,a){t.exports=a.p+"assets/img/28.fa9aecc7.jpg"},698:function(t,s,a){t.exports=a.p+"assets/img/29.d9cccdb4.jpg"},699:function(t,s,a){t.exports=a.p+"assets/img/30.4d5cd03b.jpg"},700:function(t,s,a){t.exports=a.p+"assets/img/31.a728dd6b.jpg"},701:function(t,s,a){t.exports=a.p+"assets/img/32.bedd737d.jpg"},702:function(t,s,a){t.exports=a.p+"assets/img/33.46e34ff0.jpg"},703:function(t,s,a){t.exports=a.p+"assets/img/34.b7e4e1cd.jpg"}}]);