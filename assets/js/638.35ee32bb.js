(window.webpackJsonp=window.webpackJsonp||[]).push([[638],{2649:function(t,s,a){"use strict";a.r(s);var n=a(46),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"webpack核心概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack核心概念"}},[t._v("#")]),t._v(" webpack核心概念")]),t._v(" "),a("p",[t._v("entry:编译入口")]),t._v(" "),a("p",[t._v("module:模块，在webpack中，一切皆为模块，一个模块对应一个文件")]),t._v(" "),a("p",[t._v("Chunk：代码块，一个chunk由多个模块组合而成，用于代码的合并与分割")]),t._v(" "),a("p",[t._v("loader:模块转换器，将非js模块转化为webpack能识别的js模块")]),t._v(" "),a("p",[t._v("Plugin:扩展插件，在webpack运行的各个阶段，都会广播出去相对应的事件，插件可以监听到这些事件的发生，在特定的时机做响应的事情")]),t._v(" "),a("h2",{attrs:{id:"webpack核心对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack核心对象"}},[t._v("#")]),t._v(" webpack核心对象")]),t._v(" "),a("p",[a("strong",[t._v("Tapable")]),t._v(":控制钩子的发布和订阅，Compiler和Compilation对象都继承于Tapable;")]),t._v(" "),a("p",[a("strong",[t._v("Compiler")]),t._v(":"),a("br"),t._v("\nCompiler继承Tapable对象，可以广播和监听webpack。"),a("br"),t._v("\nCompiler对象是webpack的编译器,webpack周期中只存在一个Compiler对象"),a("br"),t._v(" "),a("span",{staticStyle:{color:"red"}},[t._v("Compiler对象在webpack启动时创建实例，compiler实例中包含webpack的完整配置，包括loaders,plugins信息")])]),t._v(" "),a("p",[a("strong",[t._v("Compilation")]),a("br"),t._v("\nCompilation继承Tapable对象，可以广播和监听webpack事件。"),a("br"),t._v("\nCompilation实例仅代表一次webpack构建和生成编译资源的过程"),a("br"),t._v("\nwebpack开发模式开启watch选项，每次检测到入口模块变化时，会创建一次新的编译:"),a("span",{staticStyle:{color:"red"}},[t._v("生成一次新的编译资源和新的compilation对象，这个compilation对象包含了当前编译的模块资源modulle，编译生成的资源，变化的文件，依赖的状态")])]),t._v(" "),a("h2",{attrs:{id:"webpack基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack基本概念"}},[t._v("#")]),t._v(" webpack基本概念")]),t._v(" "),a("ol",[a("li",[t._v("webpack中module、chunk和bundle")])]),t._v(" "),a("p",[t._v("module就是一个js模块，就是被require和export的模块，例如ES模块，commonjs模块，AMD模块")]),t._v(" "),a("p",[t._v("chunk是代码块，是进行依赖分析的时候，代码分割出来的代码块，包含一个或多个module，是被分组了的module集合，code spliting之后的就是chunk")]),t._v(" "),a("p",[t._v("bundle是文件，最终打包出来的文件，通常一个buundle对应一个chunk")]),t._v(" "),a("p",[t._v("2.webpack中loader和plugin作用")]),t._v(" "),a("p",[a("span",{staticStyle:{color:"red"}},[t._v("loader是文件转换器，将webpack不能处理的模块转换为webpack能处理的模块，就是js模块")])]),t._v(" "),a("p",[a("span",{staticStyle:{color:"red"}},[t._v("plugin是功能扩张，干预webpack的打包过程，修改编译结果或者打包结果")])]),t._v(" "),a("h2",{attrs:{id:"webpack打包流程-原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack打包流程-原理"}},[t._v("#")]),t._v(" webpack打包流程-原理")]),t._v(" "),a("ol",[a("li",[t._v("初始化参数：从配置文件和 Shell 语句中读取与合并参数，得出最终的参数；")]),t._v(" "),a("li",[t._v("开始编译：用上一步得到的参数初始化 Compiler 对象，加载所有配置的插件，执行对象的 run 方法开始执行编译；")]),t._v(" "),a("li",[t._v("确定入口：根据配置中的 entry 找出所有的入口文件；")]),t._v(" "),a("li",[t._v("编译模块：从入口文件出发，调用所有配置的 Loader 对模块进行翻译，再找出该模块依赖的模块，再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理；")]),t._v(" "),a("li",[t._v("完成模块编译：在经过第4步使用 Loader 翻译完所有模块后，得到了每个模块被翻译后的最终内容以及它们之间的依赖关系；")]),t._v(" "),a("li",[t._v("输出资源：根据入口和模块之间的依赖关系，组装成一个个包含多个模块的 Chunk，再把每个 Chunk 转换成一个单独的文件加入到输出列表，这步是可以修改输出内容的最后机会；")]),t._v(" "),a("li",[t._v("输出完成：在确定好输出内容后，根据配置确定输出的路径和文件名，把文件内容写入到文件系统。\n"),a("a",{attrs:{href:"https://webpack.wuhaolin.cn/5%E5%8E%9F%E7%90%86/5-1%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E6%A6%82%E6%8B%AC.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack入门文档"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"webpack热更新的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack热更新的原理"}},[t._v("#")]),t._v(" webpack热更新的原理")]),t._v(" "),a("p",[t._v("基本原理，webpack监听文件变化，服务端和客户端有websocket通信，服务端向客户端发送文件变化信息，客户端根据文件变化消息获取变更模块代码，进行模块代码的热替换")]),t._v(" "),a("ol",[a("li",[t._v("配置开启热更新，设置entry格式和webpack-dev-server的option，使得打包的bundle里面包含HMR runtime和websocket连接的代码")]),t._v(" "),a("li",[t._v("webpack-dev-server通过express启动服务端")]),t._v(" "),a("li",[t._v("客户端通过sockjs和服务端建立websocket长连接")]),t._v(" "),a("li",[t._v("webpack监听文件变化，文件保存触发webpack重新编译，编译后的代码保存在内存中，不在output.path中产生输出")]),t._v(" "),a("li",[t._v("编译会生成hash值，hot-update.json(已改动模块的json)，hot-update.js(已改动模块的js)")]),t._v(" "),a("li",[t._v("通过socket想客户端发送hash值")]),t._v(" "),a("li",[t._v("客户端对比hash值，一致在走缓存，不一致则\n通过ajax获取hot-update.json，json包含模块hash值\n再通过jsonp请求获取hot-update.js")]),t._v(" "),a("li",[t._v("热更新js模块，若失败，则live reload刷新浏览器代替热更新（若模块未配置热更新，则同样live reload）")])]),t._v(" "),a("h2",{attrs:{id:"webpack优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack优化"}},[t._v("#")]),t._v(" webpack优化")]),t._v(" "),a("ol",[a("li",[t._v("优化开发体验--提升开发效率\n"),a("ul",[a("li",[t._v("优化构建速度")]),t._v(" "),a("li",[t._v("优化使用体验")])])]),t._v(" "),a("li",[t._v("优化输出质量")])]),t._v(" "),a("p",[t._v("优化输出质量的目的是为用户呈现体验更好的网页，例如减少首屏加载时间、提升性能流畅度等")]),t._v(" "),a("p",[t._v("** 4.1 缩小文件的搜索范围 **")]),t._v(" "),a("p",[t._v("1.优化loader配置")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exprots "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tmodule"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \trules"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        \t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果项目源码中只有js文件，就不要写成/\\.jsx?$/,以提升正则表达式的性能")]),t._v("\n                test："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js$"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 支持缓存转换出的结果，通过cacheDirectory选项开启")]),t._v("\n                use"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'babel-loader?cacheDirectory'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//只对项目根目录下的src目录的文件采用babel-loader")]),t._v("\n                include"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'src'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("2.优化resolve.modules配置")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tresolve"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用绝对路径指明第三方模块存放的位置，以减少搜索步骤")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//其中，__dirname表示当前工作目录，也就是项目根目录")]),t._v("\n        modules"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node_modules'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("3.优化resolve.mainFields配置")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tresolve"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//只采用main字段作为入口于文件的描述字段，以减少搜索步骤")]),t._v("\n        mainFields"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'main'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("4.优化resolve.alias配置")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tresolve"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用alias将导入react的语句替换成直接使用单独、完整的react.min.js文件")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//减少耗时的递归解析操作")]),t._v("\n        alias"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./node_module/react/dist/react.min.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("5.优化resolve.extensionos配置")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tresolve"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//尽可能减少后缀尝试的可能性")]),t._v("\n        extensioons"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("6.优化module.noParse配置")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tmodule"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//单独、完整的'react.min.js'文件没有采用模块化，忽略对react.min.js文件的递归解析处理")]),t._v("\n        noParse"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("react\\.min\\.js$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("** 4.2使用DLLPlugin**")]),t._v(" "),a("p",[t._v("用过window系统的人应该会经常看到.dll为后缀的文件，这些文件叫做动态链接库，在一个动态链接库中可以包含为其他模块调用的函数和数据")]),t._v(" "),a("p",[t._v("1.将网页依赖的基础模块抽离出来，打包到一个个单独的动态链接库中。在一个动态链接库中可以包含多个模块")]),t._v(" "),a("p",[t._v("2.当需要导入的模块存在于某个动态链接库中，这个模块不能被再次打包，而是去动态链接库中获取。")]),t._v(" "),a("p",[t._v("3.页面依赖的所有动态链接库都需要被加载")]),t._v(" "),a("p",[a("span",{staticStyle:{color:"blue"}},[t._v("为什么Web项目构建接入动态链接库的思想后，会打打提升构建速度？原因在于，"),a("strong",[t._v("包含大量复用模块的动态链接库只需要被编译一次，在之后构建过程中被动态链接库包含的模块将不会重新编译，而是直接使用动态链接库的代码。由于动态链接库中大多数包含的是常用的第三方模块")]),t._v("。例如react/react-dom所以只要不升级这些模块的版本，动态链接库就不需要重新。")])]),t._v(" "),a("p",[t._v("** 4.3 使用HappyPack **")]),t._v(" "),a("blockquote",[a("p",[t._v("从webpack4发表之后，happypack已经不维护了，退出历史舞台了，有新的thread-loader代替。另外，如果你只是单纯地想加快编译打包速度的话，不如上dllplugin，这个比thread-loader快。")])]),t._v(" "),a("p",[t._v("由于JavaScript是单线程模型，所以想要发回去多核CPU的功能，就只能通过多进程实现，而无法通过多线程实现。")]),t._v(" "),a("p",[t._v("在整个webpack构建流程中，最耗时的流程可能就是Loader对文件的转换操作了，因为要转换的文件数据量巨大，而且这些转换操作都只能一个一个的处理。HappyPack的核心原理就是将这部分任务分解到多个进程中并行处理，从而减少总的构建时间。")]),t._v(" "),a("p",[t._v("** 4.4使用ParallelUglifyPluugin **")]),t._v(" "),a("p",[t._v("多进程并行处理的思想引入到压缩代码中")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("优化使用体验")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("** 4.5使用自动刷新 **")]),t._v(" "),a("p",[t._v("自动刷新的原理")]),t._v(" "),a("ol",[a("li",[t._v("借助浏览器扩展去通过浏览器提供的接口刷新，WebStorm IDE的liveEdit功能就是这样实现的")]),t._v(" "),a("li",[t._v("向要开发的网页注入代理客户端代码，通过代理客户端去刷新整个页面。")]),t._v(" "),a("li",[t._v("将要开发的网页装进一个iframe中，通过刷新iframe去看到最新效果")])]),t._v(" "),a("p",[t._v("DevServer支持第二，第三种方法；第二种是DevServer默认采用的刷新方法")]),t._v(" "),a("p",[t._v("** 4.6开启模块的热替换 **")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("优化输出质量")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("** 4.7区分环境 **")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'production'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'线上环境'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'开发环境'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("** 4.8代码压缩 **")]),t._v(" "),a("p",[t._v("** 4.9 CDN加速 **")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cdn链接--其中一CND优化")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cdn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cdn：模块名称和模块作用域命名（对应window里面挂载的变量名称）")]),t._v("\n    externals"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        vue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Vue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        vuex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Vuex'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue-router'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'VueRouter'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cdn的css链接")]),t._v("\n    css"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cdn的js链接")]),t._v("\n    js"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://cdn.staticfile.org/vue/2.6.10/vue.min.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://cdn.staticfile.org/vuex/3.0.1/vuex.min.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://cdn.staticfile.org/vue-router/3.0.3/vue-router.min.js'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("** 4.10 Tree Shaking **")]),t._v(" "),a("p",[t._v("** 4.11 提取公共代码 **")]),t._v(" "),a("p",[t._v("** 4.12 按需加载 **")]),t._v(" "),a("p",[t._v("** 4.13 使用Prepack **")]),t._v(" "),a("p",[t._v("前面优化方法提到了代码压缩和分块，这些都是在网络加载层面的优化，除此之外，还可以优化代码在运行时的效率，Prepack就是为此而生")]),t._v(" "),a("p",[t._v("** 4.15 输出分析 **")])])}),[],!1,null,null,null);s.default=e.exports}}]);