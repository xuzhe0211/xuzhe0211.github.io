(window.webpackJsonp=window.webpackJsonp||[]).push([[313],{1224:function(t,a,s){t.exports=s.p+"assets/img/46.6b16233b.png"},2505:function(t,a,s){"use strict";s.r(a);var e=s(46),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("在传统的HTTP协议中，GET 和 POST 是最常用于请求数据的两种方法。然而，他们各自有着一定的局限性。特别是当请求数据量较大时,通过GET方法将参数嵌入URL中显的不够灵活。另一方面，尽管POST方法允许在请求体中传递大量数据，却无法保证操作的幂等性和安全性。")]),t._v(" "),e("p",[t._v("为了弥补这些不足，HTTP工作组提出了一种新的方法--QUERY,该方法既能承载大量请求数据，又能保证请求的幂等性和安全性")]),t._v(" "),e("p",[e("img",{attrs:{src:s(1224),alt:"query"}})]),t._v(" "),e("h2",{attrs:{id:"query方法的定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#query方法的定义"}},[t._v("#")]),t._v(" QUERY方法的定义")]),t._v(" "),e("p",[t._v("QUERY是一种安全且幂等的HTTP请求方法，它允许携带请求内容。与GET方法不同，QUERY 方法并不请求服务器放回指定URI资源的表示，而是要求服务器根据请求请求内容进行查询操作。简单来说，QUERY方法通过请求体来定义查询操作，并将操作结果作为响应返回")]),t._v(" "),e("h3",{attrs:{id:"使用场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[t._v("#")]),t._v(" 使用场景")]),t._v(" "),e("p",[t._v("当请求参数较多或数据量较大时，通过URI传递参数显的困难。这时，QUEYR 方法能够更好的解决此问题。举个例子")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("GET /search?q"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("example"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("limit")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("sort")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("desc HTTP/1.1\nHost: conardli.top\n")])])]),e("p",[t._v("如果查询参数非常多，可能会导致URL长度超出限制，或者在某些系统中无法正常传递。这时可以使用QUERY方法；")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("QUERY /search HTTP/1.1\nHost: conardli.top\nContent-Type: application/json\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"q"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ConardLi"')]),t._v(",\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"limit"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(",\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sort"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("以上代码展示了如何通过请求体传递参数，避免了 URL 过长的问题。")]),t._v(" "),e("h3",{attrs:{id:"幂等性和安全性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#幂等性和安全性"}},[t._v("#")]),t._v(" 幂等性和安全性")]),t._v(" "),e("p",[t._v("与POST 方法不同，QUERY 方法明确表示查询操作是安全的，不会改变服务器上的资源状态。这意味着，无论请求多少次，服务器资源的状态都不会因为QUERY请求而发生变化。")]),t._v(" "),e("p",[t._v("另外，QUERY 方法的幂等性保证了相同的请求会得到相同的结果，这对于缓存和自动重试等操作非常有用")]),t._v(" "),e("h2",{attrs:{id:"缓存机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存机制"}},[t._v("#")]),t._v(" 缓存机制")]),t._v(" "),e("p",[t._v("QUERY 方法的响应是可缓存的，缓存机制与其他HTTP方法类似。为了提高缓存效率，应对请求内容进行规范化处理，例如移除内容编码、基于格式规范化请求内容等")]),t._v(" "),e("h2",{attrs:{id:"accept-query响应头"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#accept-query响应头"}},[t._v("#")]),t._v(" Accept-Query响应头")]),t._v(" "),e("p",[t._v("服务器可以通过在响应中包含 Accept-Query 头字段来明确支持 QUERY 方法，并指定可用的查询格式媒体类型。例如：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("Accept-Query: application/json,application/xml\n")])])]),e("h2",{attrs:{id:"示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),e("p",[t._v("以下是一些 QUERY 方法的典型使用示例")]),t._v(" "),e("h3",{attrs:{id:"简单查询直接响应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简单查询直接响应"}},[t._v("#")]),t._v(" 简单查询直接响应")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("QUERY /contacts HTTP/1.1\nHost: conardli.top\nContent-Type: example/query\nAccept: text/csv\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" surname, givenname, email limit "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 响应")]),t._v("\nHTTP/1.1 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" OK\nContent-Type: text/csv\n\nsurname, givenname, email\nSmith, John, john.smith@conardli.top\nJones, Sally, sally.jones@conardli.top\nDubois, Camille, camille.dubois@example.net\n")])])]),e("h3",{attrs:{id:"带有-location-和-content-location-的响应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#带有-location-和-content-location-的响应"}},[t._v("#")]),t._v(" 带有 Location 和 Content-Location 的响应")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("QUERY /contacts HTTP/1.1\nHost: conardli.top\nContent-Type: example/query\nAccept: text/csv\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" surname, givenname, email limit "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 响应")]),t._v("\nHTTP/1.1 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" OK\nContent-Type: text/csv\nContent-Location: /contacts/responses/42\nLocation: /contacts/queries/17\n\nsurname, givenname, email\nSmith, John, john.smith@conardli.top\nJones, Sally, sally.jones@conardli.top\nDubois, Camille, camille.dubois@example.net\n")])])]),e("h3",{attrs:{id:"简单查询间接响应-303-see-other"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简单查询间接响应-303-see-other"}},[t._v("#")]),t._v(" 简单查询间接响应（303 See Other）")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("QUERY /contacts HTTP/1.1\nHost: conardli.top\nContent-Type: example/query\nAccept: text/csv\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" surname, givenname, email limit "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 响应")]),t._v("\nHTTP/1.1 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("303")]),t._v(" See Other\nLocation: http://conardli.top/contacts/query123\n")])])]),e("p",[t._v("随后，客户端可以通过 GET 请求 Location 返回的资源来获取查询结果：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("GET /contacts/query123 HTTP/1.1\nHost: conardli.top\nAccept: text/csv\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 响应")]),t._v("\nHTTP/1.1 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" OK\nContent-Type: text/csv\n\nsurname, givenname, email\nSmith, John, john.smith@conardli.top\nJones, Sally, sally.jones@conardli.top\nDubois, Camille, camille.dubois@example.net\n")])])]),e("h2",{attrs:{id:"最后"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[t._v("#")]),t._v(" 最后")]),t._v(" "),e("p",[t._v("与其他HTTP方法类似，QUERY方法也需要注意一些安全性问题。例如,避免在URL中暴漏敏感信息，尽量使用请求体传递查询参数。当服务器创建临时资源来标识 QUERY 请求结果时，应该避免在 URI 中以明文形式暴漏原始请求内容")]),t._v(" "),e("p",[t._v("QUERY 方法的引入为 HTTP 协议提供了更灵活的查询机制，解决了大数据量请求传递的难题，同时保证了请求的安全性和幂等性。对于开发者来说，这是一种非常常用的方法，可以在各种应用场景中发挥作用")]),t._v(" "),e("h2",{attrs:{id:"资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[t._v("#")]),t._v(" 资料")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/x6S8LDvOjXeEf8zO5TNTHw",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP 将增加一个新的方法类型！"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);