(window.webpackJsonp=window.webpackJsonp||[]).push([[455],{2289:function(e,n,r){"use strict";r.r(n);var a=r(46),i=Object(a.a)({},(function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"图片等比例缩放后变模糊的问题处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#图片等比例缩放后变模糊的问题处理"}},[e._v("#")]),e._v(" 图片等比例缩放后变模糊的问题处理")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("img {\n    image-rendering: -moz-crisp-edges; /* Firefox */\n    image-rendering: -o-crisp-edges; /* Opera */\n    image-rendering: -webkit-optimize-contrast; /*Webkit (non-standard naming) */\n    image-rendering: crisp-edges;\n    -ms-interpolation-mode: nearest-neighbor; /* IE (non-standard property) */\n}\n")])])]),r("h2",{attrs:{id:"image-rendering"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#image-rendering"}},[e._v("#")]),e._v(" Image-rendering")]),e._v(" "),r("p",[e._v("css属性image-rendering用于设置图像缩放算法。它适用于元素本身，适用于元素其他属性中的图像，也应用于子元素")]),e._v(" "),r("p",[e._v("举个例子，如果有一张尺寸为100"),r("em",[e._v("100px的图像，但作者将尺寸设置为200")]),e._v("200px(或者50*50px),然后，图片便会根据image-rendering指定的算法，缩小或者放大到新尺寸。此属性对于为缩放的图像没有影响")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("/* 专有属性值 */\nimage-rendering: auto;\nimage-rendering: crisp-edges;\nimage-rendering: pixelated;\n\n/* 全局属性值 */\nimage-rendering: inherit;\nimage-rendering: initial;\nimage-rendering: unset;\n\n")])])]),r("ul",[r("li",[r("p",[e._v("auto")]),e._v(" "),r("p",[e._v("自 Gecko 1.9 （Firefox 3.0）起，Gecko 使用双线性（bilinear）算法进行重新采样（高质量）。")])]),e._v(" "),r("li",[r("p",[e._v("smooth")]),e._v(" "),r("p",[e._v("应使用能最大化图像客观观感的算法来缩放图像。特别地，会“平滑”颜色的缩放算法是可以接受的，例如双线性插值。这适用于照片等类型的图像。")])]),e._v(" "),r("li",[r("p",[e._v("crisp-edges")]),e._v(" "),r("p",[e._v("必须使用可有效保留对比度和图像中的边缘的算法来对图像进行缩放，并且，该算法既不会平滑颜色，又不会在处理过程中为图像引入模糊。合适的算法包括最近邻居（nearest-neighbor）算法和其他非平滑缩放算法，比如 2×SaI 和 hqx-* 系列算法。此属性值适用于像素艺术作品，例如一些网页游戏中的图像。")])]),e._v(" "),r("li",[r("p",[e._v("pixelated")]),e._v(" "),r("p",[e._v("放大图像时, 使用最近邻居算法，因此，图像看着像是由大块像素组成的。缩小图像时，算法与 auto 相同")])]),e._v(" "),r("li",[r("p",[e._v("high-quality")])])]),e._v(" "),r("h2",{attrs:{id:"应用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[e._v("#")]),e._v(" 应用")]),e._v(" "),r("p",[e._v('在做响应时布局时，img图片一般会加个style="width: 100%"进行缩放，但是无论放大还是缩小，图片都会变模糊，全局加上下面的代码，便可以治愈')]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("img{\n    image-rendering: -moz-crisp-edges; \n    image-rendering: -o-crisp-edges; \n    image-rendering: -webkit-optimize-contrast; \n    image-rendering: crisp-edges;\n    ms-interpolation-mode: nearest-neighbor;\n}\n")])])]),r("p",[r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/image-rendering",target:"_blank",rel:"noopener noreferrer"}},[e._v("MDN"),r("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=i.exports}}]);