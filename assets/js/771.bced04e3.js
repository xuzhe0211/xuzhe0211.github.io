(window.webpackJsonp=window.webpackJsonp||[]).push([[771],{2877:function(t,s,a){"use strict";a.r(s);var e=a(46),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"v-model和sync修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-model和sync修饰符"}},[t._v("#")]),t._v(" v-model和sync修饰符")]),t._v(" "),a("p",[a("strong",[t._v("场景")])]),t._v(" "),a("p",[t._v("在用vue开发的过程中我们经常会遇到父子组件公用同一变量的情况，那么在这种情况下，我们肯定会想直接把变量传过来用，因为是单向数据流所以子组件修改这个变量，会报错")]),t._v(" "),a("p",[a("strong",[t._v("问题")])]),t._v(" "),a("p",[t._v("对于这种问题，我们就可以在父组件中用v-model或者用一个属性加上sync修饰符并在组组件使用$emit('x:update', v)来解决，这两个东西有什么区别")]),t._v(" "),a("p",[a("strong",[t._v("结论")])]),t._v(" "),a("p",[t._v("个人认为两者只是语法上的区别，一次来实现两个组件之间的数据的流动，sync更灵活一点，如果是v-model的话子组件只能用value来接这个参数了，sync随意")]),t._v(" "),a("p",[a("strong",[t._v("延伸")])]),t._v(" "),a("p",[t._v("官方说到：组件实例的作用域是独立的，这意味着不能(也不该)在组组件的模板内引用父组件的数据，父组件需要更多的prop才能下发到子组件内")]),t._v(" "),a("h2",{attrs:{id:"自定义组件的v-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义组件的v-model"}},[t._v("#")]),t._v(" 自定义组件的v-model")]),t._v(" "),a("p",[t._v("一个组件上的"),a("span",{staticStyle:{color:"#d63200"}},[t._v("v-model")]),t._v("默认会利用名为"),a("span",{staticStyle:{color:"#d63200"}},[t._v("value")]),t._v("的prop和名为"),a("span",{staticStyle:{color:"#d63200"}},[t._v("input")]),t._v("的事件，但是像单选框、复选框等类型的输入控件可能会将"),a("span",{staticStyle:{color:"#d63200"}},[t._v("value")]),t._v(" attribute用于"),a("span",{staticStyle:{color:"blue"}},[t._v("不同的目的")]),t._v("."),a("span",{staticStyle:{color:"#d63200"}},[t._v("model")]),t._v("选项可以用来避免这样的冲突")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("Vue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'base-checkbox'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    model"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        prop"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'checked'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        event"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    props"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        checked"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Boolean\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    template"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\n        <input \n            type="checkbox"\n            v-bind:checked = "checked"\n            v-on:change="$emit(\'change\', $event.target.checked)"\n    ')]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("现在在这个组件上使用"),a("span",{staticStyle:{color:"#d63200"}},[t._v("v-model")]),t._v("的时候")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("checkbox v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("model"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lovingVue"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("checkbox"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("这里的"),a("span",{staticStyle:{color:"#d63200"}},[t._v("lovingVue")]),t._v("的值将会传入这个名为"),a("span",{staticStyle:{color:"#d63200"}},[t._v("checked")]),t._v("的prop。同时当"),a("span",{staticStyle:{color:"#d63200"}},[t._v("<base-checkbox>")]),t._v("触发一个"),a("span",{staticStyle:{color:"#d63200"}},[t._v("change")]),t._v("时间并附带一个新的值的时候，这个"),a("span",{staticStyle:{color:"#d63200"}},[t._v("lovingVue")]),t._v("的property将会更新")]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("注意你仍然需要在组件的 props 选项里声明 checked 这个 prop。")])]),t._v(" "),a("h2",{attrs:{id:"资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[t._v("#")]),t._v(" 资料")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/components-custom-events.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E7%9A%84-v-model",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue自定义组件v-model"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);