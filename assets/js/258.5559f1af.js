(window.webpackJsonp=window.webpackJsonp||[]).push([[258],{2033:function(t,a,s){t.exports=s.p+"assets/img/1.2bca31ad.jpg"},2034:function(t,a,s){t.exports=s.p+"assets/img/20190102173824247.43645635.png"},2921:function(t,a,s){"use strict";s.r(a);var e=s(46),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[e("img",{attrs:{src:s(2033),alt:"git"}})]),t._v(" "),e("h2",{attrs:{id:"git-clone-指定分支拉代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-clone-指定分支拉代码"}},[t._v("#")]),t._v(" git clone 指定分支拉代码")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("git clone "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b dev_js http"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxxx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git\n")])])]),e("p",[t._v("命令中多了一个-b dev-jk 这个dev_jk就是分支，htt://xxxx.git就是源码仓库地址")]),t._v(" "),e("h2",{attrs:{id:"查看cofig"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看cofig"}},[t._v("#")]),t._v(" 查看cofig")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("git config "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("l "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" git config "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("list\n\ngit config "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("local "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("list\ngit config "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("list\ngit config "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("system "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("list\n")])])]),e("h2",{attrs:{id:"本地项目关联远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本地项目关联远程仓库"}},[t._v("#")]),t._v(" 本地项目关联远程仓库")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("git remote add origin git@xxx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gitlab"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("zhiliao"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("web"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("client"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("zhiliao"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("site"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git\n\n")])])]),e("h2",{attrs:{id:"git-push问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-push问题"}},[t._v("#")]),t._v(" Git push问题")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("git add "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\ngit ci "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'first my'")]),t._v("\ngit push origin "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("refs"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("master\n")])])]),e("p",[t._v("** 解释 **")]),t._v(" "),e("p",[t._v("git push <remote 名字> <本地分之的名字> : <远程库的名字>")]),t._v(" "),e("p",[t._v("git push 推送")]),t._v(" "),e("p",[t._v("origin 远程库的名字")]),t._v(" "),e("p",[t._v("HEAD是一个特别的指针，它是一个指向你正在工作的本地分之的指针，可以把它当做本地分之的别名，git这样就可以知道你工作在哪个分之")]),t._v(" "),e("p",[e("span",{staticStyle:{color:"red"}},[t._v("refs/for意义在于我们提交代码到服务器之后是需要code review之后才能进行merge的")])]),t._v(" "),e("p",[e("span",{staticStyle:{color:"red"}},[t._v("refs/heads 不需要")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("//撤销\ngit reset --hard <commit_id>\n")])])]),e("h2",{attrs:{id:"切换分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#切换分支"}},[t._v("#")]),t._v(" 切换分支")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("git branch "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看所有远程分支")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拉取远程分支并创建本地分支")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法一")]),t._v("\ngit checkout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b 本地分支名x origin"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("远程分支名\n\ngit checkout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b mobile_1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" origin"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mobile_1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例子 自动切换到分支 存在映射关系")]),t._v("\n \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法二")]),t._v("\ngit fetch origin 远程分支名x"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("本地分支名x "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不会建立映射关系")]),t._v("\n")])])]),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/tterminator/article/details/52225720",target:"_blank",rel:"noopener noreferrer"}},[t._v("git拉去远程分支并创建本地分支"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"fetch-vs-pull"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fetch-vs-pull"}},[t._v("#")]),t._v(" fetch VS pull")]),t._v(" "),e("ol",[e("li",[t._v("简单概括")])]),t._v(" "),e("p",[e("img",{attrs:{src:"http://kmknkk.oss-cn-beijing.aliyuncs.com/image/git.jpg",alt:"git fetch和 git pull 概念"}})]),t._v(" "),e("p",[e("span",{staticStyle:{color:"red"}},[t._v("git fetch是将远程主机的最新内容拉到本地，用户在检查了以后决定是否合并到工作本机分支中。")])]),t._v(" "),e("p",[e("span",{staticStyle:{color:"red"}},[t._v("而git pull则是将远程主机的最新内容拉下来后直接合并，即git pull = git fetch + git merge,这样可能会产生冲突，需要手动解决。")])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("分支的概念")])]),t._v(" "),e("blockquote",[e("p",[t._v("分支是用来标记特定代码的提交，每一个分支通过SHA1sum值标识，所以分支分支的操作是轻量级的，你可以改变的仅仅是SHA1sum值")])]),t._v(" "),e("p",[t._v("如，当前两个分支，A,C,E属于master分支，而A,B,F属于dev分支")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("A---C---E(master)\n \\ \n  B---D---F(dev)\n")])])]),e("p",[t._v("它们的head指针分别指向E和F，对上述做如下操作")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git checkout master //选择or切换到master分支\ngit merge dev //讲dev分支合并到当前分支master中\n")])])]),e("p",[t._v("合并完成后")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("A---C---E----G（master）\n\\           /\n B---D----F(dev)\n")])])]),e("p",[t._v("现在ABCDEFG属于master分支，G是一次合并后的结果，是将E和F的代码合并后的结果，可能会出现冲突，而ABDF依然属于dev分支，可以继续在dev分支上开发")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("A---C---E----G（master）\n\\           /\n B---D----F-----I(dev)\n")])])]),e("p",[t._v("分支的基本操作")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("git branch "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//查看本地所有分支")]),t._v("\ngit branch "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//查看远程所有分支")]),t._v("\ngit branch "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//查看本地和远程的所有分支")]),t._v("\ngit branch "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branchname"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//新建分支")]),t._v("\ngit branch "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branchnae"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//删除本地分支")]),t._v("\n\ngit push origin "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 直接删除远程分支")]),t._v("\ngit branch "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branchname"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//删除远程分支，删除后还需推送到服务器")]),t._v("\ngit push origin"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branchname"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//删除后推送至服务器")]),t._v("\n\ngit branch "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("oldbranch"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("newbranch"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//重命名本地分支")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//git中的一些选项解释")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d \n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v("：删除\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("force的快捷键")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("强制"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("force 强制\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("move移动或重命名\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("M")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("move "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("force的快捷键\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("remote远程\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("all 所有\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("git fetch用法")])]),t._v(" "),e("p",[t._v("git fetch命令")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重要")]),t._v("\ngit fetch "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("远程主机"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这个命令是将某个远程主机的更新全部取回到本地")]),t._v("\n")])])]),e("p",[e("span",{staticStyle:{color:"red"}},[e("strong",[t._v("如果只想取回特定分支的更新，可以指定分支名")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git fetch <远程主机> <分支名>\n")])])]),e("p",[t._v("最长见的命令是取回origin主机的master分支")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("git fetch origin master\n\ngit checkout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b daily"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jingxiong"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v2 origin"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("daily"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jingxiong"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v2 "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拉取远程切换本地分支----")]),t._v("\n")])])]),e("p",[t._v("取回更新后，会返回一个FETCH_HEAD,指的是某个branch在服务器上的最新状态，我们可以在本地通过它查看刚去会的更新信息")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("git log "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FETCH_HEAD")]),t._v("\n")])])]),e("p",[t._v("可以看到返回的信息更新的文件名，更新的作者和时间，以及跟新的代码")]),t._v(" "),e("p",[t._v("我们可以通过这些信息判断是否产生冲突，以确定是否更新merge到当前分支")]),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("git pull 用法")])]),t._v(" "),e("p",[t._v("git pull的过程可以理解为")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("git fetch origin master "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从远程主机master分支拉去最新内容")]),t._v("\ngit merge "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FEATCH_HEAD")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将拉去下来的最新内容合并到当前所在的分支中")]),t._v("\n")])])]),e("p",[t._v("即将远程的某个分支更新取回，并与本地指定的分支合并")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git pull <远程主机名> <远程分支名>:<本地分支名>\n//如果远程分支与当前分之合并，则冒号后面的部分可省略\ngit pull origin dev\n")])])]),e("h2",{attrs:{id:"git-tag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-tag"}},[t._v("#")]),t._v(" Git Tag")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git tag // 查看tag\ngit tag test_tag c809ddbf83939a89659e51dc2a5fe183af384233 // 在某个commit上打tag\ngit tag\n\ngit push origin test_tag // 本地推送到线上\n...\n\ngit tag -d test_tag // 本地删除tag\ngit push origin :refs/tags/test_tag // 本地tag删除了,在执行该句，删除线上tag\n\n\n用git ls-remote -t 查看远程tags                 git tag -l查看本地tag\n\n然后用 git tag -d xxx删除本地tag\n\n最后远程拉取远程tags   git fetch origin --prune-tags\n\n")])])]),e("h3",{attrs:{id:"git-切换到某个tag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-切换到某个tag"}},[t._v("#")]),t._v(" git 切换到某个tag")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git checkout tag_name\n")])])]),e("p",[t._v('但是，这时候git可能会提示你当前处于一个"detached Head状态"。')]),t._v(" "),e("p",[t._v("因为tag相当于一个快找，是不能更改他的代码的")]),t._v(" "),e("p",[t._v("如果要在tag代码的基础上做修改，你需要新建一个分支")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git checkout -b branch_name tag_name\n")])])]),e("h2",{attrs:{id:"git-rebase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[t._v("#")]),t._v(" Git rebase")]),t._v(" "),e("h3",{attrs:{id:"合并多个commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并多个commit"}},[t._v("#")]),t._v(" 合并多个commit")]),t._v(" "),e("p",[t._v("在使用Git作为版本控制的时候，我们可能会由于各种各样的原因提交了许多临时的commit，而这些commit拼接起来才是完整的任务。那么我们未了避免太多的commit而造成版本控制的混乱，通常我们推荐将这些commit合并成一个。")]),t._v(" "),e("h5",{attrs:{id:"查看提交历史-git-log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看提交历史-git-log"}},[t._v("#")]),t._v(" 查看提交历史，git log")]),t._v(" "),e("p",[t._v("首先你要知道自己想要合并的是哪几个分支，可以使用git log命令来查看提交历史，例如最近4条历史如下")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("commit 3ca6ec340edc66df13423f36f52919dfa3......\n\ncommit 1b4056686d1b494a5c86757f9eaed844......\n\ncommit 53f244ac8730d33b353bee3b24210b07......\n\ncommit 3a4226b4a0b6fa68783b07f1cee7b688.......\n")])])]),e("p",[t._v("历史记录是按照时间排序的，时间近的排在前面")]),t._v(" "),e("h5",{attrs:{id:"git-rebase-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase-2"}},[t._v("#")]),t._v(" git rebase")]),t._v(" "),e("p",[t._v("想要合并1-3条，有两个方法")]),t._v(" "),e("ol",[e("li",[t._v("从HEAD版本开始往过去数3个版本")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git rebase -i HEAD~3\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("指名要合并的版本之前的版本号")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git rebase -i 3a226a\n")])])]),e("p",[t._v("请注意3a226a这个版本是不参与合并的，可以把它当做一个坐标")]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("选取要合并的提交")])]),t._v(" "),e("p",[t._v("1.执行了rebase命令之后，会弹出一个窗口，头几行如下")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("pick 3ca6ec3   '注释**********'\n\npick 1b40566   '注释*********'\n\npick 53f244a   '注释**********'\n\n")])])]),e("p",[t._v("2.将pick改为squash或者s,之后保存并关闭文本编辑窗口即可。改完之后文本内容如下：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("pick 3ca6ec3   '注释**********'\n\ns 1b40566   '注释*********'\n\ns 53f244a   '注释**********'\n\n")])])]),e("p",[t._v("3.然后保存退出，Git会压缩提交历史，如果有冲突，需要修改，修改的时候要注意，保留最新的历史，不然我们的修改就丢弃了。修改以后要记得敲下面的命令：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git add .  \n\ngit rebase --continue  \n")])])]),e("p",[t._v("如果你想放弃这次压缩的话，执行以下命令：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git rebase --abort\n")])])]),e("p",[t._v("4.如果没有冲突，或者冲突已经解决，则会出现如下的编辑窗口")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# This is a combination of 4 commits.  \n#The first commit’s message is:  \n注释......\n# The 2nd commit’s message is:  \n注释......\n# The 3rd commit’s message is:  \n注释......\n# Please enter the commit message for your changes. Lines starting # with ‘#’ will be ignored, and an empty message aborts the commit.\n")])])]),e("p",[t._v("5.输入wq保存并推出, 再次输入git log查看 commit 历史信息，你会发现这两个 commit 已经合并了。")]),t._v(" "),e("h3",{attrs:{id:"git-rebase切换分支提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase切换分支提交"}},[t._v("#")]),t._v(" git rebase切换分支提交")]),t._v(" "),e("p",[t._v("假设Git目前只有一个分支master，开发人员的工作流程是")]),t._v(" "),e("ul",[e("li",[t._v("git clone master branch")]),t._v(" "),e("li",[t._v("在自己本地checkout -b local创建一个本地开发分支")]),t._v(" "),e("li",[t._v("在本地的开发分支上开发和测试")]),t._v(" "),e("li",[t._v("阶段性开发完成后(包含功能代码和单元测试)，可以准备提交代码\n"),e("ul",[e("li",[t._v("首先切换到master分支，git pulll拉去最新的分支状态")]),t._v(" "),e("li",[t._v("然后切回local分支")]),t._v(" "),e("li",[t._v("通过git rebase -i 将本地的多次提交合并为一个，以简化提交历史。"),e("strong",[t._v("本地有多个提交时，如果不进行这一步，在git rebase master时会有多次解决冲突(最坏情况下，每一次提交都会响应解决一个冲突)")])]),t._v(" "),e("li",[t._v("git rebase master 将master最新的分支同步到本地，这个过程可能需要手动解决冲突("),e("strong",[t._v("如果进行了上一步的话，只用解决一次冲突")]),t._v(")")]),t._v(" "),e("li",[t._v("然后切换到master分支，git merge将本地的分支合并到master分支")]),t._v(" "),e("li",[t._v("git pull 将master分支的提交上传")])])]),t._v(" "),e("li",[t._v("本地开发分支可以灵活管理")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git checkout master\ngit pull \ngit checkout local\ngit rebase -i HEAD~2 // 合并提交 ---- 2表示合并两个\ngit rebase master -----\x3e 解决冲突-----\x3e git rebase --continue\ngit checkout master\ngit merge local\ngit push\n")])])]),e("p",[t._v("提交历史就是这样的----是不是相比于git merge来说看起来很清爽☺☺☺")]),t._v(" "),e("h3",{attrs:{id:"例子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git pull origin mobile_1.0.0\ngit rebase origin/mobile_1.0.0\ngit push origin mobile_xz\n")])])]),e("p",[e("img",{attrs:{src:s(2034),alt:"git rebase"}})]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/nrsc272420199/article/details/85555911",target:"_blank",rel:"noopener noreferrer"}},[t._v("git rebase篇"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.jianshu.com/p/4a8f4af4e803",target:"_blank",rel:"noopener noreferrer"}},[t._v("rebase 用法小结"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"git-cherry-pick"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-cherry-pick"}},[t._v("#")]),t._v(" git cherry-pick")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git cherry-pick ff63dd2f6db7e0f88c7b87ae2a6b0649a28b7a30 6080c6ace9fd8eea290922f33a9ed0184f034a15 4945c98169d1312cdca4a7dcbb065c8a00cef394\n\n// 解决冲突\ngit add .\n\ngit cherry-pick --continue\n")])])]),e("p",[e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2020/04/git-cherry-pick.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("git cherry-pick 教程"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"使用git-remove而不删除文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用git-remove而不删除文件"}},[t._v("#")]),t._v(" 使用git remove而不删除文件")]),t._v(" "),e("p",[t._v("如果使用Git，那么随着项目的不断发展，可能一直都在添加文件。但是有时，您实际上可能需要从Git存储库中删除文件，而不是从本地文件中删除文件。例如，假设你忘记将文件添加到.gitignore但又不想从本地开发环境中删除。这可能是由于错误造成的,或者您没有意识到新的程序包或某些东西创建了一些您不想在回购中使用的讨厌的日志文件。无论那种方式，这实际上都很容易做到的。")]),t._v(" "),e("h3",{attrs:{id:"使用git删除单个文件而不是删除它"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用git删除单个文件而不是删除它"}},[t._v("#")]),t._v(" 使用Git删除单个文件而不是删除它")]),t._v(" "),e("p",[t._v("此方法将从您的Git存储库中删除一个文件，而不会从本地环境中删除该文件，然后当您运行git push，文件将在远程仓库中删除。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git rm --cached filexample.txt\n")])])]),e("h3",{attrs:{id:"使用git删除多个文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用git删除多个文件"}},[t._v("#")]),t._v(" 使用Git删除多个文件")]),t._v(" "),e("p",[t._v("以类似的方式，您可以一次对多个文件执行此操作")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git rm --cached file.txt file2.txt file2.txt\n")])])]),e("h3",{attrs:{id:"删除整个目录而不删除文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除整个目录而不删除文件"}},[t._v("#")]),t._v(" 删除整个目录而不删除文件")]),t._v(" "),e("p",[t._v("只要您将-r标志添加到命令中，这也可以递归的用于文件夹")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git rm -r --cached folder\n")])])]),e("h2",{attrs:{id:"清除所有untracked-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#清除所有untracked-file"}},[t._v("#")]),t._v(" 清除所有untracked file")]),t._v(" "),e("p",[t._v("有时候我们第一次进入公司从这个服务器上clone下来了这个工程，然后我们运行了。领导当我们修改了一点点小东西，然后准备提交了，很多人习惯 git add . 结果导致很多编译的文件也都add汲取了，当然也可以撤销这次提交重新做。但是我们建议。")]),t._v(" "),e("ol",[e("li",[t._v("添加修改过的单个或多个文件，不要视图去 git add .")]),t._v(" "),e("li",[t._v("提交时情记得过一遍进行过的修改，保证没问题")]),t._v(" "),e("li",[t._v("我们如果想保证有一个干净的工程(没有编译过的文件，大部分都是untracked file)，我们可以这样")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git clean -f ---是清除untracked文件\ngit clean -df --是清除untracked目录和文件\n")])])]),e("p",[t._v("这样我们为add的文件就不会被以为操作添加进来了")]),t._v(" "),e("p",[t._v("另外我们如果想撤销当前修改可以")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git reset --hard ---回到干净的时候\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("git clean命令用来从你的工作目录中删除所有没有tracked过的文件\ngit clean经常和git reset --hard一起结合使用，记住reset只影响被track过的文件，所以需要clean来删除没有trank过的文件，结合使用这两个命令能让你的目录完全回到一个指定的commit的状态")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/allanGold/article/details/79213606",target:"_blank",rel:"noopener noreferrer"}},[t._v("git clean"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"git-amend用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-amend用法"}},[t._v("#")]),t._v(" git --amend用法")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git commit --amend\n")])])]),e("p",[t._v("这个命令是然我可以对上一次提交有修改，可以修改文件也可以修改说明，不产生新的commit")]),t._v(" "),e("p",[t._v("在我们有一次提交，然后提交之后评审发现代码有问题，我们没有进行合入，需要重新修改，但是我们又不能产生新的commit")]),t._v(" "),e("h3",{attrs:{id:"第一种办法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一种办法"}},[t._v("#")]),t._v(" 第一种办法")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git rest --soft origin/branchname\n")])])]),e("p",[t._v("然后重新提交")]),t._v(" "),e("h3",{attrs:{id:"第二种办法-amend"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二种办法-amend"}},[t._v("#")]),t._v(" 第二种办法---amend")]),t._v(" "),e("p",[t._v("这种方法更简单，不用重新reset,直接修改commit信息就可以")]),t._v(" "),e("p",[t._v("如果不修改信息")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git commit --amend -no-edit\n\n// 或者有信息的修改的提交\ngit add .\n\ngit commit --amend\n")])])]),e("h2",{attrs:{id:"git-diff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-diff"}},[t._v("#")]),t._v(" git diff")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("git diff origin"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("feature"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("xz"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0617")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("diff\n")])])]),e("h2",{attrs:{id:"强推"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强推"}},[t._v("#")]),t._v(" 强推")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、在gitlab上找到要恢复的版本号，如：\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("139")]),t._v("dcfaa558e3276b30b6b2e5cbbb9c00bbdca96\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、在客户端执行如下命令（执行前，先将本地代码切换到对应分支）：\n\ngit reset "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("hard "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("139")]),t._v("dcfaa558e3276b30b6b2e5cbbb9c00bbdca96\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、强制push到对应的远程分支（如提交到develop分支）\n\ngit push "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u origin develop\n\n")])])]),e("p",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/100243017",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文档"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/w6718189/article/details/108873270",target:"_blank",rel:"noopener noreferrer"}},[t._v("git 修改之前的某次commit 注释和常见问题和解决方法"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);